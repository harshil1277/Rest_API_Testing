openapi: 3.0.1
info:
  title: API for String Case Study (SCS)
  description: Examples of different string algorithms accessible via REST
  version: "1.0"
servers:
- url: http://localhost:50108/
tags:
- name: scs-rest
  description: Scs Rest
paths:
  /api/calc/{op}/{arg1}/{arg2}:
    get:
      tags:
      - scs-rest
      summary: calc
      operationId: calcUsingGET
      parameters:
      - name: arg1
        in: path
        description: arg1
        required: true
        schema:
          type: number
          format: double
        example: 0.123
      - name: arg2
        in: path
        description: arg2
        required: true
        schema:
          type: number
          format: double
        example: 0.123
      - name: op
        in: path
        description: op
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/cookie/{name}/{val}/{site}:
    get:
      tags:
      - scs-rest
      summary: cookie
      operationId: cookieUsingGET
      parameters:
      - name: name
        in: path
        description: name
        required: true
        schema:
          type: string
        example: abc
      - name: site
        in: path
        description: site
        required: true
        schema:
          type: string
        example: abc
      - name: val
        in: path
        description: val
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/costfuns/{i}/{s}:
    get:
      tags:
      - scs-rest
      summary: costfuns
      operationId: costfunsUsingGET
      parameters:
      - name: i
        in: path
        description: i
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      - name: s
        in: path
        description: s
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/dateparse/{dayname}/{monthname}:
    get:
      tags:
      - scs-rest
      summary: dateParse
      operationId: dateParseUsingGET
      parameters:
      - name: dayname
        in: path
        description: dayname
        required: true
        schema:
          type: string
        example: abc
      - name: monthname
        in: path
        description: monthname
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/filesuffix/{directory}/{file}:
    get:
      tags:
      - scs-rest
      summary: fileSuffix
      operationId: fileSuffixUsingGET
      parameters:
      - name: directory
        in: path
        description: directory
        required: true
        schema:
          type: string
        example: abc
      - name: file
        in: path
        description: file
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/notypevar/{i}/{s}:
    get:
      tags:
      - scs-rest
      summary: notyPevar
      operationId: notyPevarUsingGET
      parameters:
      - name: i
        in: path
        description: i
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      - name: s
        in: path
        description: s
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/ordered4/{w}/{x}/{z}/{y}:
    get:
      tags:
      - scs-rest
      summary: ordered4
      operationId: ordered4UsingGET
      parameters:
      - name: w
        in: path
        description: w
        required: true
        schema:
          type: string
        example: abc
      - name: x
        in: path
        description: x
        required: true
        schema:
          type: string
        example: abc
      - name: y
        in: path
        description: y
        required: true
        schema:
          type: string
        example: abc
      - name: z
        in: path
        description: z
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/pat/{txt}:
    get:
      tags:
      - scs-rest
      summary: regex
      operationId: regexUsingGET
      parameters:
      - name: txt
        in: path
        description: txt
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/pat/{txt}/{pat}:
    get:
      tags:
      - scs-rest
      summary: pat
      operationId: patUsingGET
      parameters:
      - name: pat
        in: path
        description: pat
        required: true
        schema:
          type: string
        example: abc
      - name: txt
        in: path
        description: txt
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/text2txt/{word1}/{word2}/{word3}:
    get:
      tags:
      - scs-rest
      summary: text2txt
      operationId: text2txtUsingGET
      parameters:
      - name: word1
        in: path
        description: word1
        required: true
        schema:
          type: string
        example: abc
      - name: word2
        in: path
        description: word2
        required: true
        schema:
          type: string
        example: abc
      - name: word3
        in: path
        description: word3
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/title/{sex}/{title}:
    get:
      tags:
      - scs-rest
      summary: title
      operationId: titleUsingGET
      parameters:
      - name: sex
        in: path
        description: sex
        required: true
        schema:
          type: string
        example: abc
      - name: title
        in: path
        description: title
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
components: {}
