openapi: 3.0.1
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
servers:
- url: http://localhost:50105/
tags:
- name: register-request-controller
  description: Register Request Controller
- name: notifications-controller
  description: Notifications Controller
- name: admin-controller
  description: Admin Controller
- name: endpoint-mvc-adapter
  description: Endpoint Mvc Adapter
- name: print-request-controller
  description: Print Request Controller
- name: printing-schema-controller
  description: Printing Schema Controller
- name: consumer-controller
  description: Consumer Controller
- name: manager-controller
  description: Manager Controller
- name: metrics-mvc-endpoint
  description: Metrics Mvc Endpoint
- name: print-shop-controller
  description: Print Shop Controller
- name: default-controller
  description: Default Controller
- name: heapdump-mvc-endpoint
  description: Heapdump Mvc Endpoint
- name: employee-controller
  description: Employee Controller
- name: basic-error-controller
  description: Basic Error Controller
- name: pay-pal-controller
  description: Pay Pal Controller
- name: review-controller
  description: Review Controller
- name: environment-mvc-endpoint
  description: Environment Mvc Endpoint
- name: health-mvc-endpoint
  description: Health Mvc Endpoint
- name: price-table-controller
  description: Price Table Controller
paths:
  /:
    get:
      tags:
      - default-controller
      summary: index
      operationId: indexUsingGET
      requestBody:
        description: map
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties: {}
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: map
  /*:
    options:
      tags:
      - default-controller
      summary: handleOptions
      operationId: handleOptionsUsingOPTIONS
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /admin/printshops:
    get:
      tags:
      - admin-controller
      summary: Returns the list of all printshops.
      description: This method allows the admin entity to access all printshop's information
        registered in the platform.
      operationId: getPrinShopsListUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /admin/register:
    post:
      tags:
      - admin-controller
      summary: Returns success/insuccess.
      description: This method allows the register of an admin entity.
      operationId: newAdminUsingPOST
      requestBody:
        description: admin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Admin'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: admin
  /admin/seed:
    post:
      tags:
      - admin-controller
      summary: Returns nothing.
      description: This method allows developers to fill in the database with fake
        but consistent data.
      operationId: seedUsingPOST
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /admin/useed:
    post:
      tags:
      - admin-controller
      summary: Returns nothing.
      description: This method allows developers to fill in the database with fake
        consumer accounts.
      operationId: useedUsingPOST
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/secured:
    get:
      tags:
      - default-controller
      summary: secured
      operationId: securedUsingGET
      requestBody:
        description: map
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties: {}
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: map
  /autoconfig:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /autoconfig.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /beans:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /beans.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_3
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /configprops:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_4
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /configprops.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_5
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /consumer/balance:
    get:
      tags:
      - consumer-controller
      summary: Returns a certain consumer's balance.
      description: Returns the consumer's balance, normaly used for update purposes.
      operationId: getConsumerBalanceUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/budget:
    post:
      tags:
      - print-request-controller
      summary: Returns a set of budgets
      description: This method calculates budgets for a given and already specified
        print request. The budgets are calculated for specific printshops also passed
        along as parameters.
      operationId: calcBudgetForPrintRequestUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              required:
              - requestJSON
              properties:
                requestJSON:
                  type: string
                  description: requestJSON
                  example: abc
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /consumer/info:
    get:
      tags:
      - consumer-controller
      summary: Returns all the user information
      description: This method allows consumers to get their personal information.
      operationId: getConsumerInfoUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/info/update:
    put:
      tags:
      - consumer-controller
      summary: Updates the consumer information
      description: This method allows consumers to update their personal information.
      operationId: updateConsumerInfoUsingPUT
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/notifications:
    get:
      tags:
      - notifications-controller
      summary: Returns list of notifications.
      description: This method retrieves to consumer his list of notifications.
      operationId: getConsumerNotificationsUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/printrequest/{printRequestID}/submit:
    post:
      tags:
      - print-request-controller
      summary: Returns success/insuccess
      description: This method allow clients to POST a print request and associate
        it to a given printshop with a given budget, the payment may or not occur
        according to the payment method.
      operationId: finishAndSubmitPrintRequestUsingPOST
      parameters:
      - name: printRequestID
        in: path
        description: printRequestID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/register:
    post:
      tags:
      - consumer-controller
      summary: Returns success/insuccess
      description: This method allows consumer registration.
      operationId: addUserUsingPOST
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
  /consumer/requests:
    get:
      tags:
      - consumer-controller
      summary: Returns pending requests.
      description: This method retrieves to the consumer his pending requests.
      operationId: getRequestsUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/requests/cancel/{id}:
    delete:
      tags:
      - consumer-controller
      summary: Returns success/insuccess.
      description: This method allows consumers to cancel a pending request.
      operationId: cancelRequestsUsingDELETE
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
  /consumer/satisfied:
    get:
      tags:
      - consumer-controller
      summary: Returns satisfied requests.
      description: This method retrieves the history of satisfied requests from a
        consumer.
      operationId: getPrintShopSatisfiedRequestsUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /consumer/subscribe:
    get:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingGET
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
    put:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingPUT
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
    post:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingPOST
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
    delete:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingDELETE
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: request
    options:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingOPTIONS
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: request
    head:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingHEAD
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: request
    patch:
      tags:
      - notifications-controller
      summary: Returns success/insuccess.
      description: This method allows a consumer to subscribe the SSE.
      operationId: subscribeUsingPATCH
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: request
  /consumer/{consumerID}/printingschemas:
    get:
      tags:
      - printing-schema-controller
      summary: Returns a set of the printing schemas.
      description: This method allows consumers to get his PrintingSchemas.
      operationId: getConsumerPrintingSchemasUsingGET
      parameters:
      - name: consumerID
        in: path
        description: consumerID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
      - printing-schema-controller
      summary: Returns success/insuccess.
      description: This method allows consumers to add a new printing schema to his
        printing schemas collection.
      operationId: addNewConsumerPrintingSchemaUsingPOST
      parameters:
      - name: consumerID
        in: path
        description: consumerID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: ps
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintingSchema'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: ps
  /consumer/{consumerID}/printingschemas/{printingSchemaID}:
    put:
      tags:
      - printing-schema-controller
      summary: Returns success/insuccess.
      description: This method allows consumers to edit a printing schema from his
        printing schemas collection.
      operationId: editConsumerPrintingSchemaUsingPUT
      parameters:
      - name: consumerID
        in: path
        description: consumerID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      - name: printingSchemaID
        in: path
        description: printingSchemaID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: pschema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintingSchema'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: pschema
    delete:
      tags:
      - printing-schema-controller
      summary: Returns success/insuccess.
      description: This method allows consumers to delete a printing schema from his
        printing schemas collection.
      operationId: deleteConsumerPrintingSchemaUsingDELETE
      parameters:
      - name: consumerID
        in: path
        description: consumerID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      - name: printingSchemaID
        in: path
        description: printingSchemaID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /consumer/{id}/notify:
    post:
      tags:
      - notifications-controller
      summary: Returns nothing
      description: This method sends a notification to a consumer.
      operationId: greetingUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
  /consumer/{username}/notifications:
    put:
      tags:
      - consumer-controller
      summary: Returns success/insuccess.
      description: This method allows consumers to mark as read all notifications.
      operationId: readAllNotificationsUsingPUT
      parameters:
      - name: username
        in: path
        description: username
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    delete:
      tags:
      - consumer-controller
      summary: Returns success/insuccess.
      description: This method allows consumers to remove all notifications.
      operationId: deleteAllNotificationsUsingDELETE
      parameters:
      - name: username
        in: path
        description: username
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /documents/{id}:
    get:
      tags:
      - employee-controller
      summary: Returns a document
      description: This method allows employees to get a document by a given id.
      operationId: getEmployeesUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileSystemResource'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /dump:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_6
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /dump.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_7
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /env:
    get:
      tags:
      - environment-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_14
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /env.json:
    get:
      tags:
      - environment-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_15
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /env/{name}:
    get:
      tags:
      - environment-mvc-endpoint
      summary: value
      operationId: valueUsingGET
      parameters:
      - name: name
        in: path
        description: name
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /error:
    get:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    delete:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
    options:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
    head:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
    patch:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /health:
    get:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_16
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    put:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingPUT
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    post:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingPOST
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    delete:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingDELETE
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
    options:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingOPTIONS
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
    head:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingHEAD
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
    patch:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingPATCH
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
  /health.json:
    get:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_17
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    put:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingPUT_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    post:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingPOST_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    delete:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingDELETE_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
    options:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingOPTIONS_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
    head:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingHEAD_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
    patch:
      tags:
      - health-mvc-endpoint
      summary: invoke
      operationId: invokeUsingPATCH_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
  /heapdump:
    get:
      tags:
      - heapdump-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_18
      parameters:
      - name: live
        in: query
        description: live
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: OK
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /heapdump.json:
    get:
      tags:
      - heapdump-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_19
      parameters:
      - name: live
        in: query
        description: live
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: OK
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /info:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_8
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /info.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_9
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /login:
    post:
      tags:
      - default-controller
      summary: Returns success/insuccess.
      description: This method validates the login data from a user.
      operationId: loginUsingPOST
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
  /mappings:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /mappings.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_11
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /metrics:
    get:
      tags:
      - metrics-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /metrics.json:
    get:
      tags:
      - metrics-mvc-endpoint
      summary: invoke
      operationId: invokeUsingGET_21
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /metrics/{name}:
    get:
      tags:
      - metrics-mvc-endpoint
      summary: value
      operationId: valueUsingGET_1
      parameters:
      - name: name
        in: path
        description: name
        required: true
        schema:
          type: string
        example: abc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /notifications/{notificationId}:
    put:
      tags:
      - notifications-controller
      summary: Returns success.
      description: This method allows consumers to mark a notification as read.
      operationId: readNotificationUsingPUT
      parameters:
      - name: notificationId
        in: path
        description: notificationId
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    delete:
      tags:
      - notifications-controller
      summary: Returns success.
      description: This method allows consumers to delete a notification.
      operationId: deleteNotificationUsingDELETE
      parameters:
      - name: notificationId
        in: path
        description: notificationId
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: request
  /paypal/ipn/consumer/{consumerID}:
    post:
      tags:
      - pay-pal-controller
      summary: It confirms that a certain consumer has pay its load up on ProxyPrint.
      description: Its a route for being remotely called by PayPal servers.
      operationId: consumerLoadUpConfirmationUsingPOST
      parameters:
      - name: consumerID
        in: path
        description: consumerID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /paypal/ipn/{printRequestID}:
    post:
      tags:
      - pay-pal-controller
      summary: Returns nothing
      description: This method implements the payment check mechanism given by PayPal.
        This method acts as callback, it reacts to the change of status of a transaction
        to Completed (eCheck - complete).
      operationId: someRequestPaymentConfirmationFromPaylPalUsingPOST
      parameters:
      - name: printRequestID
        in: path
        description: printRequestID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printdocument:
    post:
      tags:
      - print-request-controller
      summary: Returns a Print Request ID
      description: This method allows other platforms to print a document using ProxyPrint
      operationId: printDocumentUsingPOST
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printdocument/{id}:
    get:
      tags:
      - print-request-controller
      summary: Returns a document
      description: 'This method returns the document from a print request '
      operationId: getDocumentUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printdocument/{id}/budget:
    post:
      tags:
      - print-request-controller
      summary: Returns a set of budgets
      description: This method calculates budgets for a given and already specified
        print request. The budgets are calculated for specific printshops also passed
        along as parameters.
      operationId: calcBudgetForPrintRecipeUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshop:
    get:
      tags:
      - manager-controller
      summary: Returns a printshop
      description: This method allows manager to get his printshop info
      operationId: getManagerPrintShopUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshops:
    get:
      tags:
      - print-shop-controller
      summary: Returns a printshop
      description: This method returns a list of printshop with info from each one.
      operationId: getPrintShopsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printshops/history:
    get:
      tags:
      - print-shop-controller
      summary: Returns the history of requests.
      description: Returns the history of requests from a printshop.
      operationId: getPrintShopHistoryRequestsUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshops/nearest:
    get:
      tags:
      - print-shop-controller
      summary: Returns a list of printshops.
      description: This method returns a list of the nearest printshops.
      operationId: getNearestPrintShopsUsingGET
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
  /printshops/requests:
    get:
      tags:
      - print-shop-controller
      summary: Returns pending requests.
      description: Returns the pending and in progress requests from a printshop.
      operationId: getPrintShopRequestsUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshops/requests/cancel/{id}:
    post:
      tags:
      - print-shop-controller
      summary: Returns success/insuccess.
      description: This method allows a employee to cancel a print resquest.
      operationId: cancelPrintShopRequestsUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: motive
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: motive
  /printshops/requests/{id}:
    get:
      tags:
      - print-shop-controller
      summary: Returns a request.
      description: Returns the corresponding request from a printshop.
      operationId: getPrintShopRequestUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
    post:
      tags:
      - print-shop-controller
      summary: Returns the new status.
      description: Returns the new status of the corresponding print request.
      operationId: changeStatusPrintShopRequestsUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshops/satisfied:
    get:
      tags:
      - print-shop-controller
      summary: Returns satisfied requests.
      description: Returns the satisfied requests from a printshop.
      operationId: getPrintShopSatisfiedRequestsUsingGET_1
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshops/stats:
    get:
      tags:
      - manager-controller
      summary: Returns success/insuccess.
      description: This method allows a manager to get the statistics info from his
        printshop.
      operationId: getPrintShopStatisticsUsingGET
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: principal
  /printshops/{id}:
    get:
      tags:
      - print-shop-controller
      summary: Returns a printshop
      description: This method returns the printshop info
      operationId: getPrintShopUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printshops/{id}/pricetable:
    get:
      tags:
      - print-shop-controller
      summary: Returns a pricetable
      description: This method returns a pricetable of a specific printshop.
      operationId: getPrintShopPriceTableUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printshops/{id}/pricetable/covers:
    put:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Edit an existent Cover Item to a price table of a certain print
        shop.
      operationId: editCoverItemUsingPUT
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: cti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: cti
    post:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Add a new Cover Item to a price table of a certain print shop.
      operationId: addNewCoverItemUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: cti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: cti
  /printshops/{id}/pricetable/deletecover:
    post:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Delete an existent Cover Item to a price table of a certain print
        shop.
      operationId: deleteCoverItemUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: cti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: cti
  /printshops/{id}/pricetable/deletepaper:
    post:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Delete a new Paper Item from a price table of a certain print shop.
      operationId: deletePaperItemUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: pti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: pti
  /printshops/{id}/pricetable/deletering:
    post:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Delete an existing Rings Item to a price table of a certain print
        shop.
      operationId: deleteRingItemUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: rti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: rti
  /printshops/{id}/pricetable/papers:
    put:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Edition of a new Paper Item from a price table of a certain print
        shop.
      operationId: editPaperItemUsingPUT
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: pti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: pti
    post:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Addition of a new Paper Item to a price table of a certain print
        shop.
      operationId: addNewPaperItemUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: pti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: pti
  /printshops/{id}/pricetable/rings:
    put:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Edition of an existing Rings Item to a price table of a certain
        print shop.
      operationId: editRingsItemUsingPUT
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: rti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: rti
    post:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Addition of a new Rings Item to a price table of a certain print
        shop.
      operationId: addNewRingsItemUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: rti
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingTableItem'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: rti
  /printshops/{id}/reviews:
    get:
      tags:
      - review-controller
      summary: Returns all printshop reviews
      description: 404 if the printshop doesn't exist.
      operationId: getPrintShopReviewsUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
      - review-controller
      summary: Add a review to a printshop with the given ID
      description: 404 if the printshop doesn't exist.
      operationId: addPrintShopReviewUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: params
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: params
  /printshops/{printShopID}/employees:
    get:
      tags:
      - manager-controller
      summary: Returns list of employees.
      description: This method allows a manager to get the list of employees from
        his printshop.
      operationId: getEmployeesUsingGET_1
      parameters:
      - name: printShopID
        in: path
        description: printShopID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
      - manager-controller
      summary: Returns success/insuccess.
      description: This method allows a manager to edit a employee from his printshop.
      operationId: editEmployeeUsingPUT
      parameters:
      - name: printShopID
        in: path
        description: printShopID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
      - manager-controller
      summary: Returns success/insuccess.
      description: This method allows a manager to add a employee to his printshop.
      operationId: addEmployeeUsingPOST
      parameters:
      - name: printShopID
        in: path
        description: printShopID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /printshops/{printShopID}/employees/{employeeID}:
    delete:
      tags:
      - manager-controller
      summary: Returns success/insuccess.
      description: This method allows a manager to delete a employee from his printshop.
      operationId: deleteEmployeeUsingDELETE
      parameters:
      - name: printShopID
        in: path
        description: printShopID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      - name: employeeID
        in: path
        description: employeeID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /printshops/{printShopID}/pricetable/editstapling:
    put:
      tags:
      - price-table-controller
      summary: Returns success/insuccess
      description: Edit the stapling price property table of a certain print shop.
      operationId: editStaplingPriceUsingPUT
      parameters:
      - name: printShopID
        in: path
        description: printShopID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: newStaplingPrice
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: newStaplingPrice
  /printshops/{printShopId}/reviews/{reviewId}:
    put:
      tags:
      - review-controller
      summary: Edit an existing printshop review
      description: 404 if the printshop or the review doesn't exist.
      operationId: editPrintShopReviewUsingPUT
      parameters:
      - name: printShopId
        in: path
        description: printShopId
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      - name: reviewId
        in: path
        description: reviewId
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
    delete:
      tags:
      - review-controller
      summary: Delete an existing printshop review
      description: 404 if the printshop or the review doesn't exist.
      operationId: deletePrintShopReviewUsingDELETE
      parameters:
      - name: printShopId
        in: path
        description: printShopId
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      - name: reviewId
        in: path
        description: reviewId
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: principal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
        required: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: principal
  /request/accept/{id}:
    post:
      tags:
      - register-request-controller
      summary: Returns success/insuccess.
      description: This method allows the admin to accept a register request from
        a printshop.
      operationId: acceptRequestUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /request/register:
    post:
      tags:
      - register-request-controller
      summary: Returns success.
      description: This method allows to add a register request to a new printshop.
      operationId: registerRequestUsingPOST
      requestBody:
        description: registerRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegisterRequest'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: registerRequest
  /request/reject/{printRequestID}:
    post:
      tags:
      - register-request-controller
      summary: Returns success/insuccess.
      description: This method allows the admin to reject a register request from
        a printshop.
      operationId: rejectRequestUsingPOST
      parameters:
      - name: printRequestID
        in: path
        description: printRequestID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        description: motive
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: motive
  /requests/pending:
    get:
      tags:
      - register-request-controller
      summary: Returns a list of pending register requests.
      description: This method allows the admin to get a list of pending register
        requests.
      operationId: acceptRequestUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegisterRequest'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /trace:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_12
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /trace.json:
    get:
      tags:
      - endpoint-mvc-adapter
      summary: invoke
      operationId: invokeUsingGET_13
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
components:
  schemas:
    Locale:
      type: object
    RegisterRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        managerEmail:
          type: string
        managerName:
          type: string
        managerPassword:
          type: string
        managerUsername:
          type: string
        pShopAddress:
          type: string
        pShopDateRequest:
          type: string
        pShopDateRequestAccepted:
          type: string
        pShopLatitude:
          type: number
          format: double
        pShopLongitude:
          type: number
          format: double
        pShopNIF:
          type: string
        pShopName:
          type: string
    InputStream:
      type: object
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    OutputStream:
      type: object
    ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
          properties: {}
        modelMap:
          type: object
          additionalProperties:
            type: object
            properties: {}
        reference:
          type: boolean
        status:
          type: string
          enum:
          - "100"
          - "101"
          - "102"
          - "103"
          - "200"
          - "201"
          - "202"
          - "203"
          - "204"
          - "205"
          - "206"
          - "207"
          - "208"
          - "226"
          - "300"
          - "301"
          - "302"
          - "303"
          - "304"
          - "305"
          - "307"
          - "308"
          - "400"
          - "401"
          - "402"
          - "403"
          - "404"
          - "405"
          - "406"
          - "407"
          - "408"
          - "409"
          - "410"
          - "411"
          - "412"
          - "413"
          - "414"
          - "415"
          - "416"
          - "417"
          - "418"
          - "419"
          - "420"
          - "421"
          - "422"
          - "423"
          - "424"
          - "426"
          - "428"
          - "429"
          - "431"
          - "451"
          - "500"
          - "501"
          - "502"
          - "503"
          - "504"
          - "505"
          - "506"
          - "507"
          - "508"
          - "509"
          - "510"
          - "511"
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    GregorianCalendar:
      type: object
      properties:
        fieldsComputed:
          type: integer
          format: int32
        fieldsNormalized:
          type: integer
          format: int32
        firstDayOfWeek:
          type: integer
          format: int32
        gregorianChange:
          type: integer
          format: int64
        lenient:
          type: boolean
        minimalDaysInFirstWeek:
          type: integer
          format: int32
        time:
          type: string
          format: date-time
        timeInMillis:
          type: integer
          format: int64
        timeZone:
          $ref: '#/components/schemas/TimeZone'
        weekCountData:
          $ref: '#/components/schemas/Locale'
        zoneShared:
          type: boolean
    FileSystemResource:
      type: object
      properties:
        description:
          type: string
        filename:
          type: string
        inputStream:
          $ref: '#/components/schemas/InputStream'
        outputStream:
          $ref: '#/components/schemas/OutputStream'
        path:
          type: string
        readable:
          type: boolean
        uri:
          $ref: '#/components/schemas/URI'
        url:
          $ref: '#/components/schemas/URL'
        writable:
          type: boolean
    Admin:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/Money'
        email:
          type: string
        id:
          type: integer
          format: int64
        roles:
          $ref: '#/components/schemas/CollectionGrantedAuthority'
        rolesSet:
          type: array
          items:
            type: string
        username:
          type: string
    CollectionGrantedAuthority:
      type: object
    View:
      type: object
      properties:
        contentType:
          type: string
    URI:
      type: object
      properties:
        absolute:
          type: boolean
        authority:
          type: string
        fragment:
          type: string
        host:
          type: string
        opaque:
          type: boolean
        path:
          type: string
        port:
          type: integer
          format: int32
        query:
          type: string
        rawAuthority:
          type: string
        rawFragment:
          type: string
        rawPath:
          type: string
        rawQuery:
          type: string
        rawSchemeSpecificPart:
          type: string
        rawUserInfo:
          type: string
        scheme:
          type: string
        schemeSpecificPart:
          type: string
        userInfo:
          type: string
    URL:
      type: object
      properties:
        authority:
          type: string
        content:
          type: object
          properties: {}
        defaultPort:
          type: integer
          format: int32
        file:
          type: string
        host:
          type: string
        path:
          type: string
        port:
          type: integer
          format: int32
        protocol:
          type: string
        query:
          type: string
        ref:
          type: string
        userInfo:
          type: string
    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
        readStatus:
          type: boolean
        timestamp:
          type: string
          format: date-time
    Money:
      type: object
      properties:
        currency:
          type: string
        fractionalPart:
          type: integer
          format: int32
        integerPart:
          type: integer
          format: int32
        moneyAsDouble:
          type: number
          format: double
        valid:
          type: boolean
    ResponseEntity:
      type: object
      properties:
        body:
          type: object
          properties: {}
        statusCode:
          type: string
          enum:
          - "100"
          - "101"
          - "102"
          - "103"
          - "200"
          - "201"
          - "202"
          - "203"
          - "204"
          - "205"
          - "206"
          - "207"
          - "208"
          - "226"
          - "300"
          - "301"
          - "302"
          - "303"
          - "304"
          - "305"
          - "307"
          - "308"
          - "400"
          - "401"
          - "402"
          - "403"
          - "404"
          - "405"
          - "406"
          - "407"
          - "408"
          - "409"
          - "410"
          - "411"
          - "412"
          - "413"
          - "414"
          - "415"
          - "416"
          - "417"
          - "418"
          - "419"
          - "420"
          - "421"
          - "422"
          - "423"
          - "424"
          - "426"
          - "428"
          - "429"
          - "431"
          - "451"
          - "500"
          - "501"
          - "502"
          - "503"
          - "504"
          - "505"
          - "506"
          - "507"
          - "508"
          - "509"
          - "510"
          - "511"
        statusCodeValue:
          type: integer
          format: int32
    TimeZone:
      type: object
      properties:
        id:
          type: string
        rawOffset:
          type: integer
          format: int32
    PaperTableItem:
      type: object
      properties:
        colors:
          type: string
        infLim:
          type: integer
          format: int32
        priceA3DUPLEX:
          type: string
        priceA3SIMPLEX:
          type: string
        priceA4DUPLEX:
          type: string
        priceA4SIMPLEX:
          type: string
        supLim:
          type: integer
          format: int32
    SseEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    CoverTableItem:
      type: object
      properties:
        coverType:
          type: string
        priceA3:
          type: string
        priceA4:
          type: string
    File:
      type: object
      properties:
        absolute:
          type: boolean
        absolutePath:
          type: string
        canonicalPath:
          type: string
        directory:
          type: boolean
        file:
          type: boolean
        freeSpace:
          type: integer
          format: int64
        hidden:
          type: boolean
        name:
          type: string
        parent:
          type: string
        path:
          type: string
        totalSpace:
          type: integer
          format: int64
        usableSpace:
          type: integer
          format: int64
    RingTableItem:
      type: object
      properties:
        infLim:
          type: integer
          format: int32
        price:
          type: string
        ringType:
          type: string
        supLim:
          type: integer
          format: int32
    PrintingSchema:
      type: object
      properties:
        bindingSpecs:
          type: string
        coverSpecs:
          type: string
        deleted:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        paperSpecs:
          type: string
    Principal:
      type: object
      properties:
        name:
          type: string
    WebRequest:
      type: object
