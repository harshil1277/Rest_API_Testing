{
	"swagger": "2.0",
	"info": {
		"title": "Open Bank Project API",
		"description": "An Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2018. Licensed under the AGPL and commercial licences.",
		"contact": {
			"name": "TESOBE Ltd. / Open Bank Project",
			"url": "https://openbankproject.com",
			"email": "contact@tesobe.com"
		},
		"version": "v3.1.0"
	},
	"host": "apisandbox.openbankproject.com",
	"basePath": "/",
	"schemes": [
		"http",
		"https"
	],
	"securityDefinitions": {
		"directLogin": {
			"type": "apiKey",
			"description": "https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login",
			"in": "header",
			"name": "Authorization"
		},
		"gatewayLogin": {
			"type": "apiKey",
			"description": "https://github.com/OpenBankProject/OBP-API/wiki/Gateway-Login",
			"in": "header",
			"name": "Authorization"
		}
	},
	"security": [
		{
			"directLogin": [

			],
			"gatewayLogin": [

			]
		}
	],
	"paths": {
		"/obp/v3.1.0/accounts/public": {
			"get": {
				"tags": [
					"Account-Public",
					"Account",
					"PublicData"
				],
				"summary": "Get Public Accounts at all Banks.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get public accounts at all banks (Anonymous access).<br />Returns accounts that contain at least one public view (a view where is_public is true)<br />For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>",
				"operationId": "OBPv2.0.0-publicAccountsAllBanks",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BasicAccountsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/adapter": {
			"get": {
				"tags": [
					"API",
					"New-Style"
				],
				"summary": "Get Adapter Info (general)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get basic information about the Adapter.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getAdapterInfo",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdapterInfoJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/api/glossary": {
			"get": {
				"tags": [
					"Documentation"
				],
				"summary": "Get API Glossary",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the glossary of the API</p>",
				"operationId": "OBPv3.0.0-glossary",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/GlossaryItemsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks": {
			"get": {
				"tags": [
					"Bank",
					"New-Style"
				],
				"summary": "Get Banks",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get banks on this API instance<br />Returns a list of banks supported on this server:</p><ul><li>ID used as parameter in URLs</li><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul>",
				"operationId": "OBPv3.0.0-getBanks",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BanksJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Bank"
				],
				"summary": "Create Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create a new bank (Authenticated access).<br />Authentication is Mandatory</p>",
				"operationId": "OBPv2.2.0-createBank",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/BankJSONV220"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BankJSONV220"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}": {
			"get": {
				"tags": [
					"Bank",
					"New-Style"
				],
				"summary": "Get Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the bank specified by BANK_ID<br />Returns information about a single bank specified by BANK_ID including:</p><ul><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul>",
				"operationId": "OBPv3.0.0-bankById",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BankJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/account-applications": {
			"get": {
				"tags": [
					"Account-Application",
					"Account",
					"New-Style"
				],
				"summary": "Get Account Applications",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Account Applications.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getAccountApplications",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountApplicationsJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Account-Application",
					"Account",
					"New-Style"
				],
				"summary": "Create Account Application",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Account Application</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createAccountApplication",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountApplicationJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountApplicationResponseJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/account-applications/ACCOUNT_APPLICATION_ID": {
			"get": {
				"tags": [
					"Account-Application",
					"Account",
					"New-Style"
				],
				"summary": "Get Account Application by Id",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Account Application.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getAccountApplication",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountApplicationResponseJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Account-Application",
					"Account",
					"New-Style"
				],
				"summary": "Update Account Application Status",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update an Account Application status</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-updateAccountApplicationStatus",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountApplicationUpdateStatusJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountApplicationResponseJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks": {
			"post": {
				"tags": [
					"Webhook",
					"Bank",
					"New-Style"
				],
				"summary": "Create an Account Webhook",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create an Account Webhook</p><p>Webhooks are used to call external URLs when certain events happen.</p><p>Account Webhooks focus on events around accounts.</p><p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p><p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p>",
				"operationId": "OBPv3.1.0-createAccountWebhook",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountWebhookPostJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountWebhookJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Webhook",
					"Bank",
					"New-Style"
				],
				"summary": "Enable/Disable an Account Webhook",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Enable/Disable an Account Webhook</p><p>Webhooks are used to call external URLs when certain events happen.</p><p>Account Webhooks focus on events around accounts.</p><p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p><p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p>",
				"operationId": "OBPv3.1.0-enableDisableAccountWebhook",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountWebhookPutJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountWebhookJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts": {
			"get": {
				"tags": [
					"Account",
					"PrivateData",
					"PublicData",
					"New-Style"
				],
				"summary": "Get Accounts at Bank.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the list of accounts at BANK_ID that the user has access to.<br />For each account the API returns the account ID and the views available to the user..<br />Each account must have at least one private View.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.0.0-getPrivateAccountsAtOneBank",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BasicAccountsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts-held": {
			"get": {
				"tags": [
					"Account",
					"View",
					"New-Style"
				],
				"summary": "Get Accounts Held",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Accounts held by the current User if even the User has not been assigned the owner View yet.</p><p>Can be used to onboard the account to the API - since all other account and transaction endpoints require views to be assigned.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getAccountsHeld",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CoreAccountsHeldJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}": {
			"post": {
				"tags": [
					"Account"
				],
				"summary": "Update Account Label.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update the label for the account. The label is how the account is known to the account owner e.g. &lsquo;My savings account&rsquo;</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv1.2.1-updateAccountLabel",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UpdateAccountJSON"
						}
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Account",
					"Onboarding"
				],
				"summary": "Create Account",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.</p><p>The User can create an Account for themself or an Account for another User if they have CanCreateAccount role.</p><p>If USER_ID is not specified the account will be owned by the logged in User.</p><p>The type field should be a product_code from Product.</p><p>Note: The Amount must be zero.</p>",
				"operationId": "OBPv2.2.0-createAccount",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateAccountJSONV220"
						}
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateAccountJSONV220"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account": {
			"get": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Get Account by Id (Full)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>IBAN</li><li>Available views (sorted by short_name)</li></ul><p>More details about the data moderation by the view <a href=\"#1_2_1-getViewsForBankAccount\">here</a>.</p><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />This call provides balance and other account information via delegated authentication using OAuth.</p><p>Authentication is required if the &lsquo;is_public&rsquo; field in view (VIEW_ID) is not set to <code>true</code>.</p>",
				"operationId": "OBPv3.0.0-getPrivateAccountById",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ModeratedCoreAccountJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders": {
			"get": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Get Checkbook orders",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><pre><code>  Get all checkbook orders</code></pre>",
				"operationId": "OBPv3.1.0-getCheckbookOrders",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CheckbookOrdersJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties": {
			"get": {
				"tags": [
					"Counterparty",
					"Account"
				],
				"summary": "Get Counterparties (Explicit).",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Counterparties (Explicit) for the account / view.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.2.0-getExplictCounterpartiesForAccount",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CounterpartiesJsonV220"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty",
					"Account"
				],
				"summary": "Create Counterparty (Explicit)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Counterparty (Explicit) for an Account.</p><p>In OBP, there are two types of Counterparty.</p><ul><li><p>Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests</p></li><li><p>Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.</p></li></ul><p>Explicit Counterparties are created for the account / view<br />They are how the user of the view (e.g. account owner) refers to the other side of the transaction</p><p>name : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>description : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>bank_routing_scheme : eg: bankId or bankCode or any other strings</p><p>bank_routing_address : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p><p>account_routing_scheme : eg: AccountId or AccountNumber or any other strings</p><p>account_routing_address : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p><p>other_account_secondary_routing_scheme : eg: IBan or any other strings</p><p>other_account_secondary_routing_address : if it is IBan, it should be unique for each counterparty.</p><p>other_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.</p><p>other_branch_routing_address : eg: <code>branch-id-123</code> or you can leave it empty, not useful in sandbox mode.</p><p>is_beneficiary : must be set to <code>true</code> in order to send payments to this counterparty</p><p>bespoke: It support list of key-value, you can add it to the counterarty.</p><p>bespoke.key : any info-key you want to add to this counerparty</p><p>bespoke.value : any info-value you want to add to this counerparty</p><p>The view specified by VIEW_ID must have the canAddCounterparty permission</p><p>A minimal example for TransactionRequestType == COUNTERPARTY<br />{<br />&ldquo;name&rdquo;: &ldquo;Tesobe1&rdquo;,<br />&ldquo;description&rdquo;: &ldquo;Good Company&rdquo;,<br />&ldquo;other_bank_routing_scheme&rdquo;: &ldquo;bankId&rdquo;,<br />&ldquo;other_bank_routing_address&rdquo;: &ldquo;gh.29.uk&rdquo;,<br />&ldquo;other_account_routing_scheme&rdquo;: &ldquo;accountId&rdquo;,<br />&ldquo;other_account_routing_address&rdquo;: &ldquo;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&rdquo;,<br />&ldquo;is_beneficiary&rdquo;: true,<br />&ldquo;other_account_secondary_routing_scheme&rdquo;: &quot;&quot;,<br />&ldquo;other_account_secondary_routing_address&rdquo;: &quot;&quot;,<br />&ldquo;other_branch_routing_scheme&rdquo;: &quot;&quot;,<br />&ldquo;other_branch_routing_address&rdquo;: &quot;&quot;,<br />&ldquo;bespoke&rdquo;: []<br />}</p><p>A minimal example for TransactionRequestType == SEPA</p><p>{<br />&ldquo;name&rdquo;: &ldquo;Tesobe2&rdquo;,<br />&ldquo;description&rdquo;: &ldquo;Good Company&rdquo;,<br />&ldquo;other_bank_routing_scheme&rdquo;: &ldquo;bankId&rdquo;,<br />&ldquo;other_bank_routing_address&rdquo;: &ldquo;gh.29.uk&rdquo;,<br />&ldquo;other_account_routing_scheme&rdquo;: &ldquo;accountId&rdquo;,<br />&ldquo;other_account_routing_address&rdquo;: &ldquo;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&rdquo;,<br />&ldquo;other_account_secondary_routing_scheme&rdquo;: &ldquo;IBAN&rdquo;,<br />&ldquo;other_account_secondary_routing_address&rdquo;: &ldquo;DE89 3704 0044 0532 0130 00&rdquo;,<br />&ldquo;is_beneficiary&rdquo;: true,<br />&ldquo;other_branch_routing_scheme&rdquo;: &quot;&quot;,<br />&ldquo;other_branch_routing_address&rdquo;: &quot;&quot;,<br />&ldquo;bespoke&rdquo;: []<br />}</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.2.0-createCounterparty",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostCounterpartyJSON"
						}
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CounterpartyWithMetadataJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/COUNTERPARTY_ID": {
			"get": {
				"tags": [
					"Counterparty",
					"Counterparty-Metadata"
				],
				"summary": "Get Counterparty by Counterparty Id.(Explicit).",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Information returned about the Counterparty specified by COUNTERPARTY_ID:</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.2.0-getExplictCounterpartyById",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CounterpartyWithMetadataJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders": {
			"get": {
				"tags": [
					"Card",
					"New-Style"
				],
				"summary": "Get status of Credit Card order ",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><pre><code>  Get status of Credit Card orders</code></pre><p>Get all orders</p>",
				"operationId": "OBPv3.1.0-getStatusOfCreditCardOrder",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreditCardOrderStatusResponseJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/funds-available": {
			"get": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Check Available Funds",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Check Available Funds<br />Mandatory URL parameters:</p><ul><li>amount=NUMBER</li><li>currency=STRING</li></ul>",
				"operationId": "OBPv3.1.0-checkFundsAvailable",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CheckFundsAvailableJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts": {
			"get": {
				"tags": [
					"Counterparty",
					"Account",
					"New-Style"
				],
				"summary": "Get Other Accounts of one Account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication is required if the view VIEW_ID is not public.</p>",
				"operationId": "OBPv3.0.0-getOtherAccountsForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/OtherAccountsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}": {
			"get": {
				"tags": [
					"Counterparty",
					"Account",
					"New-Style"
				],
				"summary": "Get Other Account by Id.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication is required if the view is not public.</p>",
				"operationId": "OBPv3.0.0-getOtherAccountByIdForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/OtherAccountJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata": {
			"get": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Get Other Account Metadata.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get metadata of one other account.<br />Returns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getOtherAccountMetadata",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/OtherAccountMetadataJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete Counterparty Corporate Location.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete corporate location of other bank account. Delete the geolocation of the counterparty&rsquo;s registered address</p>",
				"operationId": "OBPv1.2.1-deleteCounterpartyCorporateLocation",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add Corporate Location to Counterparty",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add the geolocation of the counterparty&rsquo;s registered address</p>",
				"operationId": "OBPv1.2.1-addCounterpartyCorporateLocation",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CorporateLocationJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update Counterparty Corporate Location",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update the geolocation of the counterparty&rsquo;s registered address</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyCorporateLocation",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CorporateLocationJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete Counterparty Image URL",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete image url of other bank account.</p>",
				"operationId": "OBPv1.2.1-deleteCounterpartyImageUrl",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add image url to other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a url that points to the logo of the counterparty</p>",
				"operationId": "OBPv1.2.1-addCounterpartyImageUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ImageUrlJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update Counterparty Image Url",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update the url that points to the logo of the counterparty</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyImageUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ImageUrlJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete more info of other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "",
				"operationId": "OBPv1.2.1-deleteCounterpartyMoreInfo",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add Counterparty More Info",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a description of the counter party from the perpestive of the account e.g. My dentist.</p>",
				"operationId": "OBPv1.2.1-addCounterpartyMoreInfo",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MoreInfoJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update Counterparty More Info",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update the more info description of the counter party from the perpestive of the account e.g. My dentist.</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyMoreInfo",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MoreInfoJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete Counterparty Open Corporates URL",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete open corporate url of other bank account.</p>",
				"operationId": "OBPv1.2.1-deleteCounterpartyOpenCorporatesUrl",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add Open Corporates URL to Counterparty",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add open corporates url to other bank account.</p>",
				"operationId": "OBPv1.2.1-addCounterpartyOpenCorporatesUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/OpenCorporateUrlJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update Open Corporates Url of Counterparty",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update open corporate url of other bank account.</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyOpenCorporatesUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/OpenCorporateUrlJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete Counterparty Physical Location.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete physical location of other bank account.</p>",
				"operationId": "OBPv1.2.1-deleteCounterpartyPhysicalLocation",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add physical location to other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add geocoordinates of the counterparty&rsquo;s main location</p>",
				"operationId": "OBPv1.2.1-addCounterpartyPhysicalLocation",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PhysicalLocationJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update Counterparty Physical Location",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update geocoordinates of the counterparty&rsquo;s main location</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyPhysicalLocation",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PhysicalLocationJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete url of other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "",
				"operationId": "OBPv1.2.1-deleteCounterpartyUrl",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add url to other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>A url which represents the counterparty (home page url etc.)</p>",
				"operationId": "OBPv1.2.1-addCounterpartyUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UrlJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update url of other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>A url which represents the counterparty (home page url etc.)</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UrlJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete Counterparty Private Alias",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-deleteCounterpartyPrivateAlias",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Get Other Account Private Alias",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getOtherAccountPrivateAlias",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AliasJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Create Other Account Private Alias",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-addOtherAccountPrivateAlias",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AliasJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update Counterparty Private Alias",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyPrivateAlias",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AliasJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias": {
			"delete": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Delete Counterparty Public Alias",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-deleteCounterpartyPublicAlias",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Get public alias of other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the public alias of the other account OTHER_ACCOUNT_ID.<br />Authentication is Optional<br />Authentication is Mandatory if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getCounterpartyPublicAlias",
				"parameters": [
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AliasJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Add public alias to other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p><p>Note: Public aliases are automatically generated for new &lsquo;other accounts / counterparties&rsquo;, so this call should only be used if<br />the public alias was deleted.</p><p>The VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.</p>",
				"operationId": "OBPv1.2.1-addCounterpartyPublicAlias",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AliasJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Counterparty-Metadata",
					"Counterparty"
				],
				"summary": "Update public alias of other bank account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-updateCounterpartyPublicAlias",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AliasJSON"
						}
					},
					{
						"in": "path",
						"name": "OTHER_ACCOUNT_ID",
						"description": "The other account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types": {
			"get": {
				"tags": [
					"Transaction-Request"
				],
				"summary": "Get Transaction Request Types for Account",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request<br />(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul><li>the required Transaction Request &lsquo;body&rsquo; i.e. fields that define the &lsquo;what&rsquo; and &lsquo;to&rsquo; of a Transaction Request,</li><li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li><li>the threshold of that challenge.</li></ul><p>For instance in a &lsquo;SANDBOX_TAN&rsquo; Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>",
				"operationId": "OBPv1.4.0-getTransactionRequestTypes",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestTypesJsonV140"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests": {
			"post": {
				"tags": [
					"Transaction-Request"
				],
				"summary": "Create Transaction Request (COUNTERPARTY)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Special instructions for COUNTERPARTY:</p><p>When using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request.<br />The routing details of the counterparty will be forwarded for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&ldquo;XAF&rdquo;:{<br />&ldquo;HKD&rdquo;:0.0135503,<br />&ldquo;AUD&rdquo;:0.00228226,<br />&ldquo;KRW&rdquo;:1.87975,<br />&ldquo;JOD&rdquo;:0.00127784,<br />&ldquo;GBP&rdquo;:0.00131092,<br />&ldquo;AED&rdquo;:0.00601555,<br />&ldquo;INR&rdquo;:0.110241,<br />&ldquo;JPY&rdquo;:0.185328,<br />&ldquo;USD&rdquo;:0.00163773,<br />&ldquo;ILS&rdquo;:0.00641333,<br />&ldquo;EUR&rdquo;:0.00152449<br />},<br />&ldquo;HKD&rdquo;:{<br />&ldquo;XAF&rdquo;:73.8049,<br />&ldquo;AUD&rdquo;:0.178137,<br />&ldquo;KRW&rdquo;:143.424,<br />&ldquo;JOD&rdquo;:0.0903452,<br />&ldquo;GBP&rdquo;:0.0985443,<br />&ldquo;AED&rdquo;:0.467977,<br />&ldquo;INR&rdquo;:9.09325,<br />&ldquo;JPY&rdquo;:14.0867,<br />&ldquo;USD&rdquo;:0.127427,<br />&ldquo;ILS&rdquo;:0.460862,<br />&ldquo;EUR&rdquo;:0.112495<br />},<br />&ldquo;AUD&rdquo;:{<br />&ldquo;XAF&rdquo;:438.162,<br />&ldquo;HKD&rdquo;:5.61346,<br />&ldquo;KRW&rdquo;:895.304,<br />&ldquo;JOD&rdquo;:0.556152,<br />&ldquo;GBP&rdquo;:0.609788,<br />&ldquo;AED&rdquo;:2.88368,<br />&ldquo;INR&rdquo;:50.4238,<br />&ldquo;JPY&rdquo;:87.0936,<br />&ldquo;USD&rdquo;:0.785256,<br />&ldquo;ILS&rdquo;:2.83558,<br />&ldquo;EUR&rdquo;:0.667969<br />},<br />&ldquo;KRW&rdquo;:{<br />&ldquo;XAF&rdquo;:0.531986,<br />&ldquo;HKD&rdquo;:0.00697233,<br />&ldquo;AUD&rdquo;:0.00111694,<br />&ldquo;JOD&rdquo;:6.30634E-4,<br />&ldquo;GBP&rdquo;:6.97389E-4,<br />&ldquo;AED&rdquo;:0.00320019,<br />&ldquo;INR&rdquo;:0.0586469,<br />&ldquo;JPY&rdquo;:0.0985917,<br />&ldquo;USD&rdquo;:8.7125E-4,<br />&ldquo;ILS&rdquo;:0.00316552,<br />&ldquo;EUR&rdquo;:8.11008E-4<br />},<br />&ldquo;JOD&rdquo;:{<br />&ldquo;XAF&rdquo;:782.572,<br />&ldquo;HKD&rdquo;:11.0687,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1585.68,<br />&ldquo;GBP&rdquo;:1.06757,<br />&ldquo;AED&rdquo;:5.18231,<br />&ldquo;INR&rdquo;:90.1236,<br />&ldquo;JPY&rdquo;:156.304,<br />&ldquo;USD&rdquo;:1.41112,<br />&ldquo;ILS&rdquo;:5.02018,<br />&ldquo;EUR&rdquo;:0.237707<br />},<br />&ldquo;GBP&rdquo;:{<br />&ldquo;XAF&rdquo;:762.826,<br />&ldquo;HKD&rdquo;:10.1468,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1433.92,<br />&ldquo;JOD&rdquo;:0.936707,<br />&ldquo;AED&rdquo;:4.58882,<br />&ldquo;INR&rdquo;:84.095,<br />&ldquo;JPY&rdquo;:141.373,<br />&ldquo;USD&rdquo;:1.2493,<br />&ldquo;ILS&rdquo;:4.7002,<br />&ldquo;EUR&rdquo;:1.16278<br />},<br />&ldquo;AED&rdquo;:{<br />&ldquo;XAF&rdquo;:166.236,<br />&ldquo;HKD&rdquo;:2.13685,<br />&ldquo;AUD&rdquo;:0.346779,<br />&ldquo;KRW&rdquo;:312.482,<br />&ldquo;GBP&rdquo;:0.217921,<br />&ldquo;AED&rdquo;:0.192964,<br />&ldquo;INR&rdquo;:18.3255,<br />&ldquo;JPY&rdquo;:30.8081,<br />&ldquo;USD&rdquo;:0.27225,<br />&ldquo;ILS&rdquo;:0.968033,<br />&ldquo;EUR&rdquo;:0.253425<br />},<br />&ldquo;INR&rdquo;:{<br />&ldquo;XAF&rdquo;:9.07101,<br />&ldquo;HKD&rdquo;:0.109972,<br />&ldquo;AUD&rdquo;:0.0198319,<br />&ldquo;KRW&rdquo;:17.0512,<br />&ldquo;JOD&rdquo;:0.0110959,<br />&ldquo;GBP&rdquo;:0.0118913,<br />&ldquo;AED&rdquo;:0.0545671,<br />&ldquo;JPY&rdquo;:1.68111,<br />&ldquo;USD&rdquo;:0.0148559,<br />&ldquo;ILS&rdquo;:0.0556764,<br />&ldquo;EUR&rdquo;:0.0138287<br />},<br />&ldquo;JPY&rdquo;:{<br />&ldquo;XAF&rdquo;:5.39585,<br />&ldquo;HKD&rdquo;:0.0709891,<br />&ldquo;AUD&rdquo;:0.0114819,<br />&ldquo;KRW&rdquo;:10.1428,<br />&ldquo;JOD&rdquo;:0.00639777,<br />&ldquo;GBP&rdquo;:0.0070735,<br />&ldquo;AED&rdquo;:0.032459,<br />&ldquo;INR&rdquo;:0.594846,<br />&ldquo;USD&rdquo;:0.00883695,<br />&ldquo;ILS&rdquo;:0.0320926,<br />&ldquo;EUR&rdquo;:0.00822592<br />},<br />&ldquo;USD&rdquo;:{<br />&ldquo;XAF&rdquo;:610.601,<br />&ldquo;HKD&rdquo;:7.84766,<br />&ldquo;AUD&rdquo;:1.27347,<br />&ldquo;KRW&rdquo;:1147.78,<br />&ldquo;JOD&rdquo;:0.708659,<br />&ldquo;GBP&rdquo;:0.800446,<br />&ldquo;AED&rdquo;:3.6731,<br />&ldquo;INR&rdquo;:67.3135,<br />&ldquo;JPY&rdquo;:113.161,<br />&ldquo;ILS&rdquo;:3.55495,<br />&ldquo;EUR&rdquo;:0.930886<br />},<br />&ldquo;ILS&rdquo;:{<br />&ldquo;XAF&rdquo;:155.925,<br />&ldquo;HKD&rdquo;:2.16985,<br />&ldquo;AUD&rdquo;:0.352661,<br />&ldquo;KRW&rdquo;:315.903,<br />&ldquo;JOD&rdquo;:0.199196,<br />&ldquo;GBP&rdquo;:0.212763,<br />&ldquo;AED&rdquo;:1.03302,<br />&ldquo;INR&rdquo;:17.9609,<br />&ldquo;JPY&rdquo;:31.1599,<br />&ldquo;USD&rdquo;:0.281298,<br />&ldquo;EUR&rdquo;:1.19318<br />},<br />&ldquo;EUR&rdquo;:{<br />&ldquo;XAF&rdquo;:655.957,<br />&ldquo;HKD&rdquo;:8.88926,<br />&ldquo;AUD&rdquo;:1.49707,<br />&ldquo;KRW&rdquo;:1233.03,<br />&ldquo;JOD&rdquo;:0.838098,<br />&ldquo;GBP&rdquo;:0.860011,<br />&ldquo;AED&rdquo;:3.94594,<br />&ldquo;INR&rdquo;:72.3136,<br />&ldquo;JPY&rdquo;:121.567,<br />&ldquo;USD&rdquo;:1.07428,<br />&ldquo;ILS&rdquo;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-createTransactionRequestCouterparty",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionRequestBodyCounterpartyJSON"
						}
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestWithChargeJSON210"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/FREE_FORM/transaction-requests": {
			"post": {
				"tags": [
					"Transaction-Request"
				],
				"summary": "Create Transaction Request (FREE_FORM).",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&ldquo;XAF&rdquo;:{<br />&ldquo;HKD&rdquo;:0.0135503,<br />&ldquo;AUD&rdquo;:0.00228226,<br />&ldquo;KRW&rdquo;:1.87975,<br />&ldquo;JOD&rdquo;:0.00127784,<br />&ldquo;GBP&rdquo;:0.00131092,<br />&ldquo;AED&rdquo;:0.00601555,<br />&ldquo;INR&rdquo;:0.110241,<br />&ldquo;JPY&rdquo;:0.185328,<br />&ldquo;USD&rdquo;:0.00163773,<br />&ldquo;ILS&rdquo;:0.00641333,<br />&ldquo;EUR&rdquo;:0.00152449<br />},<br />&ldquo;HKD&rdquo;:{<br />&ldquo;XAF&rdquo;:73.8049,<br />&ldquo;AUD&rdquo;:0.178137,<br />&ldquo;KRW&rdquo;:143.424,<br />&ldquo;JOD&rdquo;:0.0903452,<br />&ldquo;GBP&rdquo;:0.0985443,<br />&ldquo;AED&rdquo;:0.467977,<br />&ldquo;INR&rdquo;:9.09325,<br />&ldquo;JPY&rdquo;:14.0867,<br />&ldquo;USD&rdquo;:0.127427,<br />&ldquo;ILS&rdquo;:0.460862,<br />&ldquo;EUR&rdquo;:0.112495<br />},<br />&ldquo;AUD&rdquo;:{<br />&ldquo;XAF&rdquo;:438.162,<br />&ldquo;HKD&rdquo;:5.61346,<br />&ldquo;KRW&rdquo;:895.304,<br />&ldquo;JOD&rdquo;:0.556152,<br />&ldquo;GBP&rdquo;:0.609788,<br />&ldquo;AED&rdquo;:2.88368,<br />&ldquo;INR&rdquo;:50.4238,<br />&ldquo;JPY&rdquo;:87.0936,<br />&ldquo;USD&rdquo;:0.785256,<br />&ldquo;ILS&rdquo;:2.83558,<br />&ldquo;EUR&rdquo;:0.667969<br />},<br />&ldquo;KRW&rdquo;:{<br />&ldquo;XAF&rdquo;:0.531986,<br />&ldquo;HKD&rdquo;:0.00697233,<br />&ldquo;AUD&rdquo;:0.00111694,<br />&ldquo;JOD&rdquo;:6.30634E-4,<br />&ldquo;GBP&rdquo;:6.97389E-4,<br />&ldquo;AED&rdquo;:0.00320019,<br />&ldquo;INR&rdquo;:0.0586469,<br />&ldquo;JPY&rdquo;:0.0985917,<br />&ldquo;USD&rdquo;:8.7125E-4,<br />&ldquo;ILS&rdquo;:0.00316552,<br />&ldquo;EUR&rdquo;:8.11008E-4<br />},<br />&ldquo;JOD&rdquo;:{<br />&ldquo;XAF&rdquo;:782.572,<br />&ldquo;HKD&rdquo;:11.0687,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1585.68,<br />&ldquo;GBP&rdquo;:1.06757,<br />&ldquo;AED&rdquo;:5.18231,<br />&ldquo;INR&rdquo;:90.1236,<br />&ldquo;JPY&rdquo;:156.304,<br />&ldquo;USD&rdquo;:1.41112,<br />&ldquo;ILS&rdquo;:5.02018,<br />&ldquo;EUR&rdquo;:0.237707<br />},<br />&ldquo;GBP&rdquo;:{<br />&ldquo;XAF&rdquo;:762.826,<br />&ldquo;HKD&rdquo;:10.1468,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1433.92,<br />&ldquo;JOD&rdquo;:0.936707,<br />&ldquo;AED&rdquo;:4.58882,<br />&ldquo;INR&rdquo;:84.095,<br />&ldquo;JPY&rdquo;:141.373,<br />&ldquo;USD&rdquo;:1.2493,<br />&ldquo;ILS&rdquo;:4.7002,<br />&ldquo;EUR&rdquo;:1.16278<br />},<br />&ldquo;AED&rdquo;:{<br />&ldquo;XAF&rdquo;:166.236,<br />&ldquo;HKD&rdquo;:2.13685,<br />&ldquo;AUD&rdquo;:0.346779,<br />&ldquo;KRW&rdquo;:312.482,<br />&ldquo;GBP&rdquo;:0.217921,<br />&ldquo;AED&rdquo;:0.192964,<br />&ldquo;INR&rdquo;:18.3255,<br />&ldquo;JPY&rdquo;:30.8081,<br />&ldquo;USD&rdquo;:0.27225,<br />&ldquo;ILS&rdquo;:0.968033,<br />&ldquo;EUR&rdquo;:0.253425<br />},<br />&ldquo;INR&rdquo;:{<br />&ldquo;XAF&rdquo;:9.07101,<br />&ldquo;HKD&rdquo;:0.109972,<br />&ldquo;AUD&rdquo;:0.0198319,<br />&ldquo;KRW&rdquo;:17.0512,<br />&ldquo;JOD&rdquo;:0.0110959,<br />&ldquo;GBP&rdquo;:0.0118913,<br />&ldquo;AED&rdquo;:0.0545671,<br />&ldquo;JPY&rdquo;:1.68111,<br />&ldquo;USD&rdquo;:0.0148559,<br />&ldquo;ILS&rdquo;:0.0556764,<br />&ldquo;EUR&rdquo;:0.0138287<br />},<br />&ldquo;JPY&rdquo;:{<br />&ldquo;XAF&rdquo;:5.39585,<br />&ldquo;HKD&rdquo;:0.0709891,<br />&ldquo;AUD&rdquo;:0.0114819,<br />&ldquo;KRW&rdquo;:10.1428,<br />&ldquo;JOD&rdquo;:0.00639777,<br />&ldquo;GBP&rdquo;:0.0070735,<br />&ldquo;AED&rdquo;:0.032459,<br />&ldquo;INR&rdquo;:0.594846,<br />&ldquo;USD&rdquo;:0.00883695,<br />&ldquo;ILS&rdquo;:0.0320926,<br />&ldquo;EUR&rdquo;:0.00822592<br />},<br />&ldquo;USD&rdquo;:{<br />&ldquo;XAF&rdquo;:610.601,<br />&ldquo;HKD&rdquo;:7.84766,<br />&ldquo;AUD&rdquo;:1.27347,<br />&ldquo;KRW&rdquo;:1147.78,<br />&ldquo;JOD&rdquo;:0.708659,<br />&ldquo;GBP&rdquo;:0.800446,<br />&ldquo;AED&rdquo;:3.6731,<br />&ldquo;INR&rdquo;:67.3135,<br />&ldquo;JPY&rdquo;:113.161,<br />&ldquo;ILS&rdquo;:3.55495,<br />&ldquo;EUR&rdquo;:0.930886<br />},<br />&ldquo;ILS&rdquo;:{<br />&ldquo;XAF&rdquo;:155.925,<br />&ldquo;HKD&rdquo;:2.16985,<br />&ldquo;AUD&rdquo;:0.352661,<br />&ldquo;KRW&rdquo;:315.903,<br />&ldquo;JOD&rdquo;:0.199196,<br />&ldquo;GBP&rdquo;:0.212763,<br />&ldquo;AED&rdquo;:1.03302,<br />&ldquo;INR&rdquo;:17.9609,<br />&ldquo;JPY&rdquo;:31.1599,<br />&ldquo;USD&rdquo;:0.281298,<br />&ldquo;EUR&rdquo;:1.19318<br />},<br />&ldquo;EUR&rdquo;:{<br />&ldquo;XAF&rdquo;:655.957,<br />&ldquo;HKD&rdquo;:8.88926,<br />&ldquo;AUD&rdquo;:1.49707,<br />&ldquo;KRW&rdquo;:1233.03,<br />&ldquo;JOD&rdquo;:0.838098,<br />&ldquo;GBP&rdquo;:0.860011,<br />&ldquo;AED&rdquo;:3.94594,<br />&ldquo;INR&rdquo;:72.3136,<br />&ldquo;JPY&rdquo;:121.567,<br />&ldquo;USD&rdquo;:1.07428,<br />&ldquo;ILS&rdquo;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-createTransactionRequestFreeForm",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionRequestBodyJsonV200"
						}
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestWithChargeJSON210"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SANDBOX_TAN/transaction-requests": {
			"post": {
				"tags": [
					"Transaction-Request"
				],
				"summary": "Create Transaction Request (SANDBOX_TAN)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>When using SANDBOX_TAN, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&ldquo;XAF&rdquo;:{<br />&ldquo;HKD&rdquo;:0.0135503,<br />&ldquo;AUD&rdquo;:0.00228226,<br />&ldquo;KRW&rdquo;:1.87975,<br />&ldquo;JOD&rdquo;:0.00127784,<br />&ldquo;GBP&rdquo;:0.00131092,<br />&ldquo;AED&rdquo;:0.00601555,<br />&ldquo;INR&rdquo;:0.110241,<br />&ldquo;JPY&rdquo;:0.185328,<br />&ldquo;USD&rdquo;:0.00163773,<br />&ldquo;ILS&rdquo;:0.00641333,<br />&ldquo;EUR&rdquo;:0.00152449<br />},<br />&ldquo;HKD&rdquo;:{<br />&ldquo;XAF&rdquo;:73.8049,<br />&ldquo;AUD&rdquo;:0.178137,<br />&ldquo;KRW&rdquo;:143.424,<br />&ldquo;JOD&rdquo;:0.0903452,<br />&ldquo;GBP&rdquo;:0.0985443,<br />&ldquo;AED&rdquo;:0.467977,<br />&ldquo;INR&rdquo;:9.09325,<br />&ldquo;JPY&rdquo;:14.0867,<br />&ldquo;USD&rdquo;:0.127427,<br />&ldquo;ILS&rdquo;:0.460862,<br />&ldquo;EUR&rdquo;:0.112495<br />},<br />&ldquo;AUD&rdquo;:{<br />&ldquo;XAF&rdquo;:438.162,<br />&ldquo;HKD&rdquo;:5.61346,<br />&ldquo;KRW&rdquo;:895.304,<br />&ldquo;JOD&rdquo;:0.556152,<br />&ldquo;GBP&rdquo;:0.609788,<br />&ldquo;AED&rdquo;:2.88368,<br />&ldquo;INR&rdquo;:50.4238,<br />&ldquo;JPY&rdquo;:87.0936,<br />&ldquo;USD&rdquo;:0.785256,<br />&ldquo;ILS&rdquo;:2.83558,<br />&ldquo;EUR&rdquo;:0.667969<br />},<br />&ldquo;KRW&rdquo;:{<br />&ldquo;XAF&rdquo;:0.531986,<br />&ldquo;HKD&rdquo;:0.00697233,<br />&ldquo;AUD&rdquo;:0.00111694,<br />&ldquo;JOD&rdquo;:6.30634E-4,<br />&ldquo;GBP&rdquo;:6.97389E-4,<br />&ldquo;AED&rdquo;:0.00320019,<br />&ldquo;INR&rdquo;:0.0586469,<br />&ldquo;JPY&rdquo;:0.0985917,<br />&ldquo;USD&rdquo;:8.7125E-4,<br />&ldquo;ILS&rdquo;:0.00316552,<br />&ldquo;EUR&rdquo;:8.11008E-4<br />},<br />&ldquo;JOD&rdquo;:{<br />&ldquo;XAF&rdquo;:782.572,<br />&ldquo;HKD&rdquo;:11.0687,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1585.68,<br />&ldquo;GBP&rdquo;:1.06757,<br />&ldquo;AED&rdquo;:5.18231,<br />&ldquo;INR&rdquo;:90.1236,<br />&ldquo;JPY&rdquo;:156.304,<br />&ldquo;USD&rdquo;:1.41112,<br />&ldquo;ILS&rdquo;:5.02018,<br />&ldquo;EUR&rdquo;:0.237707<br />},<br />&ldquo;GBP&rdquo;:{<br />&ldquo;XAF&rdquo;:762.826,<br />&ldquo;HKD&rdquo;:10.1468,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1433.92,<br />&ldquo;JOD&rdquo;:0.936707,<br />&ldquo;AED&rdquo;:4.58882,<br />&ldquo;INR&rdquo;:84.095,<br />&ldquo;JPY&rdquo;:141.373,<br />&ldquo;USD&rdquo;:1.2493,<br />&ldquo;ILS&rdquo;:4.7002,<br />&ldquo;EUR&rdquo;:1.16278<br />},<br />&ldquo;AED&rdquo;:{<br />&ldquo;XAF&rdquo;:166.236,<br />&ldquo;HKD&rdquo;:2.13685,<br />&ldquo;AUD&rdquo;:0.346779,<br />&ldquo;KRW&rdquo;:312.482,<br />&ldquo;GBP&rdquo;:0.217921,<br />&ldquo;AED&rdquo;:0.192964,<br />&ldquo;INR&rdquo;:18.3255,<br />&ldquo;JPY&rdquo;:30.8081,<br />&ldquo;USD&rdquo;:0.27225,<br />&ldquo;ILS&rdquo;:0.968033,<br />&ldquo;EUR&rdquo;:0.253425<br />},<br />&ldquo;INR&rdquo;:{<br />&ldquo;XAF&rdquo;:9.07101,<br />&ldquo;HKD&rdquo;:0.109972,<br />&ldquo;AUD&rdquo;:0.0198319,<br />&ldquo;KRW&rdquo;:17.0512,<br />&ldquo;JOD&rdquo;:0.0110959,<br />&ldquo;GBP&rdquo;:0.0118913,<br />&ldquo;AED&rdquo;:0.0545671,<br />&ldquo;JPY&rdquo;:1.68111,<br />&ldquo;USD&rdquo;:0.0148559,<br />&ldquo;ILS&rdquo;:0.0556764,<br />&ldquo;EUR&rdquo;:0.0138287<br />},<br />&ldquo;JPY&rdquo;:{<br />&ldquo;XAF&rdquo;:5.39585,<br />&ldquo;HKD&rdquo;:0.0709891,<br />&ldquo;AUD&rdquo;:0.0114819,<br />&ldquo;KRW&rdquo;:10.1428,<br />&ldquo;JOD&rdquo;:0.00639777,<br />&ldquo;GBP&rdquo;:0.0070735,<br />&ldquo;AED&rdquo;:0.032459,<br />&ldquo;INR&rdquo;:0.594846,<br />&ldquo;USD&rdquo;:0.00883695,<br />&ldquo;ILS&rdquo;:0.0320926,<br />&ldquo;EUR&rdquo;:0.00822592<br />},<br />&ldquo;USD&rdquo;:{<br />&ldquo;XAF&rdquo;:610.601,<br />&ldquo;HKD&rdquo;:7.84766,<br />&ldquo;AUD&rdquo;:1.27347,<br />&ldquo;KRW&rdquo;:1147.78,<br />&ldquo;JOD&rdquo;:0.708659,<br />&ldquo;GBP&rdquo;:0.800446,<br />&ldquo;AED&rdquo;:3.6731,<br />&ldquo;INR&rdquo;:67.3135,<br />&ldquo;JPY&rdquo;:113.161,<br />&ldquo;ILS&rdquo;:3.55495,<br />&ldquo;EUR&rdquo;:0.930886<br />},<br />&ldquo;ILS&rdquo;:{<br />&ldquo;XAF&rdquo;:155.925,<br />&ldquo;HKD&rdquo;:2.16985,<br />&ldquo;AUD&rdquo;:0.352661,<br />&ldquo;KRW&rdquo;:315.903,<br />&ldquo;JOD&rdquo;:0.199196,<br />&ldquo;GBP&rdquo;:0.212763,<br />&ldquo;AED&rdquo;:1.03302,<br />&ldquo;INR&rdquo;:17.9609,<br />&ldquo;JPY&rdquo;:31.1599,<br />&ldquo;USD&rdquo;:0.281298,<br />&ldquo;EUR&rdquo;:1.19318<br />},<br />&ldquo;EUR&rdquo;:{<br />&ldquo;XAF&rdquo;:655.957,<br />&ldquo;HKD&rdquo;:8.88926,<br />&ldquo;AUD&rdquo;:1.49707,<br />&ldquo;KRW&rdquo;:1233.03,<br />&ldquo;JOD&rdquo;:0.838098,<br />&ldquo;GBP&rdquo;:0.860011,<br />&ldquo;AED&rdquo;:3.94594,<br />&ldquo;INR&rdquo;:72.3136,<br />&ldquo;JPY&rdquo;:121.567,<br />&ldquo;USD&rdquo;:1.07428,<br />&ldquo;ILS&rdquo;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-createTransactionRequestSandboxTan",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionRequestBodyJsonV200"
						}
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestWithChargeJSON210"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests": {
			"post": {
				"tags": [
					"Transaction-Request"
				],
				"summary": "Create Transaction Request (SEPA)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Special instructions for SEPA:</p><p>When using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request.<br />The routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&ldquo;XAF&rdquo;:{<br />&ldquo;HKD&rdquo;:0.0135503,<br />&ldquo;AUD&rdquo;:0.00228226,<br />&ldquo;KRW&rdquo;:1.87975,<br />&ldquo;JOD&rdquo;:0.00127784,<br />&ldquo;GBP&rdquo;:0.00131092,<br />&ldquo;AED&rdquo;:0.00601555,<br />&ldquo;INR&rdquo;:0.110241,<br />&ldquo;JPY&rdquo;:0.185328,<br />&ldquo;USD&rdquo;:0.00163773,<br />&ldquo;ILS&rdquo;:0.00641333,<br />&ldquo;EUR&rdquo;:0.00152449<br />},<br />&ldquo;HKD&rdquo;:{<br />&ldquo;XAF&rdquo;:73.8049,<br />&ldquo;AUD&rdquo;:0.178137,<br />&ldquo;KRW&rdquo;:143.424,<br />&ldquo;JOD&rdquo;:0.0903452,<br />&ldquo;GBP&rdquo;:0.0985443,<br />&ldquo;AED&rdquo;:0.467977,<br />&ldquo;INR&rdquo;:9.09325,<br />&ldquo;JPY&rdquo;:14.0867,<br />&ldquo;USD&rdquo;:0.127427,<br />&ldquo;ILS&rdquo;:0.460862,<br />&ldquo;EUR&rdquo;:0.112495<br />},<br />&ldquo;AUD&rdquo;:{<br />&ldquo;XAF&rdquo;:438.162,<br />&ldquo;HKD&rdquo;:5.61346,<br />&ldquo;KRW&rdquo;:895.304,<br />&ldquo;JOD&rdquo;:0.556152,<br />&ldquo;GBP&rdquo;:0.609788,<br />&ldquo;AED&rdquo;:2.88368,<br />&ldquo;INR&rdquo;:50.4238,<br />&ldquo;JPY&rdquo;:87.0936,<br />&ldquo;USD&rdquo;:0.785256,<br />&ldquo;ILS&rdquo;:2.83558,<br />&ldquo;EUR&rdquo;:0.667969<br />},<br />&ldquo;KRW&rdquo;:{<br />&ldquo;XAF&rdquo;:0.531986,<br />&ldquo;HKD&rdquo;:0.00697233,<br />&ldquo;AUD&rdquo;:0.00111694,<br />&ldquo;JOD&rdquo;:6.30634E-4,<br />&ldquo;GBP&rdquo;:6.97389E-4,<br />&ldquo;AED&rdquo;:0.00320019,<br />&ldquo;INR&rdquo;:0.0586469,<br />&ldquo;JPY&rdquo;:0.0985917,<br />&ldquo;USD&rdquo;:8.7125E-4,<br />&ldquo;ILS&rdquo;:0.00316552,<br />&ldquo;EUR&rdquo;:8.11008E-4<br />},<br />&ldquo;JOD&rdquo;:{<br />&ldquo;XAF&rdquo;:782.572,<br />&ldquo;HKD&rdquo;:11.0687,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1585.68,<br />&ldquo;GBP&rdquo;:1.06757,<br />&ldquo;AED&rdquo;:5.18231,<br />&ldquo;INR&rdquo;:90.1236,<br />&ldquo;JPY&rdquo;:156.304,<br />&ldquo;USD&rdquo;:1.41112,<br />&ldquo;ILS&rdquo;:5.02018,<br />&ldquo;EUR&rdquo;:0.237707<br />},<br />&ldquo;GBP&rdquo;:{<br />&ldquo;XAF&rdquo;:762.826,<br />&ldquo;HKD&rdquo;:10.1468,<br />&ldquo;AUD&rdquo;:1.63992,<br />&ldquo;KRW&rdquo;:1433.92,<br />&ldquo;JOD&rdquo;:0.936707,<br />&ldquo;AED&rdquo;:4.58882,<br />&ldquo;INR&rdquo;:84.095,<br />&ldquo;JPY&rdquo;:141.373,<br />&ldquo;USD&rdquo;:1.2493,<br />&ldquo;ILS&rdquo;:4.7002,<br />&ldquo;EUR&rdquo;:1.16278<br />},<br />&ldquo;AED&rdquo;:{<br />&ldquo;XAF&rdquo;:166.236,<br />&ldquo;HKD&rdquo;:2.13685,<br />&ldquo;AUD&rdquo;:0.346779,<br />&ldquo;KRW&rdquo;:312.482,<br />&ldquo;GBP&rdquo;:0.217921,<br />&ldquo;AED&rdquo;:0.192964,<br />&ldquo;INR&rdquo;:18.3255,<br />&ldquo;JPY&rdquo;:30.8081,<br />&ldquo;USD&rdquo;:0.27225,<br />&ldquo;ILS&rdquo;:0.968033,<br />&ldquo;EUR&rdquo;:0.253425<br />},<br />&ldquo;INR&rdquo;:{<br />&ldquo;XAF&rdquo;:9.07101,<br />&ldquo;HKD&rdquo;:0.109972,<br />&ldquo;AUD&rdquo;:0.0198319,<br />&ldquo;KRW&rdquo;:17.0512,<br />&ldquo;JOD&rdquo;:0.0110959,<br />&ldquo;GBP&rdquo;:0.0118913,<br />&ldquo;AED&rdquo;:0.0545671,<br />&ldquo;JPY&rdquo;:1.68111,<br />&ldquo;USD&rdquo;:0.0148559,<br />&ldquo;ILS&rdquo;:0.0556764,<br />&ldquo;EUR&rdquo;:0.0138287<br />},<br />&ldquo;JPY&rdquo;:{<br />&ldquo;XAF&rdquo;:5.39585,<br />&ldquo;HKD&rdquo;:0.0709891,<br />&ldquo;AUD&rdquo;:0.0114819,<br />&ldquo;KRW&rdquo;:10.1428,<br />&ldquo;JOD&rdquo;:0.00639777,<br />&ldquo;GBP&rdquo;:0.0070735,<br />&ldquo;AED&rdquo;:0.032459,<br />&ldquo;INR&rdquo;:0.594846,<br />&ldquo;USD&rdquo;:0.00883695,<br />&ldquo;ILS&rdquo;:0.0320926,<br />&ldquo;EUR&rdquo;:0.00822592<br />},<br />&ldquo;USD&rdquo;:{<br />&ldquo;XAF&rdquo;:610.601,<br />&ldquo;HKD&rdquo;:7.84766,<br />&ldquo;AUD&rdquo;:1.27347,<br />&ldquo;KRW&rdquo;:1147.78,<br />&ldquo;JOD&rdquo;:0.708659,<br />&ldquo;GBP&rdquo;:0.800446,<br />&ldquo;AED&rdquo;:3.6731,<br />&ldquo;INR&rdquo;:67.3135,<br />&ldquo;JPY&rdquo;:113.161,<br />&ldquo;ILS&rdquo;:3.55495,<br />&ldquo;EUR&rdquo;:0.930886<br />},<br />&ldquo;ILS&rdquo;:{<br />&ldquo;XAF&rdquo;:155.925,<br />&ldquo;HKD&rdquo;:2.16985,<br />&ldquo;AUD&rdquo;:0.352661,<br />&ldquo;KRW&rdquo;:315.903,<br />&ldquo;JOD&rdquo;:0.199196,<br />&ldquo;GBP&rdquo;:0.212763,<br />&ldquo;AED&rdquo;:1.03302,<br />&ldquo;INR&rdquo;:17.9609,<br />&ldquo;JPY&rdquo;:31.1599,<br />&ldquo;USD&rdquo;:0.281298,<br />&ldquo;EUR&rdquo;:1.19318<br />},<br />&ldquo;EUR&rdquo;:{<br />&ldquo;XAF&rdquo;:655.957,<br />&ldquo;HKD&rdquo;:8.88926,<br />&ldquo;AUD&rdquo;:1.49707,<br />&ldquo;KRW&rdquo;:1233.03,<br />&ldquo;JOD&rdquo;:0.838098,<br />&ldquo;GBP&rdquo;:0.860011,<br />&ldquo;AED&rdquo;:3.94594,<br />&ldquo;INR&rdquo;:72.3136,<br />&ldquo;JPY&rdquo;:121.567,<br />&ldquo;USD&rdquo;:1.07428,<br />&ldquo;ILS&rdquo;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-createTransactionRequestSepa",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionRequestBodySEPAJSON"
						}
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestWithChargeJSON210"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge": {
			"post": {
				"tags": [
					"Transaction-Request"
				],
				"summary": "Answer Transaction Request Challenge.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.</p><p>This endpoint totally depends on createTransactionRequest, it need get the following data from createTransactionRequest response body.</p><p>1)<code>TRANSACTION_REQUEST_TYPE</code> : is the same as createTransactionRequest request URL .</p><p>2)<code>TRANSACTION_REQUEST_ID</code> : is the <code>id</code> field in createTransactionRequest response body.</p><p>3) <code>id</code> :  is <code>challenge.id</code> field in createTransactionRequest response body.</p><p>4) <code>answer</code> : must be <code>123</code>. if it is in sandbox mode. If it kafka mode, the answer can be got by phone message or other security ways.</p>",
				"operationId": "OBPv2.1.0-answerTransactionRequestChallenge",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ChallengeAnswerJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_REQUEST_ID",
						"description": "The transaction request id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "TRANSACTION_REQUEST_TYPE",
						"description": "The transaction request type",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestWithChargeJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests": {
			"get": {
				"tags": [
					"Transaction-Request",
					"New-Style"
				],
				"summary": "Get Transaction Requests.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be &lsquo;owner&rsquo; and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul><li>Transaction Request Id</li><li>Type</li><li>Status (INITIATED, COMPLETED)</li><li>Challenge (in order to confirm the request)</li><li>From Bank / Account</li><li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li><li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer.<br />This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.<br />The customer can proceed with the Transaction by answering the security challenge.</p>",
				"operationId": "OBPv3.1.0-getTransactionRequests",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestWithChargeJSONs210"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions": {
			"get": {
				"tags": [
					"Transaction",
					"Account",
					"New-Style"
				],
				"summary": "Get Transactions for Account (Full)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns transactions list of the account specified by ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional</p><p>Authentication is required if the view is not public.</p><p>Possible custom headers for pagination:</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC. The sort field is the completed date.</li><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li><li>from_date=DATE =&gt; default value: 0000-00-00T00:00:00.000Z</li><li>to_date=DATE =&gt; default value: 3049-01-01T00:00:00.000Z</li></ul><p><strong>Date format parameter</strong>: yyyy-MM-dd&rsquo;T&rsquo;HH:mm:ss.SSS&rsquo;Z&rsquo;(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p>",
				"operationId": "OBPv3.0.0-getTransactionsForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorFilterSortDirectionError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments": {
			"get": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Get comments.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the transaction TRANSACTION_ID comments made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getCommentsForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionCommentsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Add comment.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Posts a comment about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>${authenticationRequiredMessage(false)}</p><p>Authentication is required since the comment is linked with the user.</p>",
				"operationId": "OBPv1.2.1-addCommentForViewOnTransaction",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostTransactionCommentJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionCommentJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments/{COMMENT_ID}": {
			"delete": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Delete comment.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.</p>",
				"operationId": "OBPv1.2.1-deleteCommentForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "COMMENT_ID",
						"description": "The comment id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images": {
			"get": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Get images.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the transaction TRANSACTION_ID images made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getImagesForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionImagesJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Add an image.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Posts an image about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>The image is linked with the user.</p>",
				"operationId": "OBPv1.2.1-addImageForViewOnTransaction",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostTransactionImageJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionImageJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images/{IMAGE_ID}": {
			"delete": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Delete an image",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.</p>",
				"operationId": "OBPv1.2.1-deleteImageForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "IMAGE_ID",
						"description": "The image id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative": {
			"delete": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Delete narrative.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-deleteTransactionNarrative",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Get narrative.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the account owner description of the transaction <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view.</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getTransactionNarrative",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionNarrativeJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Add narrative.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Creates a description of the transaction TRANSACTION_ID.</p><p>Note: Unlike other items of metadata, there is only one &ldquo;narrative&rdquo; per transaction accross all views.<br />If you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-addTransactionNarrative",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionNarrativeJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Update narrative.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Updates the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-updateTransactionNarrative",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionNarrativeJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags": {
			"get": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Get tags.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the transaction TRANSACTION_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getTagsForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionTagJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Add a tag.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Posts a tag about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>",
				"operationId": "OBPv1.2.1-addTagForViewOnTransaction",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostTransactionTagJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionTagJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags/{TAG_ID}": {
			"delete": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Delete a tag.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.<br />Authentication via OAuth is required. The user must either have owner privileges for this account,<br />or must be the user that posted the tag.</p>",
				"operationId": "OBPv1.2.1-deleteTagForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TAG_ID",
						"description": "The tag id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorNoViewPermission"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where": {
			"delete": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Delete where tag.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the where tag of the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The user must either have owner privileges for this account, or must be the user that posted the geo tag.</p>",
				"operationId": "OBPv1.2.1-deleteWhereTagForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Get where tag.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the &ldquo;where&rdquo; Geo tag added to the transaction TRANSACTION_ID made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />It represents the location where the transaction has been initiated.</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getWhereTagForViewOnTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionWhereJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Add where tag.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Creates a &ldquo;where&rdquo; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>",
				"operationId": "OBPv1.2.1-addWhereTagForViewOnTransaction",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostTransactionWhereJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Transaction-Metadata",
					"Transaction"
				],
				"summary": "Update where tag.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Updates the &ldquo;where&rdquo; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>",
				"operationId": "OBPv1.2.1-updateWhereTagForViewOnTransaction",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostTransactionWhereJSON"
						}
					},
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account": {
			"get": {
				"tags": [
					"Transaction",
					"Counterparty"
				],
				"summary": "Get Other Account of Transaction",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get other account of a transaction.<br />Returns details of the other party involved in the transaction, moderated by the <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "OBPv1.2.1-getOtherAccountForTransaction",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/OtherAccountJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/transaction": {
			"get": {
				"tags": [
					"Transaction",
					"New-Style"
				],
				"summary": "Get Transaction by Id.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
				"operationId": "OBPv3.1.0-getTransactionByIdForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "TRANSACTION_ID",
						"description": "The transaction id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions": {
			"get": {
				"tags": [
					"View",
					"Account",
					"User",
					"Entitlement"
				],
				"summary": "Get access.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.</p><p>Authentication is Mandatory<br />and the user needs to have access to the owner view.</p>",
				"operationId": "OBPv2.0.0-getPermissionsForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PermissionsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/PROVIDER/{PROVIDER_ID}": {
			"get": {
				"tags": [
					"View",
					"Account",
					"User",
					"New-Style"
				],
				"summary": "Get Account access for User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the list of the views at BANK_ID for account ACCOUNT_ID that a user identified by PROVIDER_ID at their provider PROVIDER has access to.<br />All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER.</p><p>Authentication is Mandatory</p><p>The user needs to have access to the owner view.</p>",
				"operationId": "OBPv3.0.0-getPermissionForUserForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "PROVIDER_ID",
						"description": "The provider id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ViewsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/PROVIDER/{PROVIDER_ID}/views": {
			"post": {
				"tags": [
					"View",
					"Account",
					"User",
					"OwnerViewRequired"
				],
				"summary": "Grant User access to a list of views.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Grants the user identified by PROVIDER_ID at their provider PROVIDER access to a list of views at BANK_ID for account ACCOUNT_ID.</p><p>All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for PROVIDER_ID and PROVIDER.</p><p>Authentication is Mandatory</p><p>The User needs to have access to the owner view.</p>",
				"operationId": "OBPv1.2.1-addPermissionForUserForBankAccountForMultipleViews",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ViewIdsJson"
						}
					},
					{
						"in": "path",
						"name": "PROVIDER_ID",
						"description": "The provider id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ViewsJSONV121"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/PROVIDER/{PROVIDER_ID}/views/{VIEW_ID}": {
			"post": {
				"tags": [
					"View",
					"Account",
					"User",
					"OwnerViewRequired"
				],
				"summary": "Grant User access to View.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Grants the User identified by PROVIDER_ID at PROVIDER access to the view VIEW_ID at BANK_ID for account ACCOUNT_ID.</p><p>All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for PROVIDER and PROVIDER_ID.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>Granting access to a public view will return an error message, as the user already has access.</p>",
				"operationId": "OBPv1.2.1-addPermissionForUserForBankAccountForOneView",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					{
						"in": "path",
						"name": "PROVIDER_ID",
						"description": "The provider id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ViewJSONV121"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER_ID}/{USER_ID}/views": {
			"delete": {
				"tags": [
					"View",
					"Account",
					"User",
					"OwnerViewRequired"
				],
				"summary": "Revoke access to all Views on Account",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Revokes the user identified by PROVIDER_ID at their provider PROVIDER access to all the views at BANK_ID for account ACCOUNT_ID.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>",
				"operationId": "OBPv1.2.1-removePermissionForUserForBankAccountForAllViews",
				"parameters": [
					{
						"in": "path",
						"name": "PROVIDER_ID",
						"description": "The provider id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER_ID}/{USER_ID}/views/{VIEW_ID}": {
			"delete": {
				"tags": [
					"View",
					"Account",
					"User",
					"Entitlement",
					"OwnerViewRequired"
				],
				"summary": "Revoke access to one View.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Revokes the user identified by PROVIDER_ID at their provider PROVIDER access to the view VIEW_ID at BANK_ID for account ACCOUNT_ID.</p><p>Revoking a user access to a public view will return an error message.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>",
				"operationId": "OBPv1.2.1-removePermissionForUserForBankAccountForOneView",
				"parameters": [
					{
						"in": "path",
						"name": "PROVIDER_ID",
						"description": "The provider id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/CODE/attribute": {
			"post": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Create Account Attribute",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Account Attribute</p><p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createAccountAttribute",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountAttributeJson"
						}
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountAttributeResponseJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views": {
			"get": {
				"tags": [
					"View",
					"Account",
					"New-Style"
				],
				"summary": "Get Views for Account.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<h1><a href=\"#views\" id=\"views\">Views</a></h1><p>Views in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the &lsquo;owner&rsquo; view by default. Delegated access is made through other views for example &lsquo;accountants&rsquo;, &lsquo;share-holders&rsquo; or &lsquo;tagging-application&rsquo;. Views can be created via the API and each view has a list of entitlements.</p><p>Views on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.</p><p><strong>Data:</strong> When a view moderates a set of data, some fields my contain the value <code>null</code> rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.</p><p>There is currently one exception to this rule; the &lsquo;holder&rsquo; field in the JSON contains always a value which is either an alias or the real name - indicated by the &lsquo;is_alias&rsquo; field.</p><p><strong>Action:</strong> When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.</p><p><strong>Metadata:</strong><br />Transaction metadata (like images, tags, comments, etc.) will appears <em>ONLY</em> on the view where they have been created e.g. comments posted to the public view only appear on the public view.</p><p>The other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the &lsquo;more_info&rsquo; field in the &lsquo;team&rsquo; view, then the view &lsquo;authorities&rsquo; will show the new value (if it is allowed to do it).</p><h1><a href=\"#all\" id=\"all\">All</a></h1><p><em>Optional</em></p><p>Returns the list of the views created for account ACCOUNT_ID at BANK_ID.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>",
				"operationId": "OBPv3.0.0-getViewsForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ViewsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"View",
					"Account",
					"New-Style"
				],
				"summary": "Create View.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create a view on bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.<br />The &lsquo;alias&rsquo; field in the JSON can take one of three values:</p><ul><li><em>public</em>: to use the public alias if there is one specified for the other account.</li><li><em>private</em>: to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p></li></ul><p>The &lsquo;hide_metadata_if_alias_used&rsquo; field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts&rsquo; metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p><p>The &lsquo;allowed_actions&rsquo; field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p><p>You MUST use a leading _ (underscore) in the view name because other view names are reserved for OBP system views.</p>",
				"operationId": "OBPv3.0.0-createViewForBankAccount",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateViewJson"
						}
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ViewJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}": {
			"delete": {
				"tags": [
					"View",
					"Account"
				],
				"summary": "Delete View",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Deletes the view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID.</p>",
				"operationId": "OBPv1.2.1-deleteViewForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"View",
					"Account",
					"New-Style"
				],
				"summary": "Update View.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update an existing view on a bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>The json sent is the same as during view creation (above), with one difference: the &lsquo;name&rsquo; field<br />of a view is not editable (it is only set when a view is created)</p>",
				"operationId": "OBPv3.0.0-updateViewForBankAccount",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UpdateViewJSON"
						}
					},
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ViewJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/account_ids/private": {
			"get": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Get Accounts at Bank (IDs only).",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns only the list of accounts ids at BANK_ID that the user has access to.</p><p>Each account must have at least one private View.</p><p>For each account the API returns its account ID.</p><p>If you want to see more information on the Views, use the Account Detail call.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getPrivateAccountIdsbyBankId",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountsIdsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/private": {
			"get": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Get Accounts at Bank (Minimal).",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the minimal list of private accounts at BANK_ID that the user has access to.<br />For each account, the API returns the ID, routing addresses and the views available to the current user.</p><p>If you want to see more information on the Views, use the Account Detail call.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-privateAccountsAtOneBank",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CoreAccountsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/accounts/public": {
			"get": {
				"tags": [
					"Account-Public",
					"Account",
					"PublicData",
					"New-Style"
				],
				"summary": "Get Public Accounts at Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>",
				"operationId": "OBPv2.0.0-publicAccountsAtOneBank",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BasicAccountsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/adapter": {
			"get": {
				"tags": [
					"API",
					"New-Style"
				],
				"summary": "Get Adapter Info",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get basic information about the Adapter listening on behalf of this bank.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getAdapter",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdapterInfoJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/atms": {
			"get": {
				"tags": [
					"ATM",
					"New-Style"
				],
				"summary": "Get Bank ATMS",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about ATMs for a single bank specified by BANK_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Pagination:</p><p>By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>",
				"operationId": "OBPv3.0.0-getAtms",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AtmJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"ATM"
				],
				"summary": "Create ATM",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create ATM for the Bank.</p><p>Authentication is Mandatory</p><p>OBP-20006: User is missing one or more roles: CanCreateAtm OR CanCreateAtmAtAnyBank</p>",
				"operationId": "OBPv3.0.0-createAtm",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AtmJsonV300"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AtmJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/atms/ATM_ID": {
			"get": {
				"tags": [
					"ATM",
					"New-Style"
				],
				"summary": "Get Bank ATM",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about ATM for a single bank specified by BANK_ID and ATM_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Authentication is Optional</p>",
				"operationId": "OBPv3.0.0-getAtm",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AtmJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/branches": {
			"get": {
				"tags": [
					"Branch",
					"Bank",
					"New-Style"
				],
				"summary": "Get Branches for a Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about branches for a single bank specified by BANK_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li><li>Structured opening hours</li><li>Accessible flag</li><li>Branch Type</li><li>More Info</li></ul><p>Pagination:</p><p>By default, 50 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination<br />You can also use the follow url query parameters:</p><ul><li><p>city - string, find Branches those in this city, optional</p></li><li><p>withinMetersOf - number, find Branches within given meters distance, optional</p></li><li>nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional</li><li>nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional</li></ul><p>note: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.</p><p>Authentication is Optional</p>",
				"operationId": "OBPv3.0.0-getBranches",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BranchesJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Branch"
				],
				"summary": "Create Branch",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Branch for the Bank.</p><p>Authentication is Mandatory</p><p>OBP-20006: User is missing one or more roles: CanCreateBranch entitlements are required OR CanCreateBranchAtAnyBank</p>",
				"operationId": "OBPv3.0.0-createBranch",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/BranchJsonV300"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BranchJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}": {
			"delete": {
				"tags": [
					"Branch"
				],
				"summary": "Delete Branch",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete Branch from given Bank.</p><p>Authentication is Mandatory</p><p>OBP-20006: User is missing one or more roles: CanDeleteBranch entitlements are required OR CanDeleteBranchAtAnyBank</p>",
				"operationId": "OBPv3.1.0-deleteBranch",
				"parameters": [
					{
						"in": "path",
						"name": "BRANCH_ID",
						"description": "The branch id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Branch",
					"Bank",
					"New-Style"
				],
				"summary": "Get Branch",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about a single Branch specified by BANK_ID and BRANCH_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under.</li></ul><p>Authentication is Optional</p>",
				"operationId": "OBPv3.0.0-getBranch",
				"parameters": [
					{
						"in": "path",
						"name": "BRANCH_ID",
						"description": "The branch id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BranchJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Branch"
				],
				"summary": "Update Branch",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update an existing branch for a bank account (Authenticated access).<br />Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-updateBranch",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/BranchJsonPutV210"
						}
					},
					{
						"in": "path",
						"name": "BRANCH_ID",
						"description": "The branch id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BranchJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/cards": {
			"get": {
				"tags": [
					"Card"
				],
				"summary": "Get cards for the specified bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "",
				"operationId": "OBPv1.3.0-getCardsForBank",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PhysicalCardsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Card"
				],
				"summary": "Create Card",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Card at bank specified by BANK_ID .</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-addCardsForBank",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostPhysicalCardJSON"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PhysicalCardJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/crm-events": {
			"get": {
				"tags": [
					"Customer"
				],
				"summary": "Get CRM Events",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "",
				"operationId": "OBPv1.4.0-getCrmEvents",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CrmEventsJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customer/{CUSTOMER_ID}/messages": {
			"post": {
				"tags": [
					"Customer-Message",
					"Customer",
					"Person"
				],
				"summary": "Add Customer Message.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a message for the customer specified by CUSTOMER_ID</p>",
				"operationId": "OBPv1.4.0-addCustomerMessage",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AddCustomerMessageJson"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customer/messages": {
			"get": {
				"tags": [
					"Customer-Message",
					"Customer"
				],
				"summary": "Get Customer Messages (current)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get messages for the logged in customer<br />Messages sent to the currently authenticated user.</p><p>Authentication via OAuth is required.</p>",
				"operationId": "OBPv1.4.0-getCustomerMessages",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerMessagesJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers": {
			"get": {
				"tags": [
					"Customer"
				],
				"summary": "Get Customers for current User at Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Retuns a list of Customers at the Bank that are linked to the currently authenticated User.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-getCustomersForCurrentUserAtBank",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerJsonV210"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Customer",
					"Person",
					"New-Style"
				],
				"summary": "Create Customer.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>The Customer resource stores the customer number, legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc.<br />Dates need to be in the format 2013-01-21T23:08:00Z</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createCustomer",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostCustomerJsonV310"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}": {
			"get": {
				"tags": [
					"Customer",
					"New-Style"
				],
				"summary": "Get Customer by CUSTOMER_ID",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Gets the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getCustomerByCustomerId",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address": {
			"get": {
				"tags": [
					"Customer",
					"KYC",
					"New-Style"
				],
				"summary": "Get Customer Addresses",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Addresses of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getCustomerAddresses",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerAddressesJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Customer",
					"New-Style"
				],
				"summary": "Add Address to Customer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add an Address to the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createCustomerAddress",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostCustomerAddressJsonV310"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerAddressJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address/CUSTOMER_ADDRESS_ID": {
			"put": {
				"tags": [
					"Customer",
					"New-Style"
				],
				"summary": "Update the Address of an Customer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-updateCustomerAddress",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostCustomerAddressJsonV310"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerAddressJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses/CUSTOMER_ADDRESS_ID": {
			"delete": {
				"tags": [
					"Customer",
					"KYC",
					"New-Style"
				],
				"summary": "Delete Customer Address",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-deleteCustomerAddress",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests": {
			"get": {
				"tags": [
					"Customer"
				],
				"summary": "Get Credit Limit Order Requests ",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><p>Get Credit Limit Order Requests</p>",
				"operationId": "OBPv3.1.0-getCreditLimitRequests",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreditLimitOrderJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Customer",
					"New-Style"
				],
				"summary": "Create Credit Limit Order Request",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><p>Create credit limit order request</p>",
				"operationId": "OBPv3.1.0-createCreditLimitRequest",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreditLimitRequestJson"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreditLimitOrderResponseJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests/REQUEST_ID": {
			"get": {
				"tags": [
					"Customer",
					"New-Style"
				],
				"summary": "Get Credit Limit Order Request By Request Id",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><pre><code>    Get Credit Limit Order Request By Request Id</code></pre>",
				"operationId": "OBPv3.1.0-getCreditLimitRequestByRequestId",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreditLimitOrderJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}": {
			"put": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Add KYC Check",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status.</p>",
				"operationId": "OBPv2.0.0-addKycCheck",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostKycCheckJSON"
						}
					},
					{
						"in": "path",
						"name": "KYC_CHECK_ID",
						"description": "The kyc check id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycCheckJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}": {
			"put": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Add KYC Document.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc.</p>",
				"operationId": "OBPv2.0.0-addKycDocument",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostKycDocumentJSON"
						}
					},
					{
						"in": "path",
						"name": "KYC_DOCUMENT_ID",
						"description": "The kyc document id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycDocumentJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}": {
			"put": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Add KYC Media.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc.</p>",
				"operationId": "OBPv2.0.0-addKycMedia",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostKycMediaJSON"
						}
					},
					{
						"in": "path",
						"name": "KYC_MEDIA_ID",
						"description": "The kyc media id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycMediaJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses": {
			"put": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Add KYC Status",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer</p>",
				"operationId": "OBPv2.0.0-addKycStatus",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostKycStatusJSON"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycStatusJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles": {
			"get": {
				"tags": [
					"Customer"
				],
				"summary": "Get Customer Social Media Handles",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get social media handles for a customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.0.0-getSocialMediaHandles",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SocialMediasJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Customer"
				],
				"summary": "Add Social Media Handle",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a social media handle for the customer specified by CUSTOMER_ID.</p>",
				"operationId": "OBPv2.0.0-addSocialMediaHandle",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SocialMediaJSON"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence": {
			"get": {
				"tags": [
					"Customer",
					"KYC",
					"New-Style"
				],
				"summary": "Get Tax Residences of Customer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Tax Residences of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getTaxResidence",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxResidenceJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Customer",
					"KYC",
					"New-Style"
				],
				"summary": "Add Tax Residence to Customer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Add a Tax Residence to the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createTaxResidence",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostTaxResidenceJsonV310"
						}
					},
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxResidenceJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax_residencies/TAX_RESIDENCE_ID": {
			"delete": {
				"tags": [
					"Customer",
					"KYC",
					"New-Style"
				],
				"summary": "Delete Tax Residence",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-deleteTaxResidence",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/customers/customer-number": {
			"post": {
				"tags": [
					"Customer",
					"KYC",
					"New-Style"
				],
				"summary": "Get Customer by CUSTOMER_NUMBER",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Gets the Customer specified by CUSTOMER_NUMBER.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getCustomerByCustomerNumber",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostCustomerNumberJsonV310"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/transactions": {
			"get": {
				"tags": [
					"Account-Firehose",
					"Account",
					"FirehoseData",
					"New-Style"
				],
				"summary": "Get Firehose Transactions for Account",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Transactions for an Account that has a firehose View.</p><p>Allows bulk access to an account&rsquo;s transactions.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>To find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.</p><p>For VIEW_ID try &lsquo;owner&rsquo;</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getFirehoseTransactionsForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}": {
			"get": {
				"tags": [
					"Account-Firehose",
					"Account",
					"FirehoseData",
					"New-Style"
				],
				"summary": "Get Firehose Accounts at Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Accounts which have a firehose view assigned to them.</p><p>This endpoint allows bulk access to accounts.</p><p>Requires the CanUseFirehoseAtAnyBank Role</p><p>To be shown on the list, each Account must have a firehose View linked to it.</p><p>A firehose view has is_firehose = true</p><p>For VIEW_ID try &lsquo;owner&rsquo;</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getFirehoseAccountsAtOneBank",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ModeratedCoreAccountsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/firehose/customers": {
			"get": {
				"tags": [
					"Account-Firehose",
					"Account",
					"FirehoseData",
					"New-Style"
				],
				"summary": "Get Firehose Customers",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Customers that has a firehose View.</p><p>Allows bulk access to customers.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>Possible custom URL parameters for pagination:</p><ul><li>sort_direction=ASC/DESC</li><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li><li>from_date=DATE =&gt; default value: date of the oldest customer created (format below)</li><li>to_date=DATE =&gt; default value: date of the newest customer created (format below)</li></ul><p><strong>Date format parameter</strong>: yyyy-MM-dd&rsquo;T&rsquo;HH:mm:ss.SSS&rsquo;Z&rsquo;(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getFirehoseCustomers",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/fx": {
			"put": {
				"tags": [
					"FX"
				],
				"summary": "Create Fx",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create or Update Fx for the Bank.</p><p>Authentication is Mandatory</p><p>OBP-20006: User is missing one or more roles: CanCreateFxRate OR CanCreateFxRateAtAnyBank</p>",
				"operationId": "OBPv2.2.0-createFx",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FXRateJsonV220"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FXRateJsonV220"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/fx/{FROM_CURRENCY_CODE}/{TO_CURRENCY_CODE}": {
			"get": {
				"tags": [
					"FX",
					"New-Style"
				],
				"summary": "Get Current FxRate",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the latest FXRate specified by BANK_ID, FROM_CURRENCY_CODE and TO_CURRENCY_CODE</p>",
				"operationId": "OBPv2.2.0-getCurrentFxRate",
				"parameters": [
					{
						"in": "path",
						"name": "TO_CURRENCY_CODE",
						"description": "The to currency code",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "FROM_CURRENCY_CODE",
						"description": "The from currency code",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FXRateJsonV220"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidISOCurrencyCode"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/meetings": {
			"get": {
				"tags": [
					"Customer-Meeting",
					"KYC",
					"Customer",
					"User",
					"Experimental"
				],
				"summary": "Get Meetings",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p>",
				"operationId": "OBPv3.1.0-getMeetings",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MeetingsJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Customer-Meeting",
					"KYC",
					"Customer",
					"User",
					"Experimental"
				],
				"summary": "Create Meeting (video conference/call)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p>",
				"operationId": "OBPv3.1.0-createMeeting",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateMeetingJsonV310"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MeetingJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/meetings/MEETING_ID": {
			"get": {
				"tags": [
					"Customer-Meeting",
					"KYC",
					"Customer",
					"User",
					"Experimental"
				],
				"summary": "Get Meeting",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p>",
				"operationId": "OBPv3.1.0-getMeeting",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MeetingJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/product-collections/COLLECTION_CODE": {
			"get": {
				"tags": [
					"Product-Collection",
					"Product"
				],
				"summary": "Get Product Collection",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about the financial Product Collection specified by BANK_ID and COLLECTION_CODE:</p>",
				"operationId": "OBPv3.1.0-getProductCollection",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductCollectionJsonTreeV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Product-Collection",
					"Product"
				],
				"summary": "Create Product Collection",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create or Update a Product Collection at the Bank.</p><p>Use Product Collections to create Product &ldquo;Baskets&rdquo;, &ldquo;Portfolios&rdquo;, &ldquo;Indices&rdquo;, &ldquo;Collections&rdquo;, &ldquo;Underlyings-lists&rdquo;, &ldquo;Buckets&rdquo; etc. etc.</p><p>There is a many to many relationship between Products and Product Collections:</p><ul><li><p>A Product can exist in many Collections</p></li><li><p>A Collection can contain many Products.</p></li></ul><p>A collection has collection code, one parent Product and one or more child Products.</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p></li></ul><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createProductCollection",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PutProductCollectionsV310"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductCollectionsJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/product-tree/PRODUCT_CODE": {
			"get": {
				"tags": [
					"Product"
				],
				"summary": "Get Product Tree",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about a particular financial product specified by BANK_ID and PRODUCT_CODE<br />and it&rsquo;s parent product(s) recursively as specified by parent_product_code.</p><p>Each product includes the following information.</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License: The licence under which this product data is released. Licence can be an Open Data licence such as Open Data Commons Public Domain Dedication and License (PDDL) or Copyright etc.</li></ul><p>Authentication is Optional</p>",
				"operationId": "OBPv3.1.0-getProductTree",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductTreeJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/products": {
			"get": {
				"tags": [
					"Product"
				],
				"summary": "Get Products",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about the financial products offered by a bank specified by BANK_ID including:</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License the data under this endpoint is released under<br />Authentication is Optional</li></ul>",
				"operationId": "OBPv3.1.0-getProducts",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductsJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/products/CODE": {
			"put": {
				"tags": [
					"Product"
				],
				"summary": "Create Product",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create or Update Product for the Bank.</p><p>Typical Super Family values / Asset classes are:</p><p>Debt<br />Equity<br />FX<br />Commodity<br />Derivative</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p></li></ul><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createProduct",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostPutProductJsonV310"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/products/PRODUCT_CODE": {
			"get": {
				"tags": [
					"Product"
				],
				"summary": "Get Bank Product",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about a financial Product offered by the bank specified by BANK_ID and PRODUCT_CODE including:</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License the data under this endpoint is released under</li></ul><p>Authentication is Optional</p>",
				"operationId": "OBPv3.1.0-getProduct",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductJsonV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/products/PRODUCT_CODE/attribute": {
			"post": {
				"tags": [
					"Product",
					"New-Style"
				],
				"summary": "Create Product Attribute",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Typical product attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type field must be one of &ldquo;STRING&rdquo;, &ldquo;INTEGER&rdquo;, &ldquo;DOUBLE&rdquo; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createProductAttribute",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProductAttributeJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidJsonFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID": {
			"delete": {
				"tags": [
					"Product",
					"New-Style"
				],
				"summary": "Delete Product Attribute",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Delete a Product Attribute by its id.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-deleteProductAttribute",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserHasMissingRoles"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Product",
					"New-Style"
				],
				"summary": "Get Product Attribute",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Get one product attribute by its id.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getProductAttribute",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserHasMissingRoles"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Product",
					"New-Style"
				],
				"summary": "Update Product Attribute",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update Product Attribute.</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Update one Product Attribute by its id.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-updateProductAttribute",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProductAttributeJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserHasMissingRoles"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/public/accounts/{ACCOUNT_ID}/{VIEW_ID}/account": {
			"get": {
				"tags": [
					"Account-Public",
					"Account",
					"New-Style"
				],
				"summary": "Get Public Account by Id",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about an account that has a public view.</p><p>The account is specified by ACCOUNT_ID. The information is moderated by the view specified by VIEW_ID.</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>Routing</li></ul><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />This call provides balance and other account information via delegated authentication using OAuth.</p><p>Authentication is Optional</p>",
				"operationId": "OBPv3.0.0-getPublicAccountById",
				"parameters": [
					{
						"in": "path",
						"name": "VIEW_ID",
						"description": "The view id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ModeratedCoreAccountJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/transaction-request-types": {
			"get": {
				"tags": [
					"Transaction-Request",
					"Bank"
				],
				"summary": "Get supported Transaction Request Types",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the list of the Transaction Request Types supported by the bank.</p><p>Authentication is Optional</p>",
				"operationId": "OBPv2.1.0-getTransactionRequestTypesSupportedByBank",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionRequestTypesJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/transaction-types": {
			"get": {
				"tags": [
					"Bank"
				],
				"summary": "Get Transaction Types at Bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p><ul><li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li><li>summary : A succinct summary</li><li>description : A longer description</li><li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Optional</p>",
				"operationId": "OBPv2.0.0-getTransactionTypes",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionTypesJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankNotFound"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Bank"
				],
				"summary": "Create Transaction Type at bank",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Transaction Types for the bank specified by BANK_ID:</p><ul><li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li><li>summary : A succinct summary</li><li>description : A longer description</li><li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-createTransactionType",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TransactionTypeJsonV200"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionType"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/user_customer_links": {
			"post": {
				"tags": [
					"Customer",
					"User"
				],
				"summary": "Create User Customer Link.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Link a User to a Customer</p><p>Authentication is Mandatory</p><p>CanCreateUserCustomerLink OR CanCreateUserCustomerLinkAtAnyBank entitlements are required.</p>",
				"operationId": "OBPv2.0.0-createUserCustomerLinks",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateUserCustomerLinkJson"
						}
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserCustomerLinkJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"User"
				],
				"summary": "Get Entitlements for User at Bank.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Entitlements specified by BANK_ID and USER_ID</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-getEntitlementsByBankAndUser",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementJSONs"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/cards": {
			"get": {
				"tags": [
					"Card",
					"User"
				],
				"summary": "Get cards for the current user",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p>",
				"operationId": "OBPv1.3.0-getCards",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PhysicalCardsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/config": {
			"get": {
				"tags": [
					"API",
					"New-Style"
				],
				"summary": "Get API Configuration",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul>",
				"operationId": "OBPv3.1.0-config",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ConfigurationJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/connector/loopback": {
			"get": {
				"tags": [
					"API",
					"New-Style"
				],
				"summary": "Get Connector Status (Loopback)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.</p><p>Currently this is only implemented for Kafka based connectors.</p><p>For Kafka based connectors, this endpoint writes a message to Kafka and reads it again.</p><p>In the future, this endpoint may also return information about database connections etc.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getObpApiLoopback",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ObpApiLoopbackJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/consumers/{CONSUMER_ID}/scope/SCOPE_ID": {
			"delete": {
				"tags": [
					"Scope",
					"Role",
					"Entitlement",
					"New-Style"
				],
				"summary": "Delete Consumer Scope",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p>",
				"operationId": "OBPv3.0.0-deleteScope",
				"parameters": [
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/consumers/{CONSUMER_ID}/scopes": {
			"get": {
				"tags": [
					"Scope",
					"Role",
					"Entitlement",
					"New-Style"
				],
				"summary": "Get Scopes for Consumer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getScopes",
				"parameters": [
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ScopeJsons"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Scope",
					"Role",
					"New-Style"
				],
				"summary": "Add Scope for a Consumer.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &ldquo;bank_id&rdquo;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &ldquo;bank_id&rdquo;:&ldquo;my-bank-id&rdquo;</p>",
				"operationId": "OBPv3.0.0-addScope",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateScopeJson"
						}
					},
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ScopeJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_checks": {
			"get": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Get Customer KYC Checks",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get KYC checks for the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.0.0-getKycChecks",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycChecksJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_documents": {
			"get": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Get Customer KYC Documents",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID<br />Get a list of documents that affirm the identity of the customer<br />Passport, driving licence etc.<br />Authentication is Optional</p>",
				"operationId": "OBPv2.0.0-getKycDocuments",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycDocumentsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_media": {
			"get": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Get KYC Media for a customer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get KYC media (scans, pictures, videos) that affirms the identity of the customer.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.0.0-getKycMedia",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycMediasJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_statuses": {
			"get": {
				"tags": [
					"KYC",
					"Customer"
				],
				"summary": "Get Customer KYC statuses",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the KYC statuses for a customer specified by CUSTOMER_ID over time.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.0.0-getKycStatuses",
				"parameters": [
					{
						"in": "path",
						"name": "CUSTOMER_ID",
						"description": "The customer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/KycStatusesJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/entitlement-requests": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"User",
					"New-Style"
				],
				"summary": "Get all Entitlement Requests",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get all Entitlement Requests</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getAllEntitlementRequests",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementRequestsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Role",
					"Entitlement",
					"User",
					"New-Style"
				],
				"summary": "Add Entitlement Request for current User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Entitlement Request.</p><p>Any logged in User can use this endpoint to request an Entitlement</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &ldquo;bank_id&rdquo;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &ldquo;bank_id&rdquo;:&ldquo;my-bank-id&rdquo;</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-addEntitlementRequest",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateEntitlementJSON"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementRequestJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/entitlement-requests/ENTITLEMENT_REQUEST_ID": {
			"delete": {
				"tags": [
					"Role",
					"Entitlement",
					"User",
					"New-Style"
				],
				"summary": "Delete Entitlement Request",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-deleteEntitlementRequest",
				"parameters": [

				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/entitlements": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"New-Style"
				],
				"summary": "Get all Entitlements",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Login is required.</p><p>Possible filter on the role field:</p><p>eg: /entitlements?role=CanGetCustomer</p>",
				"operationId": "OBPv3.1.0-getAllEntitlements",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementJSONs"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/aggregate-metrics": {
			"get": {
				"tags": [
					"Metric",
					"Aggregate-Metrics",
					"New-Style"
				],
				"summary": "Get Aggregate Metrics",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns aggregate metrics on api usage eg. total count, response time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg: /management/aggregate-metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain &lsquo;&amp;&rsquo;.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getAggregateMetrics",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AggregateMetricJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/banks/{BANK_ID}/account-web-hooks": {
			"get": {
				"tags": [
					"Webhook",
					"Bank",
					"New-Style"
				],
				"summary": "Get Account Webhooks",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Account Webhooks.</p><p>Possible custom URL parameters for pagination:</p><ul><li>limit=NUMBER</li><li>offset=NUMBER</li><li>account_id=STRING</li><li>user_id=STRING</li></ul>",
				"operationId": "OBPv3.1.0-getAccountWebhooks",
				"parameters": [
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountWebhooksJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/connector/metrics": {
			"get": {
				"tags": [
					"Metric",
					"API"
				],
				"summary": "Get Connector Metrics",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=2017-09-19&amp;to_date=2017-09-19&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=2017-09-19</p><p>2 to_date (defaults to current date) eg:to_date=2017-09-19</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=2017-09-19&amp;to_date=2017-09-19&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p>",
				"operationId": "OBPv2.2.0-getConnectorMetrics",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ConnectorMetricsJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorInvalidDateFormat"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/consumers": {
			"get": {
				"tags": [
					"Consumer",
					"API"
				],
				"summary": "Get Consumers",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the all Consumers.</p>",
				"operationId": "OBPv2.1.0-getConsumers",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ConsumersJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/consumers/{CONSUMER_ID}": {
			"get": {
				"tags": [
					"Consumer",
					"API"
				],
				"summary": "Get Consumer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Consumer specified by CONSUMER_ID.</p>",
				"operationId": "OBPv2.1.0-getConsumer",
				"parameters": [
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ConsumerJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Consumer",
					"API"
				],
				"summary": "Enable or Disable Consumers",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Enable/Disable a Consumer specified by CONSUMER_ID.</p>",
				"operationId": "OBPv2.1.0-enableDisableConsumers",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PutEnabledJSON"
						}
					},
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PutEnabledJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits": {
			"get": {
				"tags": [
					"Consumer",
					"New-Style"
				],
				"summary": "Get Call Limits for a Consumer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Calls limits per Consumer.<br />Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getCallsLimit",
				"parameters": [
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CallLimitJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Consumer",
					"New-Style"
				],
				"summary": "Set Calls Limit for a Consumer",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Set the API call limits for a Consumer:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-callsLimit",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CallLimitPostJson"
						}
					},
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CallLimitPostJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/redirect_url": {
			"put": {
				"tags": [
					"Consumer",
					"API"
				],
				"summary": "Update Consumer RedirectUrl",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint &lsquo;Get Consumers&rsquo; to get it</p>",
				"operationId": "OBPv2.1.0-updateConsumerRedirectUrl",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsumerRedirectUrlJSON"
						}
					},
					{
						"in": "path",
						"name": "CONSUMER_ID",
						"description": "new consumer id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ConsumerJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/metrics": {
			"get": {
				"tags": [
					"Metric",
					"API"
				],
				"summary": "Get Metrics",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the all metrics</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&ldquo;url&rdquo;,<br />&ldquo;date&rdquo;,<br />&ldquo;user_name&rdquo;,<br />&ldquo;app_name&rdquo;,<br />&ldquo;developer_email&rdquo;,<br />&ldquo;implemented_by_partial_function&rdquo;,<br />&ldquo;implemented_in_version&rdquo;,<br />&ldquo;consumer_id&rdquo;,<br />&ldquo;verb&rdquo;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:<a href=\"&#x6d;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#48;&#53;.&#48;&#48;&#x30;&#x5a;&#x26;&#108;&#105;&#109;i&#x74;=&#49;&#48;&#48;0&#x30;&#38;&#111;&#x66;&#102;&#115;&#101;&#116;=&#x30;&amp;&#97;n&#x6f;&#x6e;&#x3d;&#102;&#x61;&#x6c;&#115;e&#38;&#x61;p&#112;_&#x6e;&#x61;&#109;&#x65;&#61;&#x54;&#x65;a&#116;&#65;&#112;p&#38;&#105;&#x6d;p&#x6c;e&#x6d;&#x65;&#x6e;&#x74;&#101;d&#x5f;&#x69;&#110;&#95;&#118;&#x65;&#114;&#115;&#105;&#x6f;&#110;&#x3d;v&#x32;.&#x31;&#46;&#48;&amp;&#x76;&#101;&#114;&#x62;&#61;&#x50;&#x4f;&#x53;T&#38;&#117;&#115;&#101;r&#95;&#x69;&#x64;&#x3d;&#99;&#x37;&#98;&#54;&#x63;&#98;4&#x37;&#x2d;c&#x62;&#x39;&#54;&#45;&#x34;44&#x31;&#45;&#x38;&#x38;&#48;&#x31;&#x2d;&#51;&#x35;&#x62;&#53;&#x37;4&#53;&#54;&#55;&#x35;&#x33;&#97;&#x26;&#x75;s&#x65;&#114;&#x5f;&#x6e;a&#109;&#x65;&#x3d;&#x73;&#117;&#115;&#x61;&#110;&#x2e;&#117;k&#x2e;&#50;&#x39;@e&#x78;&#x61;&#x6d;p&#108;&#101;&#46;&#99;&#x6f;&#x6d;\">&#x30;&#53;&#x2e;&#x30;&#x30;&#48;&#90;&#x26;&#108;&#x69;m&#x69;&#x74;&#x3d;1&#x30;0&#x30;&#x30;&amp;&#x6f;f&#102;&#x73;&#x65;t=0&#x26;&#x61;n&#111;&#x6e;=f&#x61;&#108;s&#101;&#38;&#x61;&#112;&#x70;&#x5f;&#x6e;&#x61;&#109;&#x65;&#61;T&#x65;&#97;&#x74;&#x41;&#x70;p&#38;&#105;&#x6d;&#112;&#x6c;&#101;&#109;&#101;&#x6e;&#116;e&#100;&#x5f;in_&#x76;&#101;&#x72;&#x73;&#105;&#111;&#110;=&#x76;&#x32;&#x2e;&#49;&#46;&#x30;&#x26;&#118;&#x65;&#x72;&#98;=&#x50;OS&#84;&#38;&#117;s&#101;&#114;&#x5f;&#105;&#100;&#61;&#x63;&#55;&#98;&#x36;&#x63;&#x62;&#x34;&#x37;&#45;&#x63;&#98;&#x39;&#54;&#x2d;4&#x34;&#52;&#x31;&#45;&#56;8&#48;1-&#x33;&#x35;b5&#x37;&#x34;&#x35;&#x36;&#55;5&#51;&#97;&#38;&#x75;s&#x65;r&#x5f;&#x6e;&#x61;&#109;&#101;&#x3d;&#x73;us&#97;&#x6e;&#x2e;&#x75;&#x6b;&#x2e;29&#64;&#x65;&#120;&#x61;&#109;&#x70;&#x6c;e&#x2e;&#x63;&#x6f;&#109;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain &lsquo;&amp;&rsquo;.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p>",
				"operationId": "OBPv2.1.0-getMetrics",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MetricsJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/metrics/top-apis": {
			"get": {
				"tags": [
					"Metric",
					"New-Style"
				],
				"summary": "Get Top APIs",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get metrics abou the most popular APIs. e.g.: total count, response time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg: /management/metrics/top-apis?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain &lsquo;&amp;&rsquo;.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getTopAPIs",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TopApisJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/metrics/top-consumers": {
			"get": {
				"tags": [
					"Metric",
					"New-Style"
				],
				"summary": "Get Top Consumers",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get metrics about the top consumers of the API usage e.g. total count, consumer_id and app_name.</p><p>Should be able to filter on the following fields</p><p>e.g.: /management/metrics/top-consumers?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-05-22T01:02:03.000Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null<br />&amp;limit=100</p><p>1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain &lsquo;&amp;&rsquo;.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>16 limit (for pagination: defaults to 50)  eg:limit=200</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getMetricsTopConsumers",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TopConsumersJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/management/users/current/consumers": {
			"get": {
				"tags": [
					"Consumer",
					"API",
					"New-Style"
				],
				"summary": "Get Consumers (logged in User)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the Consumers for logged in User.</p>",
				"operationId": "OBPv3.1.0-getConsumersForCurrentUser",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ConsumersJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/message-docs/CONNECTOR": {
			"get": {
				"tags": [
					"Documentation",
					"API"
				],
				"summary": "Get Message Docs",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>:kafka_vMar2017 , kafka_vJune2017, kafka_vSept2018 &hellip;</p>",
				"operationId": "OBPv2.2.0-getMessageDocs",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MessageDocsJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/my/accounts": {
			"get": {
				"tags": [
					"Account",
					"PrivateData",
					"New-Style"
				],
				"summary": "Get Accounts at all Banks (private)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns the list of accounts containing private views for the user.<br />Each account lists the views available to the user.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-corePrivateAccountsAllBanks",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CoreAccountsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account": {
			"get": {
				"tags": [
					"Account",
					"New-Style"
				],
				"summary": "Get Account by Id (Core)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Information returned about the account specified by ACCOUNT_ID:</p><ul><li>Number - The human readable account number given by the bank that identifies the account.</li><li>Label - A label given by the owner of the account</li><li>Owners - Users that own this account</li><li>Type - The type of account</li><li>Balance - Currency and Value</li><li>Account Routings - A list that might include IBAN or national account identifiers</li><li>Account Rules - A list that might include Overdraft and other bank specific rules</li></ul><p>This call returns the owner view and requires access to that view.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getCoreAccountById",
				"parameters": [
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ModeratedCoreAccountJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorBankAccountNotFound"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions": {
			"get": {
				"tags": [
					"Transaction",
					"Account",
					"New-Style"
				],
				"summary": "Get Transactions for Account (Core)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p><p>Authentication is Mandatory</p><p>Possible custom headers for pagination:</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC. The sort field is the completed date.</li><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li><li>from_date=DATE =&gt; default value: 0000-00-00T00:00:00.000Z</li><li>to_date=DATE =&gt; default value: 3049-01-01T00:00:00.000Z</li></ul><p><strong>Date format parameter</strong>: yyyy-MM-dd&rsquo;T&rsquo;HH:mm:ss.SSS&rsquo;Z&rsquo;(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p>",
				"operationId": "OBPv3.0.0-getCoreTransactionsForBankAccount",
				"parameters": [
					{
						"in": "path",
						"name": "ACCOUNT_ID",
						"description": "The account id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "BANK_ID",
						"description": "The bank id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CoreTransactionsJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorFilterSortDirectionError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/my/entitlement-requests": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"User",
					"New-Style"
				],
				"summary": "Get Entitlement Requests for the current User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Entitlement Requests for the current User.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getEntitlementRequestsForCurrentUser",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementRequestsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/my/entitlements": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"User",
					"New-Style"
				],
				"summary": "Get Entitlements for the current User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Entitlements for the current User.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getEntitlementsForCurrentUser",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementJSONs"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/rate-limiting": {
			"get": {
				"tags": [
					"API",
					"New-Style"
				],
				"summary": "Get Rate Limiting Info",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getRateLimitingInfo",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/RateLimitingInfoV310"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/resource-docs/{API_VERSION}/obp": {
			"get": {
				"tags": [
					"Documentation",
					"API"
				],
				"summary": "Get Resource Docs.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul>",
				"operationId": "OBPv1.4.0-getResourceDocsObp",
				"parameters": [
					{
						"in": "path",
						"name": "API_VERSION",
						"description": "eg:v2.2.0, v3.0.0",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/resource-docs/{API_VERSION}/swagger": {
			"get": {
				"tags": [
					"Documentation",
					"API"
				],
				"summary": "Get Swagger documentation",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the &lsquo;tags&rsquo; url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the &lsquo;functions&rsquo; url parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>(Each endpoint is implemented in the OBP Scala code by a &lsquo;function&rsquo;)</p><p>See the Resource Doc endpoint for more information.</p>",
				"operationId": "OBPv1.4.0-getResourceDocsSwagger",
				"parameters": [
					{
						"in": "path",
						"name": "API_VERSION",
						"description": "eg:v2.2.0, v3.0.0",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/roles": {
			"get": {
				"tags": [
					"Role",
					"New-Style"
				],
				"summary": "Get Roles",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns all available roles</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-getRoles",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AvailableRolesJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/root": {
			"get": {
				"tags": [
					"API"
				],
				"summary": "Get API Info (root)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Git Commit</li></ul>",
				"operationId": "OBPv1.2.1-root",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/APIInfoJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUnknownError"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/sandbox/data-import": {
			"post": {
				"tags": [
					"Sandbox",
					"API"
				],
				"summary": "Create sandbox",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Import bulk data into the sandbox (Authenticated access).</p><p>This call can be used to create banks, users, accounts and transactions which are stored in the local RDBMS.</p><p>The user needs to have CanCreateSandbox entitlement.</p><p>Note: This is a monolithic call. You could also use a combination of endpoints including create bank, create user, create account and create transaction request to create similar data.</p><p>An example of an import set of data (json) can be found <a href=\"https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json\">here</a><br />Authentication is Mandatory</p>",
				"operationId": "OBPv2.1.0-sandboxDataImport",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SandboxDataImport"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SuccessMessage"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/search/metrics": {
			"get": {
				"tags": [
					"Metric",
					"API"
				],
				"summary": "Search API Metrics via Elasticsearch.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&ldquo;query&rdquo;:{&ldquo;query_string&rdquo;:{&ldquo;query&rdquo;:&ldquo;findThis&rdquo;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p>",
				"operationId": "OBPv2.0.0-elasticSearchMetrics",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/search/warehouse/INDEX": {
			"post": {
				"tags": [
					"Data-Warehouse",
					"New-Style"
				],
				"summary": "Data Warehouse Search",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Search the data warehouse and get row level results.</p><p>Authentication is Mandatory</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>",
				"operationId": "OBPv3.0.0-dataWarehouseSearch",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ElasticSearchJSON"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/search/warehouse/statistics/INDEX/FIELD": {
			"post": {
				"tags": [
					"Data-Warehouse",
					"New-Style"
				],
				"summary": "Data Warehouse Statistics",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>Authentication is Mandatory</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>",
				"operationId": "OBPv3.0.0-dataWarehouseStatistics",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ElasticSearchJSON"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users": {
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get all Users",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get all users</p><p>Authentication is Mandatory</p><p>CanGetAnyUser entitlement is required,</p>",
				"operationId": "OBPv3.0.0-getUsers",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UsersJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"User",
					"Onboarding"
				],
				"summary": "Create User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Creates OBP user.<br />No authorisation (currently) required.</p><p>Mimics current webform to Register.</p><p>Requires username(email) and password.</p><p>Returns 409 error if username not unique.</p><p>May require validation of email address.</p>",
				"operationId": "OBPv2.0.0-createUser",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateUserJson"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/USERNAME/lock-status": {
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get User Lock Status",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get User Login Status.<br />Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getBadLoginStatus",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BadLoginStatusJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"put": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Unlock the user",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Unlock a User.</p><p>(Perhaps the user was locked due to multiple failed login attempts)</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-unlockUser",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BadLoginStatusJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/{USER_ID}/auth-context": {
			"delete": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Delete User's Auth Contexts",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete the Auth Contexts of a User specified by USER_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-deleteUserAuthContexts",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get User Auth Contexts",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get User Auth Contexts for a User.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-getUserAuthContexts",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserAuthContextsJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Create User Auth Context",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create User Auth Context.<br />Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-createUserAuthContext",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PostUserAuthContextJson"
						}
					},
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserAuthContextJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/{USER_ID}/auth-context/USER_AUTH_CONTEXT_ID": {
			"delete": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Delete User Auth Context",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-deleteUserAuthContextById",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/{USER_ID}/entitlement-requests": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"User",
					"New-Style"
				],
				"summary": "Get Entitlement Requests for a User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get Entitlement Requests for a User.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getEntitlementRequests",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementRequestsJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/{USER_ID}/entitlement/{ENTITLEMENT_ID}": {
			"delete": {
				"tags": [
					"Role",
					"User",
					"Entitlement"
				],
				"summary": "Delete Entitlement",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p>",
				"operationId": "OBPv2.0.0-deleteEntitlement",
				"parameters": [
					{
						"in": "path",
						"name": "ENTITLEMENT_ID",
						"description": "The entitblement id",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/{USER_ID}/entitlements": {
			"get": {
				"tags": [
					"Role",
					"Entitlement",
					"User"
				],
				"summary": "Get Entitlements for User",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Authentication is Mandatory</p>",
				"operationId": "OBPv2.0.0-getEntitlements",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementJSONs"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Role",
					"Entitlement",
					"User"
				],
				"summary": "Add Entitlement for a User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Create Entitlement. Grant Role to User.</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &ldquo;bank_id&rdquo;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &ldquo;bank_id&rdquo;:&ldquo;my-bank-id&rdquo;</p><p>Authentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.</p>",
				"operationId": "OBPv2.0.0-addEntitlement",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateEntitlementJSON"
						}
					},
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/EntitlementJSON"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/{USER_ID}/refresh": {
			"post": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Refresh User.",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>The endpoint is used for updating the accounts, views, account holders for the user.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.1.0-refreshUser",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "BANK_BODY",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EmptyClassJson"
						}
					},
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/RefreshUserJson"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserHasMissingRoles"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/current": {
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get User (Current)",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get the logged in user</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getCurrentUser",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/current/customers": {
			"get": {
				"tags": [
					"Customer",
					"User",
					"New-Style"
				],
				"summary": "Get Customers for Current User",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Gets all Customers that are linked to a User.</p><p>Authentication is Mandatory</p>",
				"operationId": "OBPv3.0.0-getCustomersForUser",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerJsonV300"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/email/EMAIL/terminator": {
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get Users by Email Address",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get users by email address</p><p>Authentication is Mandatory<br />CanGetAnyUser entitlement is required,</p>",
				"operationId": "OBPv3.0.0-getUser",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UsersJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/user_id/{USER_ID}": {
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get User by USER_ID",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get user by USER_ID</p><p>Authentication is Mandatory<br />CanGetAnyUser entitlement is required,</p>",
				"operationId": "OBPv3.0.0-getUserByUserId",
				"parameters": [
					{
						"in": "path",
						"name": "USER_ID",
						"description": "The user id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UsersJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		},
		"/obp/v3.1.0/users/username/USERNAME": {
			"get": {
				"tags": [
					"User",
					"New-Style"
				],
				"summary": "Get User by USERNAME",
				"security": [
					{
						"directLogin": [

						],
						"gatewayLogin": [

						]
					}
				],
				"description": "<p>Get user by USERNAME</p><p>Authentication is Mandatory</p><p>CanGetAnyUser entitlement is required,</p>",
				"operationId": "OBPv3.0.0-getUserByUsername",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UsersJsonV200"
						}
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/ErrorUserNotLoggedIn"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"ErrorHostnameNotSpecified": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00001: Hostname not specified. Could not get hostname from Props. Please edit your props file. Here are some example settings: hostname=http://127.0.0.1:8080 or hostname=https://www.example.com"
				}
			}
		},
		"ErrorDataImportDisabled": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00002: Data import is disabled for this API instance."
				}
			}
		},
		"ErrorTransactionDisabled": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00003: Transaction Requests is disabled in this API instance."
				}
			}
		},
		"ErrorServerAddDataError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00004: Server error: could not add message"
				}
			}
		},
		"ErrorPublicViewsNotAllowedOnThisInstance": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00005: Public views not allowed on this instance. Please set allow_public_views = true in props files. "
				}
			}
		},
		"ErrorRemoteDataSecretMatchError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00006: Remote data secret cannot be matched! Check OBP-API and OBP-Storage Props values for remotedata.hostname, remotedata.port and remotedata.secret."
				}
			}
		},
		"ErrorRemoteDataSecretObtainError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00007: Remote data secret cannot be obtained! Check OBP-API and OBP-Storage Props values for remotedata.hostname, remotedata.port and remotedata.secret."
				}
			}
		},
		"ErrorApiVersionNotSupported": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00008: The API version you called is not enabled on this server. Please contact your API administrator or use another version."
				}
			}
		},
		"ErrorFirehoseViewsNotAllowedOnThisInstance": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00009: Firehose views not allowed on this instance. Please set allow_firehose_views = true in props files. "
				}
			}
		},
		"ErrorMissingPropsValueAtThisInstance": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00010: Missing props value at this API instance - "
				}
			}
		},
		"ErrorNoValidElasticsearchIndicesConfigured": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00011: No elasticsearch indices are allowed on this instance. Please set es.warehouse.allowed.indices = index1,index2 (or = ALL for all). "
				}
			}
		},
		"ErrorInvalidJsonFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10001: Incorrect json format."
				}
			}
		},
		"ErrorInvalidNumber": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10002: Invalid Number. Could not convert value to a number."
				}
			}
		},
		"ErrorInvalidISOCurrencyCode": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. "
				}
			}
		},
		"ErrorFXCurrencyCodeCombinationsNotSupported": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10004: ISO Currency code combination not supported for FX. Please modify the FROM_CURRENCY_CODE or TO_CURRENCY_CODE. "
				}
			}
		},
		"ErrorInvalidDateFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10005: Invalid Date Format. Could not convert value to a Date."
				}
			}
		},
		"ErrorInvalidCurrency": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10006: Invalid Currency Value."
				}
			}
		},
		"ErrorIncorrectRoleName": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10007: Incorrect Role name: "
				}
			}
		},
		"ErrorCouldNotTransformJsonToInternalModel": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10008: Could not transform Json to internal model."
				}
			}
		},
		"ErrorCountNotSaveOrUpdateResource": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10009: Could not save or update resource."
				}
			}
		},
		"ErrorNotImplemented": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10010: Not Implemented "
				}
			}
		},
		"ErrorInvalidFutureDateValue": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10011: future_date has to be in future."
				}
			}
		},
		"ErrormaximumLimitExceeded": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10012: Invalid value. Maximum number is 10000."
				}
			}
		},
		"ErrorattemptedToOpenAnEmptyBox": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10013: Attempted to open an empty Box."
				}
			}
		},
		"ErrorcannotDecryptValueOfProperty": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10014: Could not decrypt value of property "
				}
			}
		},
		"ErrorAllowedValuesAre": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10015: Allowed values are: "
				}
			}
		},
		"ErrorInvalidFilterParameterFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10016: Incorrect filter Parameters in URL. "
				}
			}
		},
		"ErrorInvalidUrl": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10017: Incorrect URL Format. "
				}
			}
		},
		"ErrorTooManyRequests": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10018: Too Many Requests."
				}
			}
		},
		"ErrorInvalidBoolean": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10019: Invalid Boolean. Could not convert value to a boolean type."
				}
			}
		},
		"ErrorInvalidUri": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-404: 404 Not Found. The server has not found anything matching the Request-URI.Check your URL and the headers. NOTE: when it is POST or PUT api, the Content-Type must be `application/json`. OBP only support the json format body."
				}
			}
		},
		"ErrorFilterSortDirectionError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!"
				}
			}
		},
		"ErrorFilterOffersetError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!"
				}
			}
		},
		"ErrorFilterLimitError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!"
				}
			}
		},
		"ErrorFilterDateFormatError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'!"
				}
			}
		},
		"ErrorFilterAnonFormatError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10028: anon parameter can only take two values: TRUE or FALSE!"
				}
			}
		},
		"ErrorFilterDurationFormatError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10029: wrong value for `duration` parameter. Please send a positive integer (=>0)!"
				}
			}
		},
		"ErrorInvalidApiVersionString": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-00027: Invalid API Version string. We could not find the version specified."
				}
			}
		},
		"ErrorIncorrectTriggerName": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-10028: Incorrect Trigger name: "
				}
			}
		},
		"ErrorUserNotLoggedIn": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20001: User not logged in. Authentication is required!"
				}
			}
		},
		"ErrorDirectLoginMissingParameters": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20002: These DirectLogin parameters are missing: "
				}
			}
		},
		"ErrorDirectLoginInvalidToken": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20003: This DirectLogin token is invalid or expired: "
				}
			}
		},
		"ErrorInvalidLoginCredentials": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20004: Invalid login credentials. Check username/password."
				}
			}
		},
		"ErrorUserNotFoundById": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20005: User not found. Please specify a valid value for USER_ID."
				}
			}
		},
		"ErrorUserHasMissingRoles": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20006: User is missing one or more roles: "
				}
			}
		},
		"ErrorUserNotFoundByEmail": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20007: User not found by email."
				}
			}
		},
		"ErrorInvalidConsumerKey": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20008: Invalid Consumer Key."
				}
			}
		},
		"ErrorInvalidConsumerCredentials": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20009: Invalid consumer credentials"
				}
			}
		},
		"ErrorInvalidValueLength": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20010: Value too long"
				}
			}
		},
		"ErrorInvalidValueCharacters": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20011: Value contains invalid characters"
				}
			}
		},
		"ErrorInvalidDirectLoginParameters": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20012: Invalid direct login parameters"
				}
			}
		},
		"ErrorUsernameHasBeenLocked": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20013: The account has been locked, please contact administrator !"
				}
			}
		},
		"ErrorInvalidConsumerId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID."
				}
			}
		},
		"ErrorUserNoPermissionUpdateConsumer": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20015: Only the developer that created the consumer key should be able to edit it, please login with the right user."
				}
			}
		},
		"ErrorUnexpectedErrorDuringLogin": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20016: An unexpected login error occurred. Please try again."
				}
			}
		},
		"ErrorUserNoPermissionAccessView": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID."
				}
			}
		},
		"ErrorInvalidInternalRedirectUrl": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20018: Login failed, invalid internal redirectUrl."
				}
			}
		},
		"ErrorUserNoOwnerView": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20019: User does not have access to owner view. "
				}
			}
		},
		"ErrorInvalidCustomViewFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20020: View name must start with `_`. eg: _work, _life "
				}
			}
		},
		"ErrorSystemViewsCanNotBeModified": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20021: System Views can not be modified. Only the created views can be modified."
				}
			}
		},
		"ErrorViewDoesNotPermitAccess": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20022: View does not permit the access."
				}
			}
		},
		"ErrorConsumerHasMissingRoles": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20023: Consumer is missing one or more roles: "
				}
			}
		},
		"ErrorConsumerNotFoundById": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20024: Consumer not found. Please specify a valid value for CONSUMER_ID."
				}
			}
		},
		"ErrorScopeNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20025: Scope not found. Please specify a valid value for SCOPE_ID."
				}
			}
		},
		"ErrorConsumerDoesNotHaveScope": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20026: CONSUMER_ID does not have the SCOPE_ID "
				}
			}
		},
		"ErrorUserNotFoundByUsername": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20027: User not found by username."
				}
			}
		},
		"ErrorGatewayLoginMissingParameters": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20028: These GatewayLogin parameters are missing: "
				}
			}
		},
		"ErrorGatewayLoginUnknownError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20029: Unknown Gateway login error."
				}
			}
		},
		"ErrorGatewayLoginHostPropertyMissing": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20030: Property gateway.host is not defined."
				}
			}
		},
		"ErrorGatewayLoginWhiteListAddresses": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20031: Gateway login can be done only from allowed addresses."
				}
			}
		},
		"ErrorGatewayLoginJwtTokenIsNotValid": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20040: The JWT is corrupted/changed during a transport."
				}
			}
		},
		"ErrorGatewayLoginCannotExtractJwtToken": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20041: Header, Payload and Signature cannot be extracted from the JWT."
				}
			}
		},
		"ErrorGatewayLoginNoNeedToCallCbs": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20042: There is no need to call CBS"
				}
			}
		},
		"ErrorGatewayLoginCannotFindUser": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20043: User cannot be found. Please initiate CBS communication in order to create it."
				}
			}
		},
		"ErrorGatewayLoginCannotGetCbsToken": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20044: Cannot get the CBSToken response from South side"
				}
			}
		},
		"ErrorGatewayLoginCannotGetOrCreateUser": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20045: Cannot get or create user during GatewayLogin process."
				}
			}
		},
		"ErrorGatewayLoginNoJwtForResponse": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20046: There is no useful value for JWT."
				}
			}
		},
		"ErrorUserNotSuperAdmin": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20050: Current User is not a Super Admin!"
				}
			}
		},
		"ErrorElasticSearchIndexNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20051: Elasticsearch index or indices not found."
				}
			}
		},
		"ErrorNotEnoughtSearchStatisticsResults": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20052: Result set too small. Will not be displayed for reasons of privacy."
				}
			}
		},
		"ErrorElasticSearchEmptyQueryBody": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20053: The Elasticsearch query body cannot be empty"
				}
			}
		},
		"ErrorElasticSearchDisabled": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20056: Elasticsearch is disabled for this API instance."
				}
			}
		},
		"ErrorOauth2IsNotAllowed": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20201: OAuth2 is not allowed at this instance."
				}
			}
		},
		"ErrorOauth2IJwtCannotBeVerified": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20202: OAuth2's Access Token cannot be verified."
				}
			}
		},
		"ErrorOauth2ThereIsNoUrlOfJwkSet": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20203: There is no an URL of OAuth 2.0 server's JWK set, published at a well-known URL."
				}
			}
		},
		"ErrorOauth2BadJWTException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20204: Bad JWT error. "
				}
			}
		},
		"ErrorOauth2ParseException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20205: Parse error. "
				}
			}
		},
		"ErrorOauth2BadJOSEException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20206: Bad JSON Object Signing and Encryption (JOSE) exception. "
				}
			}
		},
		"ErrorOauth2JOSEException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20207: Javascript Object Signing and Encryption (JOSE) exception. "
				}
			}
		},
		"ErrorOauth2CannotMatchIssuerAndJwksUriException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20208: Cannot match the issuer and JWKS URI at this server instance. "
				}
			}
		},
		"ErrorInvalidAmount": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20054: Invalid amount. Please specify a valid value for amount."
				}
			}
		},
		"ErrorMissingQueryParams": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20055: These query parameters are missing: "
				}
			}
		},
		"ErrorUserNotSuperAdminOrMissRole": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-20101: Current User is not super admin or is missing entitlements: "
				}
			}
		},
		"ErrorBankNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
				}
			}
		},
		"ErrorCustomerNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30002: Customer not found. Please specify a valid value for CUSTOMER_NUMBER."
				}
			}
		},
		"ErrorCustomerNotFoundByCustomerId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID."
				}
			}
		},
		"ErrorAccountNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID."
				}
			}
		},
		"ErrorCounterpartyNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30004: Counterparty not found. The BANK_ID / ACCOUNT_ID specified does not exist on this server."
				}
			}
		},
		"ErrorViewNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID"
				}
			}
		},
		"ErrorCustomerNumberAlreadyExists": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30006: Customer Number already exists. Please specify a different value for BANK_ID or CUSTOMER_NUMBER."
				}
			}
		},
		"ErrorCustomerAlreadyExistsForUser": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID"
				}
			}
		},
		"ErrorUserCustomerLinksNotFoundForUser": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30008: User Customer Link not found by USER_ID"
				}
			}
		},
		"ErrorAtmNotFoundByAtmId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30009: ATM not found. Please specify a valid value for ATM_ID."
				}
			}
		},
		"ErrorBranchNotFoundByBranchId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-300010: Branch not found. Please specify a valid value for BRANCH_ID."
				}
			}
		},
		"ErrorProductNotFoundByProductCode": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE."
				}
			}
		},
		"ErrorCounterpartyNotFoundByIban": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30012: Counterparty not found. Please specify a valid value for IBAN."
				}
			}
		},
		"ErrorCounterpartyBeneficiaryPermit": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30013: The account can not send money to the Counterparty. Please set the Counterparty 'isBeneficiary' true first"
				}
			}
		},
		"ErrorCounterpartyAlreadyExists": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME."
				}
			}
		},
		"ErrorCreateBranchError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30015: Could not insert the Branch"
				}
			}
		},
		"ErrorUpdateBranchError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30016: Could not update the Branch"
				}
			}
		},
		"ErrorCounterpartyNotFoundByCounterpartyId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID."
				}
			}
		},
		"ErrorBankAccountNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. "
				}
			}
		},
		"ErrorConsumerNotFoundByConsumerId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID."
				}
			}
		},
		"ErrorCreateBankError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30020: Could not create the Bank"
				}
			}
		},
		"ErrorUpdateBankError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30021: Could not update the Bank"
				}
			}
		},
		"ErrorNoViewPermission": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30022: The current view does not have the permission: "
				}
			}
		},
		"ErrorUpdateConsumerError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30023: Cannot update Consumer "
				}
			}
		},
		"ErrorCreateConsumerError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30024: Could not create Consumer "
				}
			}
		},
		"ErrorCreateUserCustomerLinksError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30025: Could not create user_customer_links "
				}
			}
		},
		"ErrorConsumerKeyAlreadyExists": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30026: Consumer Key already exists. Please specify a different value."
				}
			}
		},
		"ErrorNoExistingAccountHolders": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30027: Account Holders not found. The BANK_ID / ACCOUNT_ID specified for account holder does not exist on this server"
				}
			}
		},
		"ErrorCreateAtmError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30028: Could not insert the ATM"
				}
			}
		},
		"ErrorUpdateAtmError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30029: Could not update the ATM"
				}
			}
		},
		"ErrorCreateProductError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30030: Could not insert the Product"
				}
			}
		},
		"ErrorUpdateProductError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30031: Could not update the Product"
				}
			}
		},
		"ErrorCreateCardError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30032: Could not insert the Card"
				}
			}
		},
		"ErrorUpdateCardError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30033: Could not update the Card"
				}
			}
		},
		"ErrorViewIdNotSupported": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30034: This ViewId is do not supported. Only support four now: Owner, Public, Accountant, Auditor."
				}
			}
		},
		"ErrorUserCustomerLinkNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30035: User Customer Link not found"
				}
			}
		},
		"ErrorCreateOrUpdateCounterpartyMetadataError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30036: Could not create or update CounterpartyMetadata"
				}
			}
		},
		"ErrorCounterpartyMetadataNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30037: CounterpartyMetadata not found. Please specify valid values for BANK_ID, ACCOUNT_ID and COUNTERPARTY_ID. "
				}
			}
		},
		"ErrorCreateFxRateError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30038: Could not insert the Fx Rate"
				}
			}
		},
		"ErrorUpdateFxRateError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30039: Could not update the Fx Rate"
				}
			}
		},
		"ErrorUnknownFxRateError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30040: Unknown Fx Rate error"
				}
			}
		},
		"ErrorCheckbookOrderNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30041: CheckbookOrder not found for Account. "
				}
			}
		},
		"ErrorGetTopApisError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30042: Could not get the top apis from database.  "
				}
			}
		},
		"ErrorGetMetricsTopConsumersError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30045: Could not get the top consumers from database.  "
				}
			}
		},
		"ErrorGetAggregateMetricsError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30043: Could not get the aggregate metrics from database.  "
				}
			}
		},
		"ErrorDefaultBankIdNotSet": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30044: Default BankId is not set on this instance. Please set defaultBank.bank_id in props files. "
				}
			}
		},
		"ErrorCreateWebhookError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30047: Cannot create Webhook"
				}
			}
		},
		"ErrorGetWebhooksError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30048: Cannot get Webhooks"
				}
			}
		},
		"ErrorUpdateWebhookError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30049: Cannot create Webhook"
				}
			}
		},
		"ErrorWebhookNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30050: Webhook not found. Please specify a valid value for account_webhook_id."
				}
			}
		},
		"ErrorCreateCustomerError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30051: Cannot create Customer"
				}
			}
		},
		"ErrorCheckCustomerError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30052: Cannot check Customer"
				}
			}
		},
		"ErrorCreateUserAuthContextError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30053: Could not insert the UserAuthContext"
				}
			}
		},
		"ErrorUpdateUserAuthContextError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30054: Could not update the UserAuthContext"
				}
			}
		},
		"ErrorUpdateUserAuthContextNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30055: UserAuthContext not found. Please specify a valid value for USER_ID."
				}
			}
		},
		"ErrorDeleteUserAuthContextNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30056: UserAuthContext not found by USER_AUTH_CONTEXT_ID."
				}
			}
		},
		"ErrorMeetingsNotSupported": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30101: Meetings are not supported on this server."
				}
			}
		},
		"ErrorMeetingApiKeyNotConfigured": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30102: Meeting provider API Key is not configured."
				}
			}
		},
		"ErrorMeetingApiSecretNotConfigured": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30103: Meeting provider Secret is not configured."
				}
			}
		},
		"ErrorMeetingNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30104: Meeting not found."
				}
			}
		},
		"ErrorInvalidAccountBalanceCurrency": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30105: Invalid Balance Currency."
				}
			}
		},
		"ErrorInvalidAccountBalanceAmount": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30106: Invalid Balance Amount."
				}
			}
		},
		"ErrorInvalidUserId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30107: Invalid User Id."
				}
			}
		},
		"ErrorInvalidAccountType": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30108: Invalid Account Type."
				}
			}
		},
		"ErrorInitialBalanceMustBeZero": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30109: Initial Balance of Account must be Zero (0)."
				}
			}
		},
		"ErrorInvalidAccountIdFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255."
				}
			}
		},
		"ErrorInvalidBankIdFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255."
				}
			}
		},
		"ErrorInvalidAccountInitialBalance": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00"
				}
			}
		},
		"ErrorEntitlementIsBankRole": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id."
				}
			}
		},
		"ErrorEntitlementIsSystemRole": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string."
				}
			}
		},
		"ErrorInvalidStrongPasswordFormat": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30207: Invalid Password Format. Your password should EITHER be at least 10 characters long and contain mixed numbers and both upper and lower case letters and at least one special character, OR be longer than 16 characters."
				}
			}
		},
		"ErrorAccountIdAlreadyExists": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30208: Account_ID already exists at the Bank."
				}
			}
		},
		"ErrorInsufficientAuthorisationToCreateBranch": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30209: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch."
				}
			}
		},
		"ErrorInsufficientAuthorisationToDeleteBranch": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30218: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch."
				}
			}
		},
		"ErrorInsufficientAuthorisationToCreateBank": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30210: Insufficient authorisation to Create Bank. You do not have the role CanCreateBank."
				}
			}
		},
		"ErrorInvalidConnector": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30211: Invalid Connector Version. Please specify a valid value for CONNECTOR."
				}
			}
		},
		"ErrorEntitlementNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30212: EntitlementId not found"
				}
			}
		},
		"ErrorUserDoesNotHaveEntitlement": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30213: USER_ID does not have the ENTITLEMENT_ID."
				}
			}
		},
		"ErrorEntitlementRequestAlreadyExists": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30214: Entitlement Request already exists for the user."
				}
			}
		},
		"ErrorEntitlementRequestCannotBeAdded": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30217: Entitlement Request cannot be added."
				}
			}
		},
		"ErrorEntitlementRequestNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30215: EntitlementRequestId not found"
				}
			}
		},
		"ErrorEntitlementAlreadyExists": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30216: Entitlement already exists for the user."
				}
			}
		},
		"ErrorTaxResidenceNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30300: Tax Residence not found by TAX_RESIDENCE_ID. "
				}
			}
		},
		"ErrorCustomerAddressNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30310: Customer's Address not found by CUSTOMER_ADDRESS_ID. "
				}
			}
		},
		"ErrorAccountApplicationNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30311: AccountApplication not found by ACCOUNT_APPLICATION_ID. "
				}
			}
		},
		"ErrorResourceUserNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30312: ResourceUser not found by USER_ID. "
				}
			}
		},
		"ErrorUserIdAndCustomerIdNotPresent": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30313: userId and customerId not present. "
				}
			}
		},
		"ErrorAccountApplicationAlreadyAccepted": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30314: AccountApplication has already been accepted. "
				}
			}
		},
		"ErrorUpdateAccountApplicationStatusError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30315: AccountApplication Status can not be updated. "
				}
			}
		},
		"ErrorCreateAccountApplicationError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-30316: AccountApplication Status can not be created. "
				}
			}
		},
		"ErrorbranchesNotFoundLicense": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-32001: No branches available. License may not be set."
				}
			}
		},
		"ErrorBranchesNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-32002: No branches available."
				}
			}
		},
		"ErroratmsNotFoundLicense": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-33001: No ATMs available. License may not be set."
				}
			}
		},
		"ErroratmsNotFound": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-33002: No ATMs available."
				}
			}
		},
		"ErrorInvalidTransactionRequestType": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE"
				}
			}
		},
		"ErrorInsufficientAuthorisationToCreateTransactionRequest": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest."
				}
			}
		},
		"ErrorInvalidTransactionRequestCurrency": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40003: Transaction Request Currency must be the same as From Account Currency."
				}
			}
		},
		"ErrorInvalidTransactionRequestId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40004: Transaction Request Id not found."
				}
			}
		},
		"ErrorInsufficientAuthorisationToCreateTransactionType": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40005: Insufficient authorisation to Create Transaction Type offered by the bank. The Request could not be created because you don't have access to CanCreateTransactionType."
				}
			}
		},
		"ErrorCreateTransactionTypeInsertError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40006: Could not insert Transaction Type: Non unique BANK_ID / SHORT_CODE"
				}
			}
		},
		"ErrorCreateTransactionTypeUpdateError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40007: Could not update Transaction Type: Non unique BANK_ID / SHORT_CODE"
				}
			}
		},
		"ErrorNotPositiveAmount": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40008: Can't send a payment with a value of 0 or less."
				}
			}
		},
		"ErrorTransactionRequestTypeHasChanged": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40009: The TRANSACTION_REQUEST_TYPE has changed."
				}
			}
		},
		"ErrorInvalidTransactionRequesChallengeId": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40010: Invalid Challenge Id. Please specify a valid value for CHALLENGE_ID."
				}
			}
		},
		"ErrorTransactionRequestStatusNotInitiated": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40011: Transaction Request Status is not INITIATED."
				}
			}
		},
		"ErrorCounterpartyNotFoundOtherAccountProvider": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40012: Please set up the otherAccountRoutingScheme and otherBankRoutingScheme fields of the Counterparty to 'OBP'"
				}
			}
		},
		"ErrorInvalidChargePolicy": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40013: Invalid Charge Policy. Please specify a valid value for Charge_Policy: SHARED, SENDER or RECEIVER. "
				}
			}
		},
		"ErrorAllowedAttemptsUsedUp": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40014: Sorry, you've used up your allowed attempts. "
				}
			}
		},
		"ErrorInvalidChallengeType": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40015: Invalid Challenge Type. Please specify a valid value for CHALLENGE_TYPE, when you create the transaction request."
				}
			}
		},
		"ErrorInvalidChallengeAnswer": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40016: Invalid Challenge Answer. Please specify a valid value for answer in Json body. If it is sandbox mode, the answer must be `123`. If it kafka mode, the answer can be got by phone message or other security ways."
				}
			}
		},
		"ErrorInvalidPhoneNumber": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40017: Invalid Phone Number. Please specify a valid value for PHONE_NUMBER. Eg:+9722398746 "
				}
			}
		},
		"ErrorTransactionRequestsNotEnabled": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-40018: Sorry, Transaction Requests are not enabled in this API instance."
				}
			}
		},
		"ErrorUnknownError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50000: Unknown Error."
				}
			}
		},
		"ErrorFutureTimeoutException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50001: Future Timeout Exception."
				}
			}
		},
		"ErrorKafkaMessageClassCastException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50002: Kafka Response Message Class Cast Exception."
				}
			}
		},
		"ErrorAdapterOrCoreBankingSystemException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50003: Adapter Or Core Banking System Exception. Failed to get a valid response from the south side Adapter or Core Banking System."
				}
			}
		},
		"ErrorCurrentUserNotFoundException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50004: Method (AuthUser.getCurrentUser) can not find the current user in the current context!"
				}
			}
		},
		"ErrorAnUnspecifiedOrInternalErrorOccurred": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50005: An unspecified or internal error occurred."
				}
			}
		},
		"ErrorKafkaInterruptedException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50006: Kafka interrupted exception."
				}
			}
		},
		"ErrorKafkaExecutionException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50007: Kafka execution exception."
				}
			}
		},
		"ErrorKafkaStreamTimeoutException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50008: Akka Kafka stream timeout exception."
				}
			}
		},
		"ErrorKafkaUnknownError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50009: Kafka unknown error."
				}
			}
		},
		"ErrorScalaEmptyBoxToLiftweb": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50010: Scala return Empty box to Liftweb."
				}
			}
		},
		"ErrorNoCallContext": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50012: Can not get the CallContext object here."
				}
			}
		},
		"ErrorUnspecifiedCbsError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50013: The Core Banking System returned an unspecified error or response."
				}
			}
		},
		"ErrorRefreshUserError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50014: Can not refresh User."
				}
			}
		},
		"ErrorInternalServerError": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50015: The server encountered an unexpected condition which prevented it from fulfilling the request."
				}
			}
		},
		"ErrorConnectorEmptyResponse": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50200: Connector cannot return the data we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetBankAccounts": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50201: Connector did not return the set of accounts we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetBankAccount": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50202: Connector did not return the account we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetTransaction": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50203: Connector did not return the transaction we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetTransactions": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50204: Connector did not return the set of transactions we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetTransactionRequests210": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50205: Connector did not return the set of transaction requests we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetChallengeThreshold": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50206: Connector did not return the set of challenge threshold we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetChargeLevel": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50207: Connector did not return the set of challenge level we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForCreateTransactionRequestImpl210": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50208: Connector did not return the set of transactions requests we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForMakePayment": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50209: Connector did not return the set of transactions we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForMakePaymentv200": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50210: Connector did not return the set of transaction id we requested."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetCheckbookOrdersFuture": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50211: Connector did not return the set of check book."
				}
			}
		},
		"ErrorInvalidConnectorResponseForGetStatusOfCreditCardOrderFuture": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50212: Connector did not return the set of status of credit card."
				}
			}
		},
		"ErrorInvalidConnectorResponseForCreateTransactionAfterChallengev300": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-50213: The Connector did not return a valid response for payments."
				}
			}
		},
		"ErrorGetStatusException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60001: Save Transaction Exception. "
				}
			}
		},
		"ErrorGetChargeValueException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60002: Get ChargeValue Exception. "
				}
			}
		},
		"ErrorCreateTransactionsException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60003: Create transaction Exception. "
				}
			}
		},
		"ErrorUpdateBankAccountException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60004: Update bank account Exception. "
				}
			}
		},
		"ErrorSaveTransactionRequestTransactionException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60005: Save Transaction Request Transaction Exception. "
				}
			}
		},
		"ErrorSaveTransactionRequestChallengeException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60006: Save Transaction Request Challenge Exception. "
				}
			}
		},
		"ErrorSaveTransactionRequestStatusException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60007: Save Transaction Request Status Exception. "
				}
			}
		},
		"ErrorTransactionRequestDetailsExtractException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60008: Transaction detail body extract exception. "
				}
			}
		},
		"ErrorGetTransactionsException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60009: Get Transaction Exception. "
				}
			}
		},
		"ErrorGetTransactionRequestsException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60010: Get Transaction Requests Exception. "
				}
			}
		},
		"ErrorCreateMeetingException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60011: Create Meeting Exception. "
				}
			}
		},
		"ErrorCreateMeetingInviteeException": {
			"properties": {
				"message": {
					"type": "string",
					"example": "OBP-60012: Create Meeting Invitee Exception. "
				}
			}
		},
		"ErrorallFields": {
			"properties": {
				"message": {
					"type": "string",
					"example": "null"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"OpenCorporateUrlJSON": {
			"required": [
				"open_corporates_URL"
			],
			"properties": {
				"open_corporates_URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CallLimitPostJson": {
			"required": [
				"per_second_call_limit",
				"per_minute_call_limit",
				"per_hour_call_limit",
				"per_day_call_limit",
				"per_week_call_limit",
				"per_month_call_limit"
			],
			"properties": {
				"per_month_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_week_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_hour_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_second_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_minute_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_day_call_limit": {
					"type": "string",
					"example": "-1"
				}
			}
		},
		"PostTransactionWhereJSON": {
			"required": [
				"where"
			],
			"properties": {
				"where": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CreateViewJson": {
			"required": [
				"name",
				"description",
				"metadata_view",
				"is_public",
				"which_alias_to_use",
				"hide_metadata_if_alias_used",
				"allowed_actions"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "_test"
				},
				"description": {
					"type": "string",
					"example": "This view is for family"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "false"
				},
				"which_alias_to_use": {
					"type": "string",
					"example": "family"
				},
				"metadata_view": {
					"type": "string",
					"example": "_test"
				},
				"allowed_actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionRequestBodyJsonV200": {
			"required": [
				"to",
				"value",
				"description"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "this is for work"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"to": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CorporateLocationJSON": {
			"required": [
				"corporate_location"
			],
			"properties": {
				"corporate_location": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"SocialMediaJSON": {
			"required": [
				"customer_number",
				"type",
				"handle",
				"date_added",
				"date_activated"
			],
			"properties": {
				"date_activated": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"date_added": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"type": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"handle": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AccountWebhookPostJson": {
			"required": [
				"account_id",
				"trigger_name",
				"url",
				"http_method",
				"http_protocol",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "string",
					"example": "true"
				},
				"url": {
					"type": "string",
					"example": "https://localhost.openbankproject.com"
				},
				"trigger_name": {
					"type": "string",
					"example": "OnBalanceChange"
				},
				"http_protocol": {
					"type": "string",
					"example": "HTTP/1.1"
				},
				"http_method": {
					"type": "string",
					"example": "POST"
				},
				"account_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"PostKycDocumentJSON": {
			"required": [
				"customer_number",
				"type",
				"number",
				"issue_date",
				"issue_place",
				"expiry_date"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "12345"
				},
				"customer_number": {
					"type": "string",
					"example": "1234"
				},
				"issue_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"type": {
					"type": "string",
					"example": "passport"
				},
				"issue_place": {
					"type": "string",
					"example": "Berlin"
				},
				"expiry_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CreateEntitlementJSON": {
			"required": [
				"bank_id",
				"role_name"
			],
			"properties": {
				"role_name": {
					"type": "string",
					"example": "String"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"CreateUserJson": {
			"required": [
				"email",
				"username",
				"password",
				"first_name",
				"last_name"
			],
			"properties": {
				"first_name": {
					"type": "string",
					"example": "String"
				},
				"email": {
					"type": "string",
					"example": "String"
				},
				"username": {
					"type": "string",
					"example": "String"
				},
				"last_name": {
					"type": "string",
					"example": "String"
				},
				"password": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostCustomerJsonV310": {
			"required": [
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"credit_rating",
				"credit_limit",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"email": {
					"type": "string",
					"example": "person@example.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "+44 07972 444 876"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "string"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "Employed"
				},
				"legal_name": {
					"type": "string",
					"example": "Tom Tom"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "5"
				},
				"relationship_status": {
					"type": "string",
					"example": "Single"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionRequestBodySEPAJSON": {
			"required": [
				"value",
				"to",
				"description",
				"charge_policy"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "This is a SEPA Transaction Request"
				},
				"future_date": {
					"type": "string",
					"example": "20881230"
				},
				"to": {
					"$ref": "#/definitions/IbanJson"
				},
				"charge_policy": {
					"type": "string",
					"example": "SHARED"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"BankJSONV220": {
			"required": [
				"id",
				"full_name",
				"short_name",
				"logo_url",
				"website_url",
				"swift_bic",
				"national_identifier",
				"bank_routing"
			],
			"properties": {
				"national_identifier": {
					"type": "string",
					"example": "UK97ZZZ1234567890"
				},
				"full_name": {
					"type": "string",
					"example": "uk"
				},
				"swift_bic": {
					"type": "string",
					"example": "IIIGGB22"
				},
				"logo_url": {
					"type": "string",
					"example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
				},
				"id": {
					"type": "string",
					"example": "gh.29.uk.x"
				},
				"short_name": {
					"type": "string",
					"example": "uk"
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				},
				"website_url": {
					"type": "string",
					"example": "https://www.example.com"
				}
			}
		},
		"AccountWebhookPutJson": {
			"required": [
				"account_webhook_id",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "string",
					"example": "true"
				},
				"account_webhook_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"CorporateLocationJSON": {
			"required": [
				"corporate_location"
			],
			"properties": {
				"corporate_location": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"OpenCorporateUrlJSON": {
			"required": [
				"open_corporates_URL"
			],
			"properties": {
				"open_corporates_URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ElasticSearchJSON": {
			"required": [
				"query"
			],
			"properties": {
				"query": {
					"$ref": "#/definitions/ElasticSearchQuery"
				}
			}
		},
		"TransactionNarrativeJSON": {
			"required": [
				"narrative"
			],
			"properties": {
				"narrative": {
					"type": "string",
					"example": "narative"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AccountApplicationUpdateStatusJson": {
			"required": [
				"status"
			],
			"properties": {
				"status": {
					"type": "string",
					"example": "ACCEPTED"
				}
			}
		},
		"ProductAttributeJson": {
			"required": [
				"name",
				"type",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "2012-04-23"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				}
			}
		},
		"ImageUrlJSON": {
			"required": [
				"image_URL"
			],
			"properties": {
				"image_URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"BranchJsonPutV210": {
			"required": [
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OBP"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpStringJson"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.fi"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyStringJson"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"UrlJSON": {
			"required": [
				"URL"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ElasticSearchJSON": {
			"required": [
				"query"
			],
			"properties": {
				"query": {
					"$ref": "#/definitions/ElasticSearchQuery"
				}
			}
		},
		"AccountApplicationJson": {
			"required": [
				"product_code"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"user_id": {
					"type": "string",
					"example": "123"
				},
				"product_code": {
					"type": "string",
					"example": "saveing1"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ProductAttributeJson": {
			"required": [
				"name",
				"type",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "2012-04-23"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ChallengeAnswerJSON": {
			"required": [
				"id",
				"answer"
			],
			"properties": {
				"answer": {
					"type": "string",
					"example": "123"
				},
				"id": {
					"type": "string",
					"example": "This is challenge.id, you can get it from `Create Transaction Request.` response, only is useful if status ==`INITIATED` there."
				}
			}
		},
		"CreateEntitlementJSON": {
			"required": [
				"bank_id",
				"role_name"
			],
			"properties": {
				"role_name": {
					"type": "string",
					"example": "String"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostCustomerAddressJsonV310": {
			"required": [
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code",
				"tags",
				"status"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"status": {
					"type": "string",
					"example": "OK"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionRequestBodyCounterpartyJSON": {
			"required": [
				"to",
				"value",
				"description",
				"charge_policy"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "A description for the transaction to the counterparty"
				},
				"future_date": {
					"type": "string",
					"example": "20881230"
				},
				"to": {
					"$ref": "#/definitions/CounterpartyIdJson"
				},
				"charge_policy": {
					"type": "string",
					"example": "SHARED"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"PostCounterpartyJSON": {
			"required": [
				"name",
				"description",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_account_secondary_routing_scheme",
				"other_account_secondary_routing_address",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"other_branch_routing_scheme",
				"other_branch_routing_address",
				"is_beneficiary",
				"bespoke"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "7987987-2348987-234234"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "accountNumber"
				},
				"name": {
					"type": "string",
					"example": "CounterpartyName"
				},
				"other_account_secondary_routing_address": {
					"type": "string",
					"example": "DE89370400440532013000"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "My landlord"
				},
				"other_branch_routing_address": {
					"type": "string",
					"example": "10010"
				},
				"bespoke": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostCounterpartyBespokeJson"
					}
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "bankCode"
				},
				"other_branch_routing_scheme": {
					"type": "string",
					"example": "branchNumber"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "10"
				},
				"other_account_secondary_routing_scheme": {
					"type": "string",
					"example": "IBAN"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"FXRateJsonV220": {
			"required": [
				"bank_id",
				"from_currency_code",
				"to_currency_code",
				"conversion_value",
				"inverse_conversion_value",
				"effective_date"
			],
			"properties": {
				"inverse_conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"to_currency_code": {
					"type": "string",
					"example": "USD"
				},
				"effective_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"from_currency_code": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CreateScopeJson": {
			"required": [
				"bank_id",
				"role_name"
			],
			"properties": {
				"role_name": {
					"type": "string",
					"example": "CanGetEntitlementsForAnyUserAtOneBank"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostPutProductJsonV310": {
			"required": [
				"bank_id",
				"name",
				"parent_product_code",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				},
				"parent_product_code": {
					"type": "string",
					"example": "parent product name"
				}
			}
		},
		"CreditLimitRequestJson": {
			"required": [
				"requested_current_rate_amount1",
				"requested_current_rate_amount2",
				"requested_current_valid_end_date",
				"current_credit_documentation",
				"temporary_requested_current_amount",
				"requested_temporary_valid_end_date",
				"temporary_credit_documentation"
			],
			"properties": {
				"requested_current_rate_amount1": {
					"type": "string",
					"example": "String"
				},
				"temporary_credit_documentation": {
					"type": "string",
					"example": "String"
				},
				"requested_current_valid_end_date": {
					"type": "string",
					"example": "String"
				},
				"temporary_requested_current_amount": {
					"type": "string",
					"example": "String"
				},
				"requested_current_rate_amount2": {
					"type": "string",
					"example": "String"
				},
				"requested_temporary_valid_end_date": {
					"type": "string",
					"example": "String"
				},
				"current_credit_documentation": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostTransactionWhereJSON": {
			"required": [
				"where"
			],
			"properties": {
				"where": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostPhysicalCardJSON": {
			"required": [
				"bank_card_number",
				"name_on_card",
				"issue_number",
				"serial_number",
				"valid_from_date",
				"expires_date",
				"enabled",
				"technology",
				"networks",
				"allows",
				"account_id",
				"replacement",
				"pin_reset",
				"collected",
				"posted"
			],
			"properties": {
				"allows": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"expires_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"networks": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"issue_number": {
					"type": "string",
					"example": "String"
				},
				"replacement": {
					"$ref": "#/definitions/ReplacementJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"collected": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"technology": {
					"type": "string",
					"example": "String"
				},
				"account_id": {
					"type": "string",
					"example": "String"
				},
				"pin_reset": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PinResetJSON"
					}
				},
				"serial_number": {
					"type": "string",
					"example": "String"
				},
				"valid_from_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bank_card_number": {
					"type": "string",
					"example": "String"
				},
				"name_on_card": {
					"type": "string",
					"example": "String"
				},
				"posted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"PostUserAuthContextJson": {
			"required": [
				"key",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "78987432"
				},
				"key": {
					"type": "string",
					"example": "CUSTOMER_NUMBER"
				}
			}
		},
		"PutProductCollectionsV310": {
			"required": [
				"parent_product_code",
				"children_product_codes"
			],
			"properties": {
				"children_product_codes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"parent_product_code": {
					"type": "string",
					"example": "A"
				}
			}
		},
		"CreateMeetingJsonV310": {
			"required": [
				"provider_id",
				"purpose_id",
				"date",
				"creator",
				"invitees"
			],
			"properties": {
				"provider_id": {
					"type": "string",
					"example": "String, eg: tokbox"
				},
				"creator": {
					"$ref": "#/definitions/ContactDetailsJson"
				},
				"invitees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InviteeJson"
					}
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"purpose_id": {
					"type": "string",
					"example": "String, eg: onboarding"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionNarrativeJSON": {
			"required": [
				"narrative"
			],
			"properties": {
				"narrative": {
					"type": "string",
					"example": "narative"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostKycMediaJSON": {
			"required": [
				"customer_number",
				"type",
				"url",
				"date",
				"relates_to_kyc_document_id",
				"relates_to_kyc_check_id"
			],
			"properties": {
				"url": {
					"type": "string",
					"example": "http://www.example.com/id-docs/123/image.png"
				},
				"customer_number": {
					"type": "string",
					"example": "1239879"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"relates_to_kyc_document_id": {
					"type": "string",
					"example": "123"
				},
				"relates_to_kyc_check_id": {
					"type": "string",
					"example": "123"
				},
				"type": {
					"type": "string",
					"example": "image"
				}
			}
		},
		"BranchJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up",
				"branch_routing",
				"is_accessible",
				"accessibleFeatures",
				"branch_type",
				"more_info",
				"phone_number"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Branch by the Lake"
				},
				"phone_number": {
					"type": "string",
					"example": "+381631954907"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_type": {
					"type": "string",
					"example": "Full service store"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpJsonV330"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "branch-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyJsonV330"
				},
				"accessibleFeatures": {
					"type": "string",
					"example": "wheelchair, atm usuable by the visually impaired"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				}
			}
		},
		"AccountAttributeJson": {
			"required": [
				"bank_id",
				"account_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"bank_id": {
					"type": "string",
					"example": "123"
				},
				"account_id": {
					"type": "string",
					"example": "456"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"CreateUserCustomerLinkJson": {
			"required": [
				"user_id",
				"customer_id"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "String"
				},
				"user_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"UrlJSON": {
			"required": [
				"URL"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionRequestBodyJsonV200": {
			"required": [
				"to",
				"value",
				"description"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "this is for work"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"to": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostKycStatusJSON": {
			"required": [
				"customer_number",
				"ok",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"ok": {
					"type": "boolean",
					"example": "true"
				},
				"customer_number": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostTransactionImageJSON": {
			"required": [
				"label",
				"URL"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "String"
				},
				"label": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CreateAccountJSONV220": {
			"required": [
				"user_id",
				"label",
				"type",
				"balance",
				"branch_id",
				"account_routing"
			],
			"properties": {
				"account_routing": {
					"$ref": "#/definitions/AccountRoutingJsonV121"
				},
				"branch_id": {
					"type": "string",
					"example": "1234"
				},
				"label": {
					"type": "string",
					"example": "Label"
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"user_id": {
					"type": "string",
					"example": "66214b8e-259e-44ad-8868-3eb47be70646"
				},
				"type": {
					"type": "string",
					"example": "CURRENT"
				}
			}
		},
		"PostKycCheckJSON": {
			"required": [
				"customer_number",
				"date",
				"how",
				"staff_user_id",
				"staff_name",
				"satisfied",
				"comments"
			],
			"properties": {
				"customer_number": {
					"type": "string",
					"example": "1239879"
				},
				"how": {
					"type": "string",
					"example": "online_meeting"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"satisfied": {
					"type": "boolean",
					"example": "true"
				},
				"staff_user_id": {
					"type": "string",
					"example": "67876"
				},
				"staff_name": {
					"type": "string",
					"example": "Simon"
				},
				"comments": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ConsumerRedirectUrlJSON": {
			"required": [
				"redirect_url"
			],
			"properties": {
				"redirect_url": {
					"type": "string",
					"example": "http://localhost:8888"
				}
			}
		},
		"SandboxDataImport": {
			"required": [
				"banks",
				"users",
				"accounts",
				"transactions",
				"branches",
				"atms",
				"products",
				"crm_events"
			],
			"properties": {
				"crm_events": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxCrmEventImport"
					}
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxUserImport"
					}
				},
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxProductImport"
					}
				},
				"banks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxBankImport"
					}
				},
				"branches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxBranchImport"
					}
				},
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxTransactionImport"
					}
				},
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxAccountImport"
					}
				},
				"atms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxAtmImport"
					}
				}
			}
		},
		"AtmJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday",
				"is_accessible",
				"located_at",
				"more_info",
				"has_deposit_capability"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"name": {
					"type": "string",
					"example": "Atm by the Lake"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"has_deposit_capability": {
					"type": "string",
					"example": "true"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "atm-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"located_at": {
					"type": "string",
					"example": "Full service store"
				}
			}
		},
		"PhysicalLocationJSON": {
			"required": [
				"physical_location"
			],
			"properties": {
				"physical_location": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ViewIdsJson": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"PostTransactionTagJSON": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PhysicalLocationJSON": {
			"required": [
				"physical_location"
			],
			"properties": {
				"physical_location": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"PostCustomerNumberJsonV310": {
			"required": [
				"customer_number"
			],
			"properties": {
				"customer_number": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionTypeJsonV200": {
			"required": [
				"id",
				"bank_id",
				"short_code",
				"summary",
				"description",
				"charge"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"short_code": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"$ref": "#/definitions/TransactionTypeId"
				},
				"charge": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"summary": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ImageUrlJSON": {
			"required": [
				"image_URL"
			],
			"properties": {
				"image_URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostTaxResidenceJsonV310": {
			"required": [
				"domain",
				"tax_number"
			],
			"properties": {
				"tax_number": {
					"type": "string",
					"example": "Enter some number"
				},
				"domain": {
					"type": "string",
					"example": "Enter some domain"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AddCustomerMessageJson": {
			"required": [
				"message",
				"from_department",
				"from_person"
			],
			"properties": {
				"from_person": {
					"type": "string",
					"example": "String"
				},
				"from_department": {
					"type": "string",
					"example": "String"
				},
				"message": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostCustomerAddressJsonV310": {
			"required": [
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code",
				"tags",
				"status"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"status": {
					"type": "string",
					"example": "OK"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"MoreInfoJSON": {
			"required": [
				"more_info"
			],
			"properties": {
				"more_info": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PostTransactionCommentJSON": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"UpdateViewJSON": {
			"required": [
				"description",
				"metadata_view",
				"is_public",
				"which_alias_to_use",
				"hide_metadata_if_alias_used",
				"allowed_actions"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "this is for family"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"which_alias_to_use": {
					"type": "string",
					"example": "family"
				},
				"metadata_view": {
					"type": "string",
					"example": "owner"
				},
				"allowed_actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"MoreInfoJSON": {
			"required": [
				"more_info"
			],
			"properties": {
				"more_info": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PutEnabledJSON": {
			"required": [
				"enabled"
			],
			"properties": {
				"enabled": {
					"type": "boolean",
					"example": "false"
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"UpdateAccountJSON": {
			"required": [
				"id",
				"label",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"label": {
					"type": "string",
					"example": "label"
				},
				"id": {
					"type": "string",
					"example": "123123"
				}
			}
		},
		"License": {
			"required": [
				"id",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "id"
				}
			}
		},
		"Routing": {
			"required": [
				"scheme",
				"address"
			],
			"properties": {
				"address": {
					"type": "string",
					"example": "String"
				},
				"scheme": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"BranchId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"AmountOfMoney": {
			"required": [
				"currency",
				"amount"
			],
			"properties": {
				"amount": {
					"type": "string",
					"example": "100"
				},
				"currency": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"AccountRouting": {
			"required": [
				"scheme",
				"address"
			],
			"properties": {
				"address": {
					"type": "string",
					"example": "123456"
				},
				"scheme": {
					"type": "string",
					"example": "accountNumber"
				}
			}
		},
		"CoreAccount": {
			"required": [
				"id",
				"label",
				"bankId",
				"accountType",
				"accountRoutings"
			],
			"properties": {
				"label": {
					"type": "string",
					"example": " work"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"accountType": {
					"type": "string",
					"example": "330"
				},
				"accountRoutings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRouting"
					}
				},
				"bankId": {
					"type": "string",
					"example": "123123"
				}
			}
		},
		"AccountHeld": {
			"required": [
				"id",
				"bankId",
				"number",
				"accountRoutings"
			],
			"properties": {
				"accountRoutings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRouting"
					}
				},
				"number": {
					"type": "string",
					"example": "String"
				},
				"bankId": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"CreateViewJson": {
			"required": [
				"name",
				"description",
				"metadata_view",
				"is_public",
				"which_alias_to_use",
				"hide_metadata_if_alias_used",
				"allowed_actions"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "_test"
				},
				"description": {
					"type": "string",
					"example": "This view is for family"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "false"
				},
				"which_alias_to_use": {
					"type": "string",
					"example": "family"
				},
				"metadata_view": {
					"type": "string",
					"example": "_test"
				},
				"allowed_actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"UpdateViewJSON": {
			"required": [
				"description",
				"metadata_view",
				"is_public",
				"which_alias_to_use",
				"hide_metadata_if_alias_used",
				"allowed_actions"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "this is for family"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"which_alias_to_use": {
					"type": "string",
					"example": "family"
				},
				"metadata_view": {
					"type": "string",
					"example": "owner"
				},
				"allowed_actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"TransactionTypeId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"BankId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "gh.uk.9j"
				}
			}
		},
		"TransactionRequestId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"CounterpartyId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"AccountId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"ViewId": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "owner"
				}
			}
		},
		"TransactionType": {
			"required": [
				"id",
				"bankId",
				"shortCode",
				"summary",
				"description",
				"charge"
			],
			"properties": {
				"shortCode": {
					"type": "string",
					"example": "80080"
				},
				"description": {
					"type": "string",
					"example": "This is the sandbox mode, charging litter money."
				},
				"id": {
					"$ref": "#/definitions/TransactionTypeId"
				},
				"charge": {
					"$ref": "#/definitions/AmountOfMoney"
				},
				"bankId": {
					"$ref": "#/definitions/BankId"
				},
				"summary": {
					"type": "string",
					"example": "SANSANDBOX_TAN"
				}
			}
		},
		"TransactionRequestCharge": {
			"required": [
				"summary",
				"value"
			],
			"properties": {
				"value": {
					"$ref": "#/definitions/AmountOfMoney"
				},
				"summary": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionRequestChallenge": {
			"required": [
				"id",
				"allowed_attempts",
				"challenge_type"
			],
			"properties": {
				"challenge_type": {
					"type": "string",
					"example": "String"
				},
				"allowed_attempts": {
					"type": "integer",
					"format": "int32",
					"example": "4"
				},
				"id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionRequestAccount": {
			"required": [
				"bank_id",
				"account_id"
			],
			"properties": {
				"account_id": {
					"type": "string",
					"example": "String"
				},
				"bank_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionRequestCounterpartyId": {
			"required": [
				"counterparty_id"
			],
			"properties": {
				"counterparty_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionRequestIban": {
			"required": [
				"iban"
			],
			"properties": {
				"iban": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionRequestBody": {
			"required": [
				"to",
				"value",
				"description"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "String"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoney"
				},
				"to": {
					"$ref": "#/definitions/TransactionRequestAccount"
				}
			}
		},
		"FromAccountTransfer": {
			"required": [
				"mobile_phone_number",
				"nickname"
			],
			"properties": {
				"nickname": {
					"type": "string",
					"example": "String"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ToAccountTransferToPhone": {
			"required": [
				"mobile_phone_number"
			],
			"properties": {
				"mobile_phone_number": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ToAccountTransferToAtmKycDocument": {
			"required": [
				"type",
				"number"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "String"
				},
				"type": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ToAccountTransferToAtm": {
			"required": [
				"legal_name",
				"date_of_birth",
				"mobile_phone_number",
				"kyc_document"
			],
			"properties": {
				"kyc_document": {
					"$ref": "#/definitions/ToAccountTransferToAtmKycDocument"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "String"
				},
				"date_of_birth": {
					"type": "string",
					"example": "20181230"
				},
				"legal_name": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ToAccountTransferToAccountAccount": {
			"required": [
				"number",
				"iban"
			],
			"properties": {
				"iban": {
					"type": "string",
					"example": "String"
				},
				"number": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ToAccountTransferToAccount": {
			"required": [
				"name",
				"bank_code",
				"branch_number",
				"account"
			],
			"properties": {
				"account": {
					"$ref": "#/definitions/ToAccountTransferToAccountAccount"
				},
				"branch_number": {
					"type": "string",
					"example": "String"
				},
				"bank_code": {
					"type": "string",
					"example": "String"
				},
				"name": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"AmountOfMoneyJsonV121": {
			"required": [
				"currency",
				"amount"
			],
			"properties": {
				"amount": {
					"type": "string",
					"example": "10"
				},
				"currency": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"TransactionRequestTransferToPhone": {
			"required": [
				"value",
				"description",
				"message",
				"from",
				"to"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "String"
				},
				"to": {
					"$ref": "#/definitions/ToAccountTransferToPhone"
				},
				"from": {
					"$ref": "#/definitions/FromAccountTransfer"
				},
				"message": {
					"type": "string",
					"example": "String"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"TransactionRequestTransferToAtm": {
			"required": [
				"value",
				"description",
				"message",
				"from",
				"to"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "String"
				},
				"to": {
					"$ref": "#/definitions/ToAccountTransferToAtm"
				},
				"from": {
					"$ref": "#/definitions/FromAccountTransfer"
				},
				"message": {
					"type": "string",
					"example": "String"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"TransactionRequestTransferToAccount": {
			"required": [
				"value",
				"description",
				"transfer_type",
				"future_date",
				"to"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "String"
				},
				"future_date": {
					"type": "string",
					"example": "20181230"
				},
				"to": {
					"$ref": "#/definitions/ToAccountTransferToAccount"
				},
				"transfer_type": {
					"type": "string",
					"example": "String"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"TransactionRequestBodyAllTypes": {
			"required": [
				"value",
				"description"
			],
			"properties": {
				"to_transfer_to_phone": {
					"$ref": "#/definitions/TransactionRequestTransferToPhone"
				},
				"description": {
					"type": "string",
					"example": "String"
				},
				"to_transfer_to_atm": {
					"$ref": "#/definitions/TransactionRequestTransferToAtm"
				},
				"to_counterparty": {
					"$ref": "#/definitions/TransactionRequestCounterpartyId"
				},
				"to_sepa": {
					"$ref": "#/definitions/TransactionRequestIban"
				},
				"to_transfer_to_account": {
					"$ref": "#/definitions/TransactionRequestTransferToAccount"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoney"
				},
				"to_sandbox_tan": {
					"$ref": "#/definitions/TransactionRequestAccount"
				}
			}
		},
		"TransactionRequest": {
			"required": [
				"id",
				"type",
				"from",
				"body",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge",
				"charge_policy",
				"counterparty_id",
				"name",
				"this_bank_id",
				"this_account_id",
				"this_view_id",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"is_beneficiary"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "String"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "String"
				},
				"body": {
					"$ref": "#/definitions/TransactionRequestBodyAllTypes"
				},
				"challenge": {
					"$ref": "#/definitions/TransactionRequestChallenge"
				},
				"name": {
					"type": "string",
					"example": "String"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"future_date": {
					"type": "string",
					"example": "20881230"
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"$ref": "#/definitions/TransactionRequestId"
				},
				"this_account_id": {
					"$ref": "#/definitions/AccountId"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "String"
				},
				"charge_policy": {
					"type": "string",
					"example": "String"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccount"
				},
				"this_view_id": {
					"$ref": "#/definitions/ViewId"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestCharge"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "String"
				},
				"this_bank_id": {
					"$ref": "#/definitions/BankId"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"counterparty_id": {
					"$ref": "#/definitions/CounterpartyId"
				},
				"transaction_ids": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"MessageDocJson": {
			"required": [
				"process",
				"message_format",
				"description",
				"example_outbound_message",
				"example_inbound_message",
				"adapter_implementation"
			],
			"properties": {
				"adapter_implementation": {
					"$ref": "#/definitions/AdapterImplementationJson"
				},
				"outboundAvroSchema": {
					"type": "string",
					"example": "This is a json String."
				},
				"example_inbound_message": {
					"type": "string",
					"example": "This is a json String."
				},
				"inboundAvroSchema": {
					"type": "string",
					"example": "This is a json String."
				},
				"description": {
					"type": "string",
					"example": "get Banks"
				},
				"process": {
					"type": "string",
					"example": "getAccounts"
				},
				"message_format": {
					"type": "string",
					"example": "KafkaV2017"
				},
				"example_outbound_message": {
					"type": "string",
					"example": "This is a json String."
				},
				"outbound_topic": {
					"type": "string",
					"example": "to.obp.api.1.caseclass.OutboundGetAccounts"
				},
				"inbound_topic": {
					"type": "string",
					"example": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
				}
			}
		},
		"MessageDocsJson": {
			"required": [
				"message_docs"
			],
			"properties": {
				"message_docs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MessageDocJson"
					}
				}
			}
		},
		"MakePaymentJson": {
			"required": [
				"bank_id",
				"account_id",
				"amount"
			],
			"properties": {
				"amount": {
					"type": "string",
					"example": "10"
				},
				"account_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"TransactionIdJson": {
			"required": [
				"transaction_id"
			],
			"properties": {
				"transaction_id": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"HostedBy": {
			"required": [
				"organisation",
				"email",
				"phone",
				"organisation_website"
			],
			"properties": {
				"organisation_website": {
					"type": "string",
					"example": "String"
				},
				"phone": {
					"type": "string",
					"example": "String"
				},
				"email": {
					"type": "string",
					"example": "String"
				},
				"organisation": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"RateLimiting": {
			"required": [
				"enabled",
				"technology",
				"service_available",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"service_available": {
					"type": "boolean",
					"example": "true"
				},
				"technology": {
					"type": "string",
					"example": "REDIS"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"APIInfoJSON": {
			"required": [
				"version",
				"version_status",
				"git_commit",
				"connector",
				"hosted_by"
			],
			"properties": {
				"version_status": {
					"type": "string",
					"example": "String"
				},
				"version": {
					"type": "string",
					"example": "String"
				},
				"connector": {
					"type": "string",
					"example": "String"
				},
				"hosted_by": {
					"$ref": "#/definitions/HostedBy"
				},
				"git_commit": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ErrorMessage": {
			"required": [
				"code",
				"message"
			],
			"properties": {
				"message": {
					"type": "string",
					"example": "Internal Server Error"
				},
				"code": {
					"type": "integer",
					"format": "int32",
					"example": "500"
				}
			}
		},
		"PostTransactionImageJSON": {
			"required": [
				"label",
				"URL"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "String"
				},
				"label": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostTransactionCommentJSON": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostTransactionTagJSON": {
			"required": [
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"MoreInfoJSON": {
			"required": [
				"more_info"
			],
			"properties": {
				"more_info": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"UrlJSON": {
			"required": [
				"URL"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ImageUrlJSON": {
			"required": [
				"image_URL"
			],
			"properties": {
				"image_URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"OpenCorporateUrlJSON": {
			"required": [
				"open_corporates_URL"
			],
			"properties": {
				"open_corporates_URL": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"AccountRoutingJsonV121": {
			"required": [
				"scheme",
				"address"
			],
			"properties": {
				"address": {
					"type": "string",
					"example": "4930396"
				},
				"scheme": {
					"type": "string",
					"example": "AccountNumber"
				}
			}
		},
		"AccountRuleJsonV300": {
			"required": [
				"scheme",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "10"
				},
				"scheme": {
					"type": "string",
					"example": "OVERDRAFT"
				}
			}
		},
		"UserJSONV121": {
			"required": [
				"id",
				"provider",
				"display_name"
			],
			"properties": {
				"display_name": {
					"type": "string",
					"example": "OBP"
				},
				"provider": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"ViewJSONV121": {
			"required": [
				"id",
				"short_name",
				"description",
				"is_public",
				"alias",
				"hide_metadata_if_alias_used",
				"can_add_comment",
				"can_add_corporate_location",
				"can_add_image",
				"can_add_image_url",
				"can_add_more_info",
				"can_add_open_corporates_url",
				"can_add_physical_location",
				"can_add_private_alias",
				"can_add_public_alias",
				"can_add_tag",
				"can_add_url",
				"can_add_where_tag",
				"can_delete_comment",
				"can_delete_corporate_location",
				"can_delete_image",
				"can_delete_physical_location",
				"can_delete_tag",
				"can_delete_where_tag",
				"can_edit_owner_comment",
				"can_see_bank_account_balance",
				"can_see_bank_account_bank_name",
				"can_see_bank_account_currency",
				"can_see_bank_account_iban",
				"can_see_bank_account_label",
				"can_see_bank_account_national_identifier",
				"can_see_bank_account_number",
				"can_see_bank_account_owners",
				"can_see_bank_account_swift_bic",
				"can_see_bank_account_type",
				"can_see_comments",
				"can_see_corporate_location",
				"can_see_image_url",
				"can_see_images",
				"can_see_more_info",
				"can_see_open_corporates_url",
				"can_see_other_account_bank_name",
				"can_see_other_account_iban",
				"can_see_other_account_kind",
				"can_see_other_account_metadata",
				"can_see_other_account_national_identifier",
				"can_see_other_account_number",
				"can_see_other_account_swift_bic",
				"can_see_owner_comment",
				"can_see_physical_location",
				"can_see_private_alias",
				"can_see_public_alias",
				"can_see_tags",
				"can_see_transaction_amount",
				"can_see_transaction_balance",
				"can_see_transaction_currency",
				"can_see_transaction_description",
				"can_see_transaction_finish_date",
				"can_see_transaction_metadata",
				"can_see_transaction_other_bank_account",
				"can_see_transaction_start_date",
				"can_see_transaction_this_bank_account",
				"can_see_transaction_type",
				"can_see_url",
				"can_see_where_tag"
			],
			"properties": {
				"can_see_transaction_start_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_this_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_owners": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_edit_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"can_see_transaction_other_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_comments": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_kind": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_label": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_currency": {
					"type": "boolean",
					"example": "true"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_finish_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_images": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_currency": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"alias": {
					"type": "string",
					"example": "None"
				},
				"can_add_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"can_see_bank_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_tags": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"can_delete_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_amount": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_description": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"CreateViewJsonV121": {
			"required": [
				"name",
				"description",
				"is_public",
				"which_alias_to_use",
				"hide_metadata_if_alias_used",
				"allowed_actions"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "_test"
				},
				"description": {
					"type": "string",
					"example": "This view is for family"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "false"
				},
				"which_alias_to_use": {
					"type": "string",
					"example": "family"
				},
				"allowed_actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"UpdateViewJsonV121": {
			"required": [
				"description",
				"is_public",
				"which_alias_to_use",
				"hide_metadata_if_alias_used",
				"allowed_actions"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "This view is for family"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "false"
				},
				"which_alias_to_use": {
					"type": "string",
					"example": "family"
				},
				"allowed_actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"ViewsJSONV121": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJSONV121"
					}
				}
			}
		},
		"AccountJSON": {
			"required": [
				"id",
				"label",
				"views_available",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.uk.db"
				},
				"views_available": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJSONV121"
					}
				},
				"label": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"AccountsJSON": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountJSON"
					}
				}
			}
		},
		"BankRoutingJsonV121": {
			"required": [
				"scheme",
				"address"
			],
			"properties": {
				"address": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"scheme": {
					"type": "string",
					"example": "Bank_ID"
				}
			}
		},
		"BankJSON": {
			"required": [
				"id",
				"short_name",
				"full_name",
				"logo",
				"website",
				"bank_routing"
			],
			"properties": {
				"website": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"full_name": {
					"type": "string",
					"example": "full_name"
				},
				"logo": {
					"type": "string",
					"example": "logo"
				},
				"id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"short_name": {
					"type": "string",
					"example": "short_name "
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				}
			}
		},
		"BanksJSON": {
			"required": [
				"banks"
			],
			"properties": {
				"banks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BankJSON"
					}
				}
			}
		},
		"AccountHolderJSON": {
			"required": [
				"name",
				"is_alias"
			],
			"properties": {
				"is_alias": {
					"type": "boolean",
					"example": "true"
				},
				"name": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"MinimalBankJSON": {
			"required": [
				"national_identifier",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OBP"
				},
				"national_identifier": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"ModeratedAccountJSON": {
			"required": [
				"id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"IBAN",
				"swift_bic",
				"views_available",
				"bank_id",
				"account_routing"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "123"
				},
				"account_routing": {
					"$ref": "#/definitions/AccountRoutingJsonV121"
				},
				"views_available": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJSONV121"
					}
				},
				"IBAN": {
					"type": "string",
					"example": "DE89 3704 0044 0532 0130 00"
				},
				"label": {
					"type": "string",
					"example": "NoneLabel"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"swift_bic": {
					"type": "string",
					"example": "OKOYFIHH"
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"type": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"ThisAccountJSON": {
			"required": [
				"id",
				"holders",
				"number",
				"kind",
				"IBAN",
				"swift_bic",
				"bank"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "123"
				},
				"IBAN": {
					"type": "string",
					"example": "UK1234AD"
				},
				"swift_bic": {
					"type": "string",
					"example": "UK1234AD"
				},
				"bank": {
					"$ref": "#/definitions/MinimalBankJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"holders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountHolderJSON"
					}
				},
				"kind": {
					"type": "string",
					"example": "AC"
				}
			}
		},
		"LocationJSONV121": {
			"required": [
				"latitude",
				"longitude",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"longitude": {
					"type": "number",
					"format": "double",
					"example": "1.231"
				},
				"latitude": {
					"type": "number",
					"format": "double",
					"example": "1.231"
				}
			}
		},
		"OtherAccountMetadataJSON": {
			"required": [
				"public_alias",
				"private_alias",
				"more_info",
				"URL",
				"image_URL",
				"open_corporates_URL",
				"corporate_location",
				"physical_location"
			],
			"properties": {
				"public_alias": {
					"type": "string",
					"example": "NONE"
				},
				"image_URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"physical_location": {
					"$ref": "#/definitions/LocationJSONV121"
				},
				"private_alias": {
					"type": "string",
					"example": "NONE"
				},
				"URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"more_info": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"corporate_location": {
					"$ref": "#/definitions/LocationJSONV121"
				},
				"open_corporates_URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				}
			}
		},
		"OtherAccountJSON": {
			"required": [
				"id",
				"holder",
				"number",
				"kind",
				"IBAN",
				"swift_bic",
				"bank",
				"metadata"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "123"
				},
				"IBAN": {
					"type": "string",
					"example": "UK234DB"
				},
				"swift_bic": {
					"type": "string",
					"example": "UK12321DB"
				},
				"holder": {
					"$ref": "#/definitions/AccountHolderJSON"
				},
				"bank": {
					"$ref": "#/definitions/MinimalBankJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"metadata": {
					"$ref": "#/definitions/OtherAccountMetadataJSON"
				},
				"kind": {
					"type": "string",
					"example": "3456"
				}
			}
		},
		"TransactionDetailsJSON": {
			"required": [
				"type",
				"description",
				"posted",
				"completed",
				"new_balance",
				"value"
			],
			"properties": {
				"new_balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"description": {
					"type": "string",
					"example": "this is for family"
				},
				"completed": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"type": {
					"type": "string",
					"example": "AC"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"posted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"TransactionImageJSON": {
			"required": [
				"id",
				"label",
				"URL",
				"date",
				"user"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"label": {
					"type": "string",
					"example": "NONE"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				}
			}
		},
		"TransactionImagesJSON": {
			"required": [
				"images"
			],
			"properties": {
				"images": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionImageJSON"
					}
				}
			}
		},
		"TransactionCommentJSON": {
			"required": [
				"id",
				"value",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"value": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"TransactionTagJSON": {
			"required": [
				"id",
				"value",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"value": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"TransactionTagsJSON": {
			"required": [
				"tags"
			],
			"properties": {
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionTagJSON"
					}
				}
			}
		},
		"TransactionMetadataJSON": {
			"required": [
				"narrative",
				"comments",
				"tags",
				"images",
				"where"
			],
			"properties": {
				"narrative": {
					"type": "string",
					"example": "NONE"
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionTagJSON"
					}
				},
				"where": {
					"$ref": "#/definitions/LocationJSONV121"
				},
				"images": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionImageJSON"
					}
				},
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionCommentJSON"
					}
				}
			}
		},
		"TransactionJSON": {
			"required": [
				"id",
				"this_account",
				"other_account",
				"details",
				"metadata"
			],
			"properties": {
				"this_account": {
					"$ref": "#/definitions/ThisAccountJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"details": {
					"$ref": "#/definitions/TransactionDetailsJSON"
				},
				"metadata": {
					"$ref": "#/definitions/TransactionMetadataJSON"
				},
				"other_account": {
					"$ref": "#/definitions/OtherAccountJSON"
				}
			}
		},
		"TransactionsJSON": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJSON"
					}
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"OtherAccountsJSON": {
			"required": [
				"other_accounts"
			],
			"properties": {
				"other_accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OtherAccountJSON"
					}
				}
			}
		},
		"TransactionNarrativeJSON": {
			"required": [
				"narrative"
			],
			"properties": {
				"narrative": {
					"type": "string",
					"example": "narative"
				}
			}
		},
		"TransactionCommentsJSON": {
			"required": [
				"comments"
			],
			"properties": {
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionCommentJSON"
					}
				}
			}
		},
		"TransactionWhereJSON": {
			"required": [
				"where"
			],
			"properties": {
				"where": {
					"$ref": "#/definitions/LocationJSONV121"
				}
			}
		},
		"PermissionJSON": {
			"required": [
				"user",
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJSONV121"
					}
				},
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				}
			}
		},
		"PermissionsJSON": {
			"required": [
				"permissions"
			],
			"properties": {
				"permissions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PermissionJSON"
					}
				}
			}
		},
		"UpdateAccountJSON": {
			"required": [
				"id",
				"label",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"label": {
					"type": "string",
					"example": "label"
				},
				"id": {
					"type": "string",
					"example": "123123"
				}
			}
		},
		"ViewIdsJson": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"LocationPlainJSON": {
			"required": [
				"latitude",
				"longitude"
			],
			"properties": {
				"longitude": {
					"type": "number",
					"format": "double",
					"example": "1.535"
				},
				"latitude": {
					"type": "number",
					"format": "double",
					"example": "1.532"
				}
			}
		},
		"PostTransactionWhereJSON": {
			"required": [
				"where"
			],
			"properties": {
				"where": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"CorporateLocationJSON": {
			"required": [
				"corporate_location"
			],
			"properties": {
				"corporate_location": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"PhysicalLocationJSON": {
			"required": [
				"physical_location"
			],
			"properties": {
				"physical_location": {
					"$ref": "#/definitions/LocationPlainJSON"
				}
			}
		},
		"PinResetJSON": {
			"required": [
				"requested_date",
				"reason_requested"
			],
			"properties": {
				"reason_requested": {
					"type": "string",
					"example": "FORGOT"
				},
				"requested_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"PinResetJSON": {
			"required": [
				"requested_date",
				"reason_requested"
			],
			"properties": {
				"reason_requested": {
					"type": "string",
					"example": "GOOD_SECURITY_PRACTICE"
				},
				"requested_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"ReplacementJSON": {
			"required": [
				"requested_date",
				"reason_requested"
			],
			"properties": {
				"reason_requested": {
					"type": "string",
					"example": "RENEW"
				},
				"requested_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"PhysicalCardJSON": {
			"required": [
				"bank_id",
				"bank_card_number",
				"name_on_card",
				"issue_number",
				"serial_number",
				"valid_from_date",
				"expires_date",
				"enabled",
				"cancelled",
				"on_hot_list",
				"technology",
				"networks",
				"allows",
				"account",
				"replacement",
				"pin_reset",
				"collected",
				"posted"
			],
			"properties": {
				"allows": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"expires_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"networks": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"issue_number": {
					"type": "string",
					"example": "String"
				},
				"replacement": {
					"$ref": "#/definitions/ReplacementJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"collected": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"technology": {
					"type": "string",
					"example": "String"
				},
				"cancelled": {
					"type": "boolean",
					"example": "true"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"pin_reset": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PinResetJSON"
					}
				},
				"serial_number": {
					"type": "string",
					"example": "String"
				},
				"account": {
					"$ref": "#/definitions/AccountJSON"
				},
				"valid_from_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bank_card_number": {
					"type": "string",
					"example": "String"
				},
				"name_on_card": {
					"type": "string",
					"example": "String"
				},
				"posted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"on_hot_list": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"PhysicalCardsJSON": {
			"required": [
				"cards"
			],
			"properties": {
				"cards": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PhysicalCardJSON"
					}
				}
			}
		},
		"PostPhysicalCardJSON": {
			"required": [
				"bank_card_number",
				"name_on_card",
				"issue_number",
				"serial_number",
				"valid_from_date",
				"expires_date",
				"enabled",
				"technology",
				"networks",
				"allows",
				"account_id",
				"replacement",
				"pin_reset",
				"collected",
				"posted"
			],
			"properties": {
				"allows": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"expires_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"networks": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"issue_number": {
					"type": "string",
					"example": "String"
				},
				"replacement": {
					"$ref": "#/definitions/ReplacementJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"collected": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"technology": {
					"type": "string",
					"example": "String"
				},
				"account_id": {
					"type": "string",
					"example": "String"
				},
				"pin_reset": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PinResetJSON"
					}
				},
				"serial_number": {
					"type": "string",
					"example": "String"
				},
				"valid_from_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bank_card_number": {
					"type": "string",
					"example": "String"
				},
				"name_on_card": {
					"type": "string",
					"example": "String"
				},
				"posted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"TransactionRequestBodyJson": {
			"required": [
				"to",
				"value",
				"description"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "String"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoney"
				},
				"to": {
					"$ref": "#/definitions/TransactionRequestAccount"
				}
			}
		},
		"TransactionRequestJson": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"body",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge",
				"charge_policy",
				"counterparty_id",
				"name",
				"this_bank_id",
				"this_account_id",
				"this_view_id",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"is_beneficiary"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "String"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "String"
				},
				"body": {
					"$ref": "#/definitions/TransactionRequestBodyJson"
				},
				"challenge": {
					"$ref": "#/definitions/TransactionRequestChallenge"
				},
				"name": {
					"type": "string",
					"example": "String"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"$ref": "#/definitions/TransactionRequestId"
				},
				"this_account_id": {
					"$ref": "#/definitions/AccountId"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "String"
				},
				"charge_policy": {
					"type": "string",
					"example": "String"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccount"
				},
				"this_view_id": {
					"$ref": "#/definitions/ViewId"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBodyJson"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestCharge"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "String"
				},
				"this_bank_id": {
					"$ref": "#/definitions/BankId"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"counterparty_id": {
					"$ref": "#/definitions/CounterpartyId"
				},
				"transaction_ids": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CustomerFaceImageJson": {
			"required": [
				"url",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"url": {
					"type": "string",
					"example": "www.openbankproject"
				}
			}
		},
		"LocationJsonV140": {
			"required": [
				"latitude",
				"longitude"
			],
			"properties": {
				"longitude": {
					"type": "number",
					"format": "double",
					"example": "11.45"
				},
				"latitude": {
					"type": "number",
					"format": "double",
					"example": "11.45"
				}
			}
		},
		"TransactionRequestChargeJsonV140": {
			"required": [
				"summary",
				"value"
			],
			"properties": {
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"summary": {
					"type": "string",
					"example": "The bank fixed charge"
				}
			}
		},
		"TransactionRequestTypeJsonV140": {
			"required": [
				"value",
				"charge"
			],
			"properties": {
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV140"
				},
				"value": {
					"type": "string",
					"example": "10"
				}
			}
		},
		"TransactionRequestTypesJsonV140": {
			"required": [
				"transaction_request_types"
			],
			"properties": {
				"transaction_request_types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestTypeJsonV140"
					}
				}
			}
		},
		"TransactionRequestAccountJsonV140": {
			"required": [
				"bank_id",
				"account_id"
			],
			"properties": {
				"account_id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"ChallengeJsonV140": {
			"required": [
				"id",
				"allowed_attempts",
				"challenge_type"
			],
			"properties": {
				"challenge_type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"allowed_attempts": {
					"type": "integer",
					"format": "int32",
					"example": "3"
				},
				"id": {
					"type": "string",
					"example": "be1a183d-b301-4b83-b855-5eeffdd3526f"
				}
			}
		},
		"DriveUpStringJson": {
			"required": [
				"hours"
			],
			"properties": {
				"hours": {
					"type": "string",
					"example": "5"
				}
			}
		},
		"LicenseJsonV140": {
			"required": [
				"id",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "TESOBE"
				},
				"id": {
					"type": "string",
					"example": "5"
				}
			}
		},
		"MetaJsonV140": {
			"required": [
				"license"
			],
			"properties": {
				"license": {
					"$ref": "#/definitions/LicenseJsonV140"
				}
			}
		},
		"LobbyStringJson": {
			"required": [
				"hours"
			],
			"properties": {
				"hours": {
					"type": "string",
					"example": "5"
				}
			}
		},
		"AddressJsonV140": {
			"required": [
				"line_1",
				"line_2",
				"line_3",
				"city",
				"state",
				"postcode",
				"country"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "Wedding"
				},
				"state": {
					"type": "string",
					"example": "Berlin Brandenburg"
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"country": {
					"type": "string",
					"example": "DE"
				},
				"line_3": {
					"type": "string",
					"example": ""
				},
				"line_1": {
					"type": "string",
					"example": "Osloer Straße 16/17"
				}
			}
		},
		"ChallengeAnswerJSON": {
			"required": [
				"id",
				"answer"
			],
			"properties": {
				"answer": {
					"type": "string",
					"example": "123"
				},
				"id": {
					"type": "string",
					"example": "This is challenge.id, you can get it from `Create Transaction Request.` response, only is useful if status ==`INITIATED` there."
				}
			}
		},
		"PostCustomerJson": {
			"required": [
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date"
			],
			"properties": {
				"email": {
					"type": "string",
					"example": "String"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "String"
				},
				"customer_number": {
					"type": "string",
					"example": "String"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "String"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "String"
				},
				"legal_name": {
					"type": "string",
					"example": "String"
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "1"
				},
				"relationship_status": {
					"type": "string",
					"example": "String"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"CustomerJsonV140": {
			"required": [
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "String"
				},
				"email": {
					"type": "string",
					"example": "String"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "String"
				},
				"customer_number": {
					"type": "string",
					"example": "String"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "String"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "String"
				},
				"legal_name": {
					"type": "string",
					"example": "String"
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "10"
				},
				"relationship_status": {
					"type": "string",
					"example": "String"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"CustomersJsonV140": {
			"required": [
				"customers"
			],
			"properties": {
				"customers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerJsonV140"
					}
				}
			}
		},
		"CustomerMessageJson": {
			"required": [
				"id",
				"date",
				"message",
				"from_department",
				"from_person"
			],
			"properties": {
				"from_person": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"from_department": {
					"type": "string",
					"example": "String"
				},
				"message": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CustomerMessagesJson": {
			"required": [
				"messages"
			],
			"properties": {
				"messages": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerMessageJson"
					}
				}
			}
		},
		"AddCustomerMessageJson": {
			"required": [
				"message",
				"from_department",
				"from_person"
			],
			"properties": {
				"from_person": {
					"type": "string",
					"example": "String"
				},
				"from_department": {
					"type": "string",
					"example": "String"
				},
				"message": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"BranchRoutingJsonV141": {
			"required": [
				"scheme",
				"address"
			],
			"properties": {
				"address": {
					"type": "string",
					"example": "678"
				},
				"scheme": {
					"type": "string",
					"example": "BranchNumber"
				}
			}
		},
		"BranchJson": {
			"required": [
				"id",
				"name",
				"address",
				"location",
				"lobby",
				"drive_up",
				"meta",
				"branch_routing"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "String"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpStringJson"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyStringJson"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"BranchesJson": {
			"required": [
				"branches"
			],
			"properties": {
				"branches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BranchJson"
					}
				}
			}
		},
		"Meta": {
			"required": [
				"license"
			],
			"properties": {
				"license": {
					"$ref": "#/definitions/License"
				}
			}
		},
		"OpeningTimesV300": {
			"required": [
				"opening_time",
				"closing_time"
			],
			"properties": {
				"closing_time": {
					"type": "string",
					"example": "18:00"
				},
				"opening_time": {
					"type": "string",
					"example": "10:00"
				}
			}
		},
		"OpeningTimes": {
			"required": [
				"openingTime",
				"closingTime"
			],
			"properties": {
				"closingTime": {
					"type": "string",
					"example": "18:00"
				},
				"openingTime": {
					"type": "string",
					"example": "10:00"
				}
			}
		},
		"Address": {
			"required": [
				"line1",
				"line2",
				"line3",
				"city",
				"state",
				"postCode",
				"countryCode"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"postCode": {
					"type": "string",
					"example": "13359"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"line1": {
					"type": "string",
					"example": "No 1 the Road"
				},
				"county": {
					"type": "string",
					"example": "String"
				},
				"countryCode": {
					"type": "string",
					"example": "DE"
				},
				"line2": {
					"type": "string",
					"example": "The Place"
				},
				"line3": {
					"type": "string",
					"example": "The Hill"
				}
			}
		},
		"Lobby": {
			"required": [
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday"
			],
			"properties": {
				"sunday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				},
				"tuesday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				},
				"wednesday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				},
				"monday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				},
				"friday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				},
				"thursday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				},
				"saturday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimes"
					}
				}
			}
		},
		"DriveUp": {
			"required": [
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimes"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimes"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimes"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimes"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimes"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimes"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimes"
				}
			}
		},
		"Routing": {
			"required": [
				"scheme",
				"address"
			],
			"properties": {
				"address": {
					"type": "string",
					"example": "123abc"
				},
				"scheme": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"BasicResourceUser": {
			"required": [
				"userId",
				"provider",
				"username"
			],
			"properties": {
				"username": {
					"type": "string",
					"example": " String"
				},
				"provider": {
					"type": "string",
					"example": " String"
				},
				"userId": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"Location": {
			"required": [
				"latitude",
				"longitude"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/BasicResourceUser"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"longitude": {
					"type": "number",
					"format": "double",
					"example": "10.0"
				},
				"latitude": {
					"type": "number",
					"format": "double",
					"example": "10.0"
				}
			}
		},
		"LobbyString": {
			"required": [
				"hours"
			],
			"properties": {
				"hours": {
					"type": "string",
					"example": "String "
				}
			}
		},
		"DriveUpString": {
			"required": [
				"hours"
			],
			"properties": {
				"hours": {
					"type": "string",
					"example": "String "
				}
			}
		},
		"Branch": {
			"required": [
				"branchId",
				"bankId",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Branch by the Lake"
				},
				"location": {
					"$ref": "#/definitions/Location"
				},
				"phoneNumber": {
					"type": "string",
					"example": "+381631954907"
				},
				"driveUp": {
					"$ref": "#/definitions/DriveUp"
				},
				"isAccessible": {
					"type": "boolean",
					"example": "true"
				},
				"branchId": {
					"$ref": "#/definitions/BranchId"
				},
				"meta": {
					"$ref": "#/definitions/Meta"
				},
				"moreInfo": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"isDeleted": {
					"type": "boolean",
					"example": "false"
				},
				"lobbyString": {
					"$ref": "#/definitions/LobbyString"
				},
				"lobby": {
					"$ref": "#/definitions/Lobby"
				},
				"accessibleFeatures": {
					"type": "string",
					"example": "wheelchair, atm usuable by the visually impaired"
				},
				"address": {
					"$ref": "#/definitions/Address"
				},
				"bankId": {
					"$ref": "#/definitions/BankId"
				},
				"branchType": {
					"type": "string",
					"example": "Full service store"
				},
				"branchRouting": {
					"$ref": "#/definitions/Routing"
				},
				"driveUpString": {
					"$ref": "#/definitions/DriveUpString"
				}
			}
		},
		"LobbyJsonV330": {
			"required": [
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday"
			],
			"properties": {
				"sunday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				},
				"tuesday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				},
				"wednesday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				},
				"monday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				},
				"friday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				},
				"thursday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				},
				"saturday": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpeningTimesV300"
					}
				}
			}
		},
		"DriveUpJsonV330": {
			"required": [
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimesV300"
				}
			}
		},
		"BranchJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up",
				"branch_routing",
				"is_accessible",
				"accessibleFeatures",
				"branch_type",
				"more_info",
				"phone_number"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Branch by the Lake"
				},
				"phone_number": {
					"type": "string",
					"example": "+381631954907"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_type": {
					"type": "string",
					"example": "Full service store"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpJsonV330"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "branch-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyJsonV330"
				},
				"accessibleFeatures": {
					"type": "string",
					"example": "wheelchair, atm usuable by the visually impaired"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				}
			}
		},
		"BranchesJsonV300": {
			"required": [
				"branches"
			],
			"properties": {
				"branches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BranchJsonV300"
					}
				}
			}
		},
		"PostBranchJsonV300": {
			"required": [
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up",
				"branch_routing",
				"is_accessible",
				"accessibleFeatures",
				"branch_type",
				"more_info",
				"phone_number"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Branch by the Lake"
				},
				"phone_number": {
					"type": "string",
					"example": "+381631954907"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_type": {
					"type": "string",
					"example": "Full service store"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpJsonV330"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyJsonV330"
				},
				"accessibleFeatures": {
					"type": "string",
					"example": "wheelchair, atm usuable by the visually impaired"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				}
			}
		},
		"AtmJson": {
			"required": [
				"id",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "String"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"AtmsJson": {
			"required": [
				"atms"
			],
			"properties": {
				"atms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AtmJson"
					}
				}
			}
		},
		"AddressJsonV300": {
			"required": [
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"CustomerAddressJsonV310": {
			"required": [
				"customer_address_id",
				"customer_id",
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code",
				"tags",
				"status",
				"insert_date"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"customer_id": {
					"type": "string",
					"example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"insert_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"customer_address_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"status": {
					"type": "string",
					"example": "OK"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"CustomerAddressesJsonV310": {
			"required": [
				"addresses"
			],
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerAddressJsonV310"
					}
				}
			}
		},
		"PostCustomerAddressJsonV310": {
			"required": [
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code",
				"tags",
				"status"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"status": {
					"type": "string",
					"example": "OK"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"AtmJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday",
				"is_accessible",
				"located_at",
				"more_info",
				"has_deposit_capability"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"name": {
					"type": "string",
					"example": "Atm by the Lake"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"has_deposit_capability": {
					"type": "string",
					"example": "true"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "atm-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"located_at": {
					"type": "string",
					"example": "Full service store"
				}
			}
		},
		"ProductJson": {
			"required": [
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "String"
				},
				"more_info_url": {
					"type": "string",
					"example": "String"
				},
				"super_family": {
					"type": "string",
					"example": "String"
				},
				"code": {
					"type": "string",
					"example": "String"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"category": {
					"type": "string",
					"example": "String"
				},
				"family": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ProductsJson": {
			"required": [
				"products"
			],
			"properties": {
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductJson"
					}
				}
			}
		},
		"CrmEventJson": {
			"required": [
				"id",
				"bank_id",
				"customer_name",
				"customer_number",
				"category",
				"detail",
				"channel",
				"scheduled_date",
				"actual_date",
				"result"
			],
			"properties": {
				"channel": {
					"type": "string",
					"example": "String"
				},
				"customer_name": {
					"type": "string",
					"example": "String"
				},
				"result": {
					"type": "string",
					"example": "String"
				},
				"customer_number": {
					"type": "string",
					"example": "String"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"scheduled_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"category": {
					"type": "string",
					"example": "String"
				},
				"detail": {
					"type": "string",
					"example": "String"
				},
				"actual_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"CrmEventsJson": {
			"required": [
				"crm_events"
			],
			"properties": {
				"crm_events": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CrmEventJson"
					}
				}
			}
		},
		"ImplementedByJson": {
			"required": [
				"version",
				"function"
			],
			"properties": {
				"function": {
					"type": "string",
					"example": "getBranches"
				},
				"version": {
					"type": "string",
					"example": "1_4_0"
				}
			}
		},
		"CanCreateCustomer": {
			"required": [
				"requiresBankId"
			],
			"properties": {
				"requiresBankId": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"ResourceDocJson": {
			"required": [
				"operation_id",
				"implemented_by",
				"request_verb",
				"request_url",
				"summary",
				"description",
				"description_markdown",
				"example_request_body",
				"success_response_body",
				"error_response_bodies",
				"is_core",
				"is_psd2",
				"is_obwg",
				"tags",
				"typed_request_body",
				"typed_success_response_body",
				"is_featured",
				"special_instructions",
				"specified_url"
			],
			"properties": {
				"error_response_bodies": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"request_verb": {
					"type": "string",
					"example": "String"
				},
				"request_url": {
					"type": "string",
					"example": "String"
				},
				"description": {
					"type": "string",
					"example": "HTML String"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"is_core": {
					"type": "boolean",
					"example": "true"
				},
				"success_response_body": {
					"$ref": "#/definitions/SuccessMessage"
				},
				"example_request_body": {
					"$ref": "#/definitions/SuccessMessage"
				},
				"typed_success_response_body": {
					"type": "string",
					"example": "This is a json String."
				},
				"special_instructions": {
					"type": "string",
					"example": ""
				},
				"is_featured": {
					"type": "boolean",
					"example": "false"
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CanCreateCustomer"
					}
				},
				"is_psd2": {
					"type": "boolean",
					"example": "true"
				},
				"operation_id": {
					"type": "string",
					"example": "String"
				},
				"implemented_by": {
					"$ref": "#/definitions/ImplementedByJson"
				},
				"specified_url": {
					"type": "string",
					"example": ""
				},
				"description_markdown": {
					"type": "string",
					"example": "Mark_down String"
				},
				"is_obwg": {
					"type": "boolean",
					"example": "true"
				},
				"typed_request_body": {
					"type": "string",
					"example": "This is a json String."
				},
				"summary": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ResourceDocsJson": {
			"required": [
				"resource_docs"
			],
			"properties": {
				"resource_docs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceDocJson"
					}
				}
			}
		},
		"TransactionRequestBodyJsonV140": {
			"required": [
				"to",
				"value",
				"description",
				"challenge_type"
			],
			"properties": {
				"challenge_type": {
					"type": "string",
					"example": "String"
				},
				"description": {
					"type": "string",
					"example": "String"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"to": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				}
			}
		},
		"TransactionRequestJsonV140": {
			"required": [
				"id",
				"type",
				"from",
				"body",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge"
			],
			"properties": {
				"body": {
					"$ref": "#/definitions/TransactionRequestBodyJsonV140"
				},
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "String"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"transaction_ids": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"BasicViewJson": {
			"required": [
				"id",
				"short_name",
				"is_public"
			],
			"properties": {
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "HHH"
				},
				"id": {
					"type": "string",
					"example": "1"
				}
			}
		},
		"BasicAccountJSON": {
			"required": [
				"id",
				"label",
				"bank_id",
				"views_available"
			],
			"properties": {
				"views_available": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BasicViewJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"label": {
					"type": "string",
					"example": "NoneLabel"
				},
				"id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				}
			}
		},
		"CoreAccountJSON": {
			"required": [
				"id",
				"label",
				"bank_id",
				"_links"
			],
			"properties": {
				"_links": {
					"type": "string",
					"example": "This is a json String."
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"label": {
					"type": "string",
					"example": "NoneLabel"
				},
				"id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				}
			}
		},
		"ModeratedCoreAccountJSON": {
			"required": [
				"id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"IBAN",
				"swift_bic",
				"bank_id",
				"account_routing"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "123"
				},
				"account_routing": {
					"$ref": "#/definitions/AccountRoutingJsonV121"
				},
				"IBAN": {
					"type": "string",
					"example": "GR1301720530005053000582373"
				},
				"label": {
					"type": "string",
					"example": "NoneLabel"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"swift_bic": {
					"type": "string",
					"example": "UKTF3049auf"
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"type": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"BasicAccountsJSON": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BasicAccountJSON"
					}
				}
			}
		},
		"CoreAccountsJSON": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreAccountJSON"
					}
				}
			}
		},
		"KycDocumentJSON": {
			"required": [
				"bank_id",
				"customer_id",
				"id",
				"customer_number",
				"type",
				"number",
				"issue_date",
				"issue_place",
				"expiry_date"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"issue_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"type": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"issue_place": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"expiry_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"KycDocumentsJSON": {
			"required": [
				"documents"
			],
			"properties": {
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycDocumentJSON"
					}
				}
			}
		},
		"KycMediaJSON": {
			"required": [
				"bank_id",
				"customer_id",
				"id",
				"customer_number",
				"type",
				"url",
				"date",
				"relates_to_kyc_document_id",
				"relates_to_kyc_check_id"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"url": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"relates_to_kyc_document_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"relates_to_kyc_check_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"type": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"KycMediasJSON": {
			"required": [
				"medias"
			],
			"properties": {
				"medias": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycMediaJSON"
					}
				}
			}
		},
		"KycCheckJSON": {
			"required": [
				"bank_id",
				"customer_id",
				"id",
				"customer_number",
				"date",
				"how",
				"staff_user_id",
				"staff_name",
				"satisfied",
				"comments"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"how": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"satisfied": {
					"type": "boolean",
					"example": "true"
				},
				"staff_user_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"staff_name": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"comments": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"KycChecksJSON": {
			"required": [
				"checks"
			],
			"properties": {
				"checks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycCheckJSON"
					}
				}
			}
		},
		"KycStatusJSON": {
			"required": [
				"customer_id",
				"customer_number",
				"ok",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"ok": {
					"type": "boolean",
					"example": "true"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"KycStatusesJSON": {
			"required": [
				"statuses"
			],
			"properties": {
				"statuses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycStatusJSON"
					}
				}
			}
		},
		"SocialMediaJSON": {
			"required": [
				"customer_number",
				"type",
				"handle",
				"date_added",
				"date_activated"
			],
			"properties": {
				"date_activated": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"date_added": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"type": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"handle": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"SocialMediasJSON": {
			"required": [
				"checks"
			],
			"properties": {
				"checks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SocialMediaJSON"
					}
				}
			}
		},
		"EntitlementJSON": {
			"required": [
				"entitlement_id",
				"role_name",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"role_name": {
					"type": "string",
					"example": "CanQueryOtherUser"
				},
				"entitlement_id": {
					"type": "string",
					"example": "6fb17583-1e49-4435-bb74-a14fe0996723"
				}
			}
		},
		"EntitlementJSONs": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementJSON"
					}
				}
			}
		},
		"UserJsonV200": {
			"required": [
				"user_id",
				"email",
				"provider_id",
				"provider",
				"username",
				"entitlements"
			],
			"properties": {
				"provider": {
					"type": "string",
					"example": "OBP"
				},
				"email": {
					"type": "string",
					"example": "robert.x.0.gh@example.com"
				},
				"username": {
					"type": "string",
					"example": "robert.x.0.gh"
				},
				"provider_id": {
					"type": "string",
					"example": "OBP"
				},
				"user_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"entitlements": {
					"$ref": "#/definitions/EntitlementJSONs"
				}
			}
		},
		"EntitlementRequestJSON": {
			"required": [
				"entitlement_request_id",
				"user",
				"role_name",
				"bank_id",
				"created"
			],
			"properties": {
				"entitlement_request_id": {
					"type": "string",
					"example": "6fb17583-1e49-4435-bb74-a14fe0996723"
				},
				"role_name": {
					"type": "string",
					"example": "CanQueryOtherUser"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"user": {
					"$ref": "#/definitions/UserJsonV200"
				},
				"created": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"EntitlementRequestsJSON": {
			"required": [
				"entitlement_requests"
			],
			"properties": {
				"entitlement_requests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementRequestJSON"
					}
				}
			}
		},
		"CoreTransactionDetailsJSON": {
			"required": [
				"type",
				"description",
				"posted",
				"completed",
				"new_balance",
				"value"
			],
			"properties": {
				"new_balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"description": {
					"type": "string",
					"example": "OBP"
				},
				"completed": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"type": {
					"type": "string",
					"example": "AC"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"posted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"CoreAccountHolderJSON": {
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "ZACK"
				}
			}
		},
		"CreateEntitlementJSON": {
			"required": [
				"bank_id",
				"role_name"
			],
			"properties": {
				"role_name": {
					"type": "string",
					"example": "String"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"CoreCounterpartyJSON": {
			"required": [
				"id",
				"holder",
				"number",
				"kind",
				"IBAN",
				"swift_bic",
				"bank"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "1234"
				},
				"IBAN": {
					"type": "string",
					"example": "UK12344DB"
				},
				"swift_bic": {
					"type": "string",
					"example": "UK12344DB"
				},
				"holder": {
					"$ref": "#/definitions/CoreAccountHolderJSON"
				},
				"bank": {
					"$ref": "#/definitions/MinimalBankJSON"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"kind": {
					"type": "string",
					"example": "AV"
				}
			}
		},
		"CoreTransactionJSON": {
			"required": [
				"id",
				"account",
				"counterparty",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/CoreTransactionDetailsJSON"
				},
				"counterparty": {
					"$ref": "#/definitions/CoreCounterpartyJSON"
				},
				"account": {
					"$ref": "#/definitions/ThisAccountJSON"
				},
				"id": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"CoreTransactionsJSON": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreTransactionJSON"
					}
				}
			}
		},
		"TransactionRequestChargeJsonV200": {
			"required": [
				"summary",
				"value"
			],
			"properties": {
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"summary": {
					"type": "string",
					"example": "Rent the flat"
				}
			}
		},
		"TransactionRequestWithChargeJson": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "82f92531-9c63-4246-abfc-96c20ec46188"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBody"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "string",
					"example": "666666-9c63-4246-abfc-96c20ec46188"
				}
			}
		},
		"TransactionRequestBodyJsonV200": {
			"required": [
				"to",
				"value",
				"description"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "this is for work"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"to": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				}
			}
		},
		"TransactionTypeJsonV200": {
			"required": [
				"id",
				"bank_id",
				"short_code",
				"summary",
				"description",
				"charge"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"short_code": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"$ref": "#/definitions/TransactionTypeId"
				},
				"charge": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"summary": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"TransactionTypesJsonV200": {
			"required": [
				"transaction_types"
			],
			"properties": {
				"transaction_types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionTypeJsonV200"
					}
				}
			}
		},
		"LinkJson": {
			"required": [
				"href",
				"rel",
				"method"
			],
			"properties": {
				"method": {
					"type": "string",
					"example": "String"
				},
				"rel": {
					"type": "string",
					"example": "String"
				},
				"href": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"LinksJson": {
			"required": [
				"_links"
			],
			"properties": {
				"_links": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LinkJson"
					}
				}
			}
		},
		"ResultAndLinksJson": {
			"required": [
				"result",
				"links"
			],
			"properties": {
				"links": {
					"$ref": "#/definitions/LinksJson"
				},
				"result": {
					"type": "string",
					"example": "This is a json String."
				}
			}
		},
		"CreateUserJson": {
			"required": [
				"email",
				"username",
				"password",
				"first_name",
				"last_name"
			],
			"properties": {
				"first_name": {
					"type": "string",
					"example": "String"
				},
				"email": {
					"type": "string",
					"example": "String"
				},
				"username": {
					"type": "string",
					"example": "String"
				},
				"last_name": {
					"type": "string",
					"example": "String"
				},
				"password": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CreateUsersJson": {
			"required": [
				"users"
			],
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CreateUserJson"
					}
				}
			}
		},
		"CreateMeetingJson": {
			"required": [
				"provider_id",
				"purpose_id"
			],
			"properties": {
				"purpose_id": {
					"type": "string",
					"example": "String"
				},
				"provider_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"MeetingKeysJson": {
			"required": [
				"session_id",
				"staff_token",
				"customer_token"
			],
			"properties": {
				"customer_token": {
					"type": "string",
					"example": "String"
				},
				"staff_token": {
					"type": "string",
					"example": "String"
				},
				"session_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"MeetingPresentJson": {
			"required": [
				"staff_user_id",
				"customer_user_id"
			],
			"properties": {
				"customer_user_id": {
					"type": "string",
					"example": "String"
				},
				"staff_user_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"MeetingJson": {
			"required": [
				"meeting_id",
				"provider_id",
				"purpose_id",
				"bank_id",
				"present",
				"keys",
				"when"
			],
			"properties": {
				"present": {
					"$ref": "#/definitions/MeetingPresentJson"
				},
				"provider_id": {
					"type": "string",
					"example": "String"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"purpose_id": {
					"type": "string",
					"example": "String"
				},
				"when": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"meeting_id": {
					"type": "string",
					"example": "String"
				},
				"keys": {
					"$ref": "#/definitions/MeetingKeysJson"
				}
			}
		},
		"MeetingsJson": {
			"required": [
				"meetings"
			],
			"properties": {
				"meetings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MeetingJson"
					}
				}
			}
		},
		"UserCustomerLinkJson": {
			"required": [
				"user_customer_link_id",
				"customer_id",
				"user_id",
				"date_inserted",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"customer_id": {
					"type": "string",
					"example": "String"
				},
				"user_id": {
					"type": "string",
					"example": "String"
				},
				"date_inserted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"user_customer_link_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"UserCustomerLinksJson": {
			"required": [
				"l"
			],
			"properties": {
				"l": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserCustomerLinkJson"
					}
				}
			}
		},
		"CreateUserCustomerLinkJson": {
			"required": [
				"user_id",
				"customer_id"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "String"
				},
				"user_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CreateAccountJSON": {
			"required": [
				"user_id",
				"label",
				"type",
				"balance"
			],
			"properties": {
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"user_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostKycDocumentJSON": {
			"required": [
				"customer_number",
				"type",
				"number",
				"issue_date",
				"issue_place",
				"expiry_date"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "12345"
				},
				"customer_number": {
					"type": "string",
					"example": "1234"
				},
				"issue_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"type": {
					"type": "string",
					"example": "passport"
				},
				"issue_place": {
					"type": "string",
					"example": "Berlin"
				},
				"expiry_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"PostKycMediaJSON": {
			"required": [
				"customer_number",
				"type",
				"url",
				"date",
				"relates_to_kyc_document_id",
				"relates_to_kyc_check_id"
			],
			"properties": {
				"url": {
					"type": "string",
					"example": "http://www.example.com/id-docs/123/image.png"
				},
				"customer_number": {
					"type": "string",
					"example": "1239879"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"relates_to_kyc_document_id": {
					"type": "string",
					"example": "123"
				},
				"relates_to_kyc_check_id": {
					"type": "string",
					"example": "123"
				},
				"type": {
					"type": "string",
					"example": "image"
				}
			}
		},
		"PostKycCheckJSON": {
			"required": [
				"customer_number",
				"date",
				"how",
				"staff_user_id",
				"staff_name",
				"satisfied",
				"comments"
			],
			"properties": {
				"customer_number": {
					"type": "string",
					"example": "1239879"
				},
				"how": {
					"type": "string",
					"example": "online_meeting"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"satisfied": {
					"type": "boolean",
					"example": "true"
				},
				"staff_user_id": {
					"type": "string",
					"example": "67876"
				},
				"staff_name": {
					"type": "string",
					"example": "Simon"
				},
				"comments": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"PostKycStatusJSON": {
			"required": [
				"customer_number",
				"ok",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"ok": {
					"type": "boolean",
					"example": "true"
				},
				"customer_number": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CreateCustomerJson": {
			"required": [
				"title",
				"branchId",
				"nameSuffix",
				"user_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date"
			],
			"properties": {
				"email": {
					"type": "string",
					"example": "String"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "String"
				},
				"customer_number": {
					"type": "string",
					"example": "String"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "String"
				},
				"user_id": {
					"type": "string",
					"example": "String"
				},
				"branchId": {
					"type": "string",
					"example": "String"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "String"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "String"
				},
				"legal_name": {
					"type": "string",
					"example": "String"
				},
				"title": {
					"type": "string",
					"example": "String"
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "1"
				},
				"relationship_status": {
					"type": "string",
					"example": "String"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"TransactionRequestJsonV200": {
			"required": [
				"id",
				"type",
				"from",
				"body",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge"
			],
			"properties": {
				"body": {
					"$ref": "#/definitions/TransactionRequestBodyJsonV200"
				},
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "String"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"transaction_ids": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionRequestWithChargesJson": {
			"required": [
				"transaction_requests_with_charges"
			],
			"properties": {
				"transaction_requests_with_charges": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestWithChargeJson"
					}
				}
			}
		},
		"UsersJsonV200": {
			"required": [
				"users"
			],
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJsonV200"
					}
				}
			}
		},
		"CounterpartiesJSON": {
			"required": [
				"counterparties"
			],
			"properties": {
				"counterparties": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreCounterpartyJSON"
					}
				}
			}
		},
		"CounterpartyIdJson": {
			"required": [
				"counterparty_id"
			],
			"properties": {
				"counterparty_id": {
					"type": "string",
					"example": "123456"
				}
			}
		},
		"IbanJson": {
			"required": [
				"iban"
			],
			"properties": {
				"iban": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"MetricJson": {
			"required": [
				"user_id",
				"url",
				"date",
				"user_name",
				"app_name",
				"developer_email",
				"implemented_by_partial_function",
				"implemented_in_version",
				"consumer_id",
				"verb",
				"correlation_id",
				"duration"
			],
			"properties": {
				"duration": {
					"type": "integer",
					"format": "int64",
					"example": "39"
				},
				"implemented_in_version": {
					"type": "string",
					"example": "v210"
				},
				"url": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"correlation_id": {
					"type": "string",
					"example": "v8ho6h5ivel3uq7a5zcnv0w1"
				},
				"implemented_by_partial_function": {
					"type": "string",
					"example": "getBanks"
				},
				"user_id": {
					"type": "string",
					"example": "134"
				},
				"developer_email": {
					"type": "string",
					"example": "contact@tesobe.ocm"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"consumer_id": {
					"type": "string",
					"example": "123"
				},
				"verb": {
					"type": "string",
					"example": "get"
				},
				"app_name": {
					"type": "string",
					"example": "SOFI"
				},
				"user_name": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"ResourceUserJSON": {
			"required": [
				"user_id",
				"email",
				"provider_id",
				"provider",
				"username"
			],
			"properties": {
				"provider": {
					"type": "string",
					"example": "obp"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"username": {
					"type": "string",
					"example": "TESOBE"
				},
				"provider_id": {
					"type": "string",
					"example": "obp"
				},
				"user_id": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"AvailableRoleJSON": {
			"required": [
				"role",
				"requires_bank_id"
			],
			"properties": {
				"requires_bank_id": {
					"type": "boolean",
					"example": "true"
				},
				"role": {
					"type": "string",
					"example": "CanCreateBranch"
				}
			}
		},
		"TransactionRequestTypeJSONV210": {
			"required": [
				"transaction_request_type"
			],
			"properties": {
				"transaction_request_type": {
					"type": "string",
					"example": "SandboxTan"
				}
			}
		},
		"TransactionRequestTypesJSON": {
			"required": [
				"transaction_request_types"
			],
			"properties": {
				"transaction_request_types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestTypeJSONV210"
					}
				}
			}
		},
		"TransactionRequestBodyCounterpartyJSON": {
			"required": [
				"to",
				"value",
				"description",
				"charge_policy"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "A description for the transaction to the counterparty"
				},
				"future_date": {
					"type": "string",
					"example": "20881230"
				},
				"to": {
					"$ref": "#/definitions/CounterpartyIdJson"
				},
				"charge_policy": {
					"type": "string",
					"example": "SHARED"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"TransactionRequestBodySEPAJSON": {
			"required": [
				"value",
				"to",
				"description",
				"charge_policy"
			],
			"properties": {
				"description": {
					"type": "string",
					"example": "This is a SEPA Transaction Request"
				},
				"future_date": {
					"type": "string",
					"example": "20881230"
				},
				"to": {
					"$ref": "#/definitions/IbanJson"
				},
				"charge_policy": {
					"type": "string",
					"example": "SHARED"
				},
				"value": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"CustomerCreditRatingJSON": {
			"required": [
				"rating",
				"source"
			],
			"properties": {
				"source": {
					"type": "string",
					"example": "OBP"
				},
				"rating": {
					"type": "string",
					"example": "OBP"
				}
			}
		},
		"CustomerJsonV210": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"CustomerJSONs": {
			"required": [
				"customers"
			],
			"properties": {
				"customers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerJsonV210"
					}
				}
			}
		},
		"UserJSONV210": {
			"required": [
				"id",
				"provider",
				"username"
			],
			"properties": {
				"username": {
					"type": "string",
					"example": "OBP"
				},
				"provider": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"LocationJsonV210": {
			"required": [
				"latitude",
				"longitude",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV210"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"longitude": {
					"type": "number",
					"format": "double",
					"example": "11.45"
				},
				"latitude": {
					"type": "number",
					"format": "double",
					"example": "11.45"
				}
			}
		},
		"PostCustomerJsonV210": {
			"required": [
				"user_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"credit_rating",
				"credit_limit",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date"
			],
			"properties": {
				"email": {
					"type": "string",
					"example": "person@example.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "+44 07972 444 876"
				},
				"customer_number": {
					"type": "string",
					"example": "new customer number 687687678"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "Bachelor’s Degree"
				},
				"user_id": {
					"type": "string",
					"example": "user_id to attach this customer to e.g. 123213"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "Employed"
				},
				"legal_name": {
					"type": "string",
					"example": "NONE"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "5"
				},
				"relationship_status": {
					"type": "string",
					"example": "Single"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"CustomerJsonV300": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"example": "19900101"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"PostCustomerJsonV310": {
			"required": [
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"credit_rating",
				"credit_limit",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"email": {
					"type": "string",
					"example": "person@example.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "+44 07972 444 876"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "string"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "Employed"
				},
				"legal_name": {
					"type": "string",
					"example": "Tom Tom"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "5"
				},
				"relationship_status": {
					"type": "string",
					"example": "Single"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"CustomerJsonV310": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"PostCustomerNumberJsonV310": {
			"required": [
				"customer_number"
			],
			"properties": {
				"customer_number": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"TaxResidenceV310": {
			"required": [
				"domain",
				"tax_number",
				"tax_residence_id"
			],
			"properties": {
				"tax_residence_id": {
					"type": "string",
					"example": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
				},
				"tax_number": {
					"type": "string",
					"example": "Enter some number"
				},
				"domain": {
					"type": "string",
					"example": "Enter some domain"
				}
			}
		},
		"PostTaxResidenceJsonV310": {
			"required": [
				"domain",
				"tax_number"
			],
			"properties": {
				"tax_number": {
					"type": "string",
					"example": "Enter some number"
				},
				"domain": {
					"type": "string",
					"example": "Enter some domain"
				}
			}
		},
		"TaxResidenceJsonV310": {
			"required": [
				"tax_residence"
			],
			"properties": {
				"tax_residence": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxResidenceV310"
					}
				}
			}
		},
		"TransactionRequestWithChargeJSON210": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "4050046c-63b3-4868-8a22-14b4181d33a6"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBodyAllTypes"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"TransactionRequestWithChargeJSONs210": {
			"required": [
				"transaction_requests_with_charges"
			],
			"properties": {
				"transaction_requests_with_charges": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestWithChargeJSON210"
					}
				}
			}
		},
		"AvailableRolesJSON": {
			"required": [
				"roles"
			],
			"properties": {
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvailableRoleJSON"
					}
				}
			}
		},
		"ConsumerJSON": {
			"required": [
				"consumer_id",
				"app_name",
				"app_type",
				"description",
				"developer_email",
				"redirect_url",
				"created_by_user_id",
				"created_by_user",
				"enabled",
				"created"
			],
			"properties": {
				"created_by_user_id": {
					"type": "string",
					"example": "123213"
				},
				"app_type": {
					"type": "string",
					"example": "Web"
				},
				"description": {
					"type": "string",
					"example": "Account Management"
				},
				"created_by_user": {
					"$ref": "#/definitions/ResourceUserJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"redirect_url": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"developer_email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"consumer_id": {
					"type": "integer",
					"format": "int64",
					"example": "1213"
				},
				"app_name": {
					"type": "string",
					"example": "SOFI"
				},
				"created": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"ConsumersJson": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsumerJSON"
					}
				}
			}
		},
		"ConsumersJson": {
			"required": [
				"consumers"
			],
			"properties": {
				"consumers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsumerJson"
					}
				}
			}
		},
		"PutEnabledJSON": {
			"required": [
				"enabled"
			],
			"properties": {
				"enabled": {
					"type": "boolean",
					"example": "false"
				}
			}
		},
		"ProductJsonV210": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "prod1"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				}
			}
		},
		"ProductsJsonV210": {
			"required": [
				"products"
			],
			"properties": {
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductJsonV210"
					}
				}
			}
		},
		"ProductTreeJsonV310": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"parent_product": {
					"$ref": "#/definitions/None$"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "GRANDPARENT_CODE"
				},
				"bank_id": {
					"type": "string",
					"example": "testBank2"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				}
			}
		},
		"ProductTreeJsonV310": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"parent_product": {
					"$ref": "#/definitions/ProductTreeJsonV310"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "PARENT_CODE"
				},
				"bank_id": {
					"type": "string",
					"example": "testBank2"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				}
			}
		},
		"ProductTreeJsonV310": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"parent_product": {
					"$ref": "#/definitions/ProductTreeJsonV310"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "PRODUCT_CODE"
				},
				"bank_id": {
					"type": "string",
					"example": "testBank2"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				}
			}
		},
		"PostCounterpartyBespokeJson": {
			"required": [
				"key",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "english Name"
				},
				"key": {
					"type": "string",
					"example": "englishName"
				}
			}
		},
		"PostCounterpartyJSON": {
			"required": [
				"name",
				"description",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_account_secondary_routing_scheme",
				"other_account_secondary_routing_address",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"other_branch_routing_scheme",
				"other_branch_routing_address",
				"is_beneficiary",
				"bespoke"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "7987987-2348987-234234"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "accountNumber"
				},
				"name": {
					"type": "string",
					"example": "CounterpartyName"
				},
				"other_account_secondary_routing_address": {
					"type": "string",
					"example": "DE89370400440532013000"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "My landlord"
				},
				"other_branch_routing_address": {
					"type": "string",
					"example": "10010"
				},
				"bespoke": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostCounterpartyBespokeJson"
					}
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "bankCode"
				},
				"other_branch_routing_scheme": {
					"type": "string",
					"example": "branchNumber"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "10"
				},
				"other_account_secondary_routing_scheme": {
					"type": "string",
					"example": "IBAN"
				}
			}
		},
		"MetricsJson": {
			"required": [
				"metrics"
			],
			"properties": {
				"metrics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetricJson"
					}
				}
			}
		},
		"BranchJsonPutV210": {
			"required": [
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OBP"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpStringJson"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.fi"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyStringJson"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"BranchJsonPostV210": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OBP"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpStringJson"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.fi"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyStringJson"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"ConsumerRedirectUrlJSON": {
			"required": [
				"redirect_url"
			],
			"properties": {
				"redirect_url": {
					"type": "string",
					"example": "http://localhost:8888"
				}
			}
		},
		"ViewJSONV220": {
			"required": [
				"id",
				"short_name",
				"description",
				"is_public",
				"alias",
				"hide_metadata_if_alias_used",
				"can_add_comment",
				"can_add_corporate_location",
				"can_add_image",
				"can_add_image_url",
				"can_add_more_info",
				"can_add_open_corporates_url",
				"can_add_physical_location",
				"can_add_private_alias",
				"can_add_public_alias",
				"can_add_tag",
				"can_add_url",
				"can_add_where_tag",
				"can_delete_comment",
				"can_add_counterparty",
				"can_delete_corporate_location",
				"can_delete_image",
				"can_delete_physical_location",
				"can_delete_tag",
				"can_delete_where_tag",
				"can_edit_owner_comment",
				"can_see_bank_account_balance",
				"can_see_bank_account_bank_name",
				"can_see_bank_account_currency",
				"can_see_bank_account_iban",
				"can_see_bank_account_label",
				"can_see_bank_account_national_identifier",
				"can_see_bank_account_number",
				"can_see_bank_account_owners",
				"can_see_bank_account_swift_bic",
				"can_see_bank_account_type",
				"can_see_comments",
				"can_see_corporate_location",
				"can_see_image_url",
				"can_see_images",
				"can_see_more_info",
				"can_see_open_corporates_url",
				"can_see_other_account_bank_name",
				"can_see_other_account_iban",
				"can_see_other_account_kind",
				"can_see_other_account_metadata",
				"can_see_other_account_national_identifier",
				"can_see_other_account_number",
				"can_see_other_account_swift_bic",
				"can_see_owner_comment",
				"can_see_physical_location",
				"can_see_private_alias",
				"can_see_public_alias",
				"can_see_tags",
				"can_see_transaction_amount",
				"can_see_transaction_balance",
				"can_see_transaction_currency",
				"can_see_transaction_description",
				"can_see_transaction_finish_date",
				"can_see_transaction_metadata",
				"can_see_transaction_other_bank_account",
				"can_see_transaction_start_date",
				"can_see_transaction_this_bank_account",
				"can_see_transaction_type",
				"can_see_url",
				"can_see_where_tag"
			],
			"properties": {
				"can_see_transaction_start_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_this_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_owners": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_edit_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"can_see_transaction_other_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_comments": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_kind": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_label": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_currency": {
					"type": "boolean",
					"example": "true"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_finish_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_images": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_currency": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"alias": {
					"type": "string",
					"example": "No"
				},
				"can_add_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"id": {
					"type": "string",
					"example": "1234"
				},
				"can_see_bank_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_counterparty": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_tags": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"can_delete_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_amount": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_description": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"ViewsJSONV220": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJSONV220"
					}
				}
			}
		},
		"FXRateJsonV220": {
			"required": [
				"bank_id",
				"from_currency_code",
				"to_currency_code",
				"conversion_value",
				"inverse_conversion_value",
				"effective_date"
			],
			"properties": {
				"inverse_conversion_value": {
					"type": "number",
					"format": "double",
					"example": "0.998"
				},
				"to_currency_code": {
					"type": "string",
					"example": "GBP"
				},
				"effective_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.001"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid434"
				},
				"from_currency_code": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"CounterpartyJsonV220": {
			"required": [
				"name",
				"description",
				"created_by_user_id",
				"this_bank_id",
				"this_account_id",
				"this_view_id",
				"counterparty_id",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"other_branch_routing_scheme",
				"other_branch_routing_address",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_account_secondary_routing_scheme",
				"other_account_secondary_routing_address",
				"is_beneficiary",
				"bespoke"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "7987987-2348987-234234"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "accountNumber"
				},
				"created_by_user_id": {
					"type": "string",
					"example": "49e1e147-64c1-4823-ad9f-89efcd02a9fa"
				},
				"name": {
					"type": "string",
					"example": "CounterpartyName"
				},
				"other_account_secondary_routing_address": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "My landlord"
				},
				"other_branch_routing_address": {
					"type": "string",
					"example": "10010"
				},
				"bespoke": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostCounterpartyBespokeJson"
					}
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "bankCode"
				},
				"other_branch_routing_scheme": {
					"type": "string",
					"example": "branchNumber"
				},
				"this_account_id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"this_view_id": {
					"type": "string",
					"example": "owner"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "10"
				},
				"this_bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"counterparty_id": {
					"type": "string",
					"example": "1d65db7c-a7b2-4839-af41-958276ab7790"
				},
				"other_account_secondary_routing_scheme": {
					"type": "string",
					"example": "accountId"
				}
			}
		},
		"CounterpartyMetadataJson": {
			"required": [
				"publicAlias",
				"moreInfo",
				"url",
				"imageURL",
				"openCorporatesURL",
				"corporateLocation",
				"physicalLocation",
				"privateAlias"
			],
			"properties": {
				"publicAlias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CounterpartyWithMetadataJson": {
			"required": [
				"name",
				"description",
				"created_by_user_id",
				"this_bank_id",
				"this_account_id",
				"this_view_id",
				"counterparty_id",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"other_branch_routing_scheme",
				"other_branch_routing_address",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_account_secondary_routing_scheme",
				"other_account_secondary_routing_address",
				"is_beneficiary",
				"bespoke",
				"metadata"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "7987987-2348987-234234"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "accountNumber"
				},
				"created_by_user_id": {
					"type": "string",
					"example": "49e1e147-64c1-4823-ad9f-89efcd02a9fa"
				},
				"name": {
					"type": "string",
					"example": "CounterpartyName"
				},
				"other_account_secondary_routing_address": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "My landlord"
				},
				"other_branch_routing_address": {
					"type": "string",
					"example": "10010"
				},
				"bespoke": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostCounterpartyBespokeJson"
					}
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "bankCode"
				},
				"other_branch_routing_scheme": {
					"type": "string",
					"example": "branchNumber"
				},
				"this_account_id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"this_view_id": {
					"type": "string",
					"example": "owner"
				},
				"metadata": {
					"$ref": "#/definitions/CounterpartyMetadataJson"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "10"
				},
				"this_bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"counterparty_id": {
					"type": "string",
					"example": "1d65db7c-a7b2-4839-af41-958276ab7790"
				},
				"other_account_secondary_routing_scheme": {
					"type": "string",
					"example": "accountId"
				}
			}
		},
		"CounterpartiesJsonV220": {
			"required": [
				"counterparties"
			],
			"properties": {
				"counterparties": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CounterpartyJsonV220"
					}
				}
			}
		},
		"BankJSONV220": {
			"required": [
				"id",
				"full_name",
				"short_name",
				"logo_url",
				"website_url",
				"swift_bic",
				"national_identifier",
				"bank_routing"
			],
			"properties": {
				"national_identifier": {
					"type": "string",
					"example": "UK97ZZZ1234567890"
				},
				"full_name": {
					"type": "string",
					"example": "uk"
				},
				"swift_bic": {
					"type": "string",
					"example": "IIIGGB22"
				},
				"logo_url": {
					"type": "string",
					"example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
				},
				"id": {
					"type": "string",
					"example": "gh.29.uk.x"
				},
				"short_name": {
					"type": "string",
					"example": "uk"
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				},
				"website_url": {
					"type": "string",
					"example": "https://www.example.com"
				}
			}
		},
		"BranchJsonV220": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up",
				"branch_routing"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OBP"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpStringJson"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyStringJson"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"AtmJsonV220": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OBP"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"ProductJsonV220": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "prod1"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				}
			}
		},
		"PostPutProductJsonV310": {
			"required": [
				"bank_id",
				"name",
				"parent_product_code",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				},
				"parent_product_code": {
					"type": "string",
					"example": "parent product name"
				}
			}
		},
		"PutProductCollectionsV310": {
			"required": [
				"parent_product_code",
				"children_product_codes"
			],
			"properties": {
				"children_product_codes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"parent_product_code": {
					"type": "string",
					"example": "A"
				}
			}
		},
		"FXRateJsonV220": {
			"required": [
				"bank_id",
				"from_currency_code",
				"to_currency_code",
				"conversion_value",
				"inverse_conversion_value",
				"effective_date"
			],
			"properties": {
				"inverse_conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"to_currency_code": {
					"type": "string",
					"example": "USD"
				},
				"effective_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"from_currency_code": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"CreateAccountJSONV220": {
			"required": [
				"user_id",
				"label",
				"type",
				"balance",
				"branch_id",
				"account_routing"
			],
			"properties": {
				"account_routing": {
					"$ref": "#/definitions/AccountRoutingJsonV121"
				},
				"branch_id": {
					"type": "string",
					"example": "1234"
				},
				"label": {
					"type": "string",
					"example": "Label"
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"user_id": {
					"type": "string",
					"example": "66214b8e-259e-44ad-8868-3eb47be70646"
				},
				"type": {
					"type": "string",
					"example": "CURRENT"
				}
			}
		},
		"CachedFunctionJSON": {
			"required": [
				"function_name",
				"ttl_in_seconds"
			],
			"properties": {
				"ttl_in_seconds": {
					"type": "integer",
					"format": "int32",
					"example": "5"
				},
				"function_name": {
					"type": "string",
					"example": "getBanks"
				}
			}
		},
		"PortJSON": {
			"required": [
				"property",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "8080"
				},
				"property": {
					"type": "string",
					"example": "default"
				}
			}
		},
		"AkkaJSON": {
			"required": [
				"ports",
				"log_level"
			],
			"properties": {
				"remote_data_secret_matched": {
					"type": "boolean",
					"example": "true"
				},
				"log_level": {
					"type": "string",
					"example": "Debug"
				},
				"ports": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PortJSON"
					}
				}
			}
		},
		"MetricsJSON": {
			"required": [
				"property",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "Mapper"
				},
				"property": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"WarehouseJSON": {
			"required": [
				"property",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "ElasticSearch"
				},
				"property": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ElasticSearchJSON": {
			"required": [
				"metrics",
				"warehouse"
			],
			"properties": {
				"warehouse": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WarehouseJSON"
					}
				},
				"metrics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetricsJSON"
					}
				}
			}
		},
		"ConfigurationJSON": {
			"required": [
				"akka",
				"elastic_search",
				"cache"
			],
			"properties": {
				"cache": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CachedFunctionJSON"
					}
				},
				"elastic_search": {
					"$ref": "#/definitions/ElasticSearchJSON"
				},
				"akka": {
					"$ref": "#/definitions/AkkaJSON"
				}
			}
		},
		"ConnectorMetricJson": {
			"required": [
				"connector_name",
				"function_name",
				"correlation_id",
				"date",
				"duration"
			],
			"properties": {
				"connector_name": {
					"type": "string",
					"example": "mapper"
				},
				"duration": {
					"type": "integer",
					"format": "int64",
					"example": "1000"
				},
				"function_name": {
					"type": "string",
					"example": "getBanks"
				},
				"correlation_id": {
					"type": "string",
					"example": "12345"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"ConnectorMetricsJson": {
			"required": [
				"metrics"
			],
			"properties": {
				"metrics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConnectorMetricJson"
					}
				}
			}
		},
		"ViewJsonV300": {
			"required": [
				"id",
				"short_name",
				"description",
				"metadata_view",
				"is_public",
				"alias",
				"hide_metadata_if_alias_used",
				"can_add_comment",
				"can_add_corporate_location",
				"can_add_image",
				"can_add_image_url",
				"can_add_more_info",
				"can_add_open_corporates_url",
				"can_add_physical_location",
				"can_add_private_alias",
				"can_add_public_alias",
				"can_add_tag",
				"can_add_url",
				"can_add_where_tag",
				"can_delete_comment",
				"can_add_counterparty",
				"can_delete_corporate_location",
				"can_delete_image",
				"can_delete_physical_location",
				"can_delete_tag",
				"can_delete_where_tag",
				"can_edit_owner_comment",
				"can_see_bank_account_balance",
				"can_query_available_funds",
				"can_see_bank_account_bank_name",
				"can_see_bank_account_currency",
				"can_see_bank_account_iban",
				"can_see_bank_account_label",
				"can_see_bank_account_national_identifier",
				"can_see_bank_account_number",
				"can_see_bank_account_owners",
				"can_see_bank_account_swift_bic",
				"can_see_bank_account_type",
				"can_see_comments",
				"can_see_corporate_location",
				"can_see_image_url",
				"can_see_images",
				"can_see_more_info",
				"can_see_open_corporates_url",
				"can_see_other_account_bank_name",
				"can_see_other_account_iban",
				"can_see_other_account_kind",
				"can_see_other_account_metadata",
				"can_see_other_account_national_identifier",
				"can_see_other_account_number",
				"can_see_other_account_swift_bic",
				"can_see_owner_comment",
				"can_see_physical_location",
				"can_see_private_alias",
				"can_see_public_alias",
				"can_see_tags",
				"can_see_transaction_amount",
				"can_see_transaction_balance",
				"can_see_transaction_currency",
				"can_see_transaction_description",
				"can_see_transaction_finish_date",
				"can_see_transaction_metadata",
				"can_see_transaction_other_bank_account",
				"can_see_transaction_start_date",
				"can_see_transaction_this_bank_account",
				"can_see_transaction_type",
				"can_see_url",
				"can_see_where_tag",
				"can_see_bank_routing_scheme",
				"can_see_bank_routing_address",
				"can_see_bank_account_routing_scheme",
				"can_see_bank_account_routing_address",
				"can_see_other_bank_routing_scheme",
				"can_see_other_bank_routing_address",
				"can_see_other_account_routing_scheme",
				"can_see_other_account_routing_address",
				"can_add_transaction_request_to_own_account",
				"can_add_transaction_request_to_any_account",
				"can_see_bank_account_credit_limit"
			],
			"properties": {
				"can_see_transaction_start_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_this_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_owners": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_edit_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"can_see_bank_account_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_other_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_comments": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_kind": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_transaction_request_to_own_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_label": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_currency": {
					"type": "boolean",
					"example": "true"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_finish_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_images": {
					"type": "boolean",
					"example": "true"
				},
				"can_query_available_funds": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_credit_limit": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_currency": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"alias": {
					"type": "string",
					"example": "No"
				},
				"can_add_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"id": {
					"type": "string",
					"example": "1234"
				},
				"can_see_bank_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_counterparty": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_transaction_request_to_any_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_tags": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"can_delete_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_bank_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_balance": {
					"type": "boolean",
					"example": "true"
				},
				"metadata_view": {
					"type": "string",
					"example": "owner"
				},
				"can_see_transaction_amount": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_bank_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_description": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"ViewsJsonV300": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJsonV300"
					}
				}
			}
		},
		"CoreAccountJsonV300": {
			"required": [
				"id",
				"label",
				"bank_id",
				"account_routings"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"ViewBasic": {
			"required": [
				"id",
				"short_name",
				"description",
				"is_public"
			],
			"properties": {
				"is_public": {
					"type": "boolean",
					"example": "false"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"id": {
					"type": "string",
					"example": "123"
				}
			}
		},
		"CoreAccountJson": {
			"required": [
				"id",
				"label",
				"bank_id",
				"account_type",
				"account_routings",
				"views"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"account_type": {
					"type": "string",
					"example": "330"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewBasic"
					}
				}
			}
		},
		"CoreAccountsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreAccountJson"
					}
				}
			}
		},
		"Balances": {
			"required": [
				"balances"
			],
			"properties": {
				"balances": {
					"type": "string",
					"example": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
				}
			}
		},
		"Transactions": {
			"required": [
				"trasactions"
			],
			"properties": {
				"trasactions": {
					"type": "string",
					"example": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
				}
			}
		},
		"CoreAccountJsonV1": {
			"required": [
				"id",
				"iban",
				"currency",
				"accountType",
				"cashAccountType",
				"_links",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Main Account"
				},
				"cashAccountType": {
					"type": "string",
					"example": "CurrentAccount"
				},
				"id": {
					"type": "string",
					"example": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
				},
				"accountType": {
					"type": "string",
					"example": "Girokonto"
				},
				"currency": {
					"type": "string",
					"example": "EUR"
				},
				"iban": {
					"type": "string",
					"example": "DE2310010010123456789"
				},
				"_links": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Balances"
					}
				}
			}
		},
		"CoreAccountsJsonV1": {
			"required": [
				"account$minuslist"
			],
			"properties": {
				"account$minuslist": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreAccountJsonV1"
					}
				}
			}
		},
		"AmountOfMoneyV1": {
			"required": [
				"currency",
				"content"
			],
			"properties": {
				"content": {
					"type": "string",
					"example": "String"
				},
				"currency": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"AccountInner": {
			"required": [
				"SchemeName",
				"Identification",
				"Name"
			],
			"properties": {
				"SecondaryIdentification": {
					"type": "string",
					"example": "00021"
				},
				"Name": {
					"type": "string",
					"example": "Mr Kevin"
				},
				"Identification": {
					"type": "string",
					"example": "80200110203345"
				},
				"SchemeName": {
					"type": "string",
					"example": "SortCodeAccountNumber"
				}
			}
		},
		"Account": {
			"required": [
				"AccountId",
				"Currency",
				"AccountType",
				"AccountSubType",
				"Nickname",
				"Account"
			],
			"properties": {
				"AccountSubType": {
					"type": "string",
					"example": "CurrentAccount"
				},
				"Nickname": {
					"type": "string",
					"example": "Bills"
				},
				"Currency": {
					"type": "string",
					"example": "GBP"
				},
				"AccountType": {
					"type": "string",
					"example": "Personal"
				},
				"AccountId": {
					"type": "string",
					"example": "22289"
				},
				"Account": {
					"$ref": "#/definitions/AccountInner"
				}
			}
		},
		"AccountList": {
			"required": [
				"Account"
			],
			"properties": {
				"Account": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Account"
					}
				}
			}
		},
		"Links": {
			"required": [
				"Self"
			],
			"properties": {
				"Self": {
					"type": "string",
					"example": "https://apisandbox.openbankproject.com/open-banking/v2.0/accounts/"
				}
			}
		},
		"MetaUK": {
			"required": [
				"TotalPages"
			],
			"properties": {
				"TotalPages": {
					"type": "integer",
					"format": "int32",
					"example": "1"
				}
			}
		},
		"Accounts": {
			"required": [
				"Data",
				"Links",
				"Meta"
			],
			"properties": {
				"Meta": {
					"$ref": "#/definitions/MetaUK"
				},
				"Links": {
					"$ref": "#/definitions/Links"
				},
				"Data": {
					"$ref": "#/definitions/AccountList"
				}
			}
		},
		"ClosingBookedBody": {
			"required": [
				"amount",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"example": "2017-10-25"
				},
				"amount": {
					"$ref": "#/definitions/AmountOfMoneyV1"
				}
			}
		},
		"ExpectedBody": {
			"required": [
				"amount",
				"lastActionDateTime"
			],
			"properties": {
				"lastActionDateTime": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"amount": {
					"$ref": "#/definitions/AmountOfMoneyV1"
				}
			}
		},
		"AccountBalance": {
			"required": [
				"closingBooked",
				"expected"
			],
			"properties": {
				"expected": {
					"$ref": "#/definitions/ExpectedBody"
				},
				"closingBooked": {
					"$ref": "#/definitions/ClosingBookedBody"
				}
			}
		},
		"AccountBalances": {
			"required": [
				"balances"
			],
			"properties": {
				"balances": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountBalance"
					}
				}
			}
		},
		"TransactionJsonV1": {
			"required": [
				"transactionId",
				"creditorName",
				"creditorAccount",
				"amount",
				"bookingDate",
				"valueDate",
				"remittanceInformationUnstructured"
			],
			"properties": {
				"remittanceInformationUnstructured": {
					"type": "string",
					"example": "String"
				},
				"creditorAccount": {
					"$ref": "#/definitions/IbanJson"
				},
				"amount": {
					"$ref": "#/definitions/AmountOfMoneyV1"
				},
				"valueDate": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"creditorName": {
					"type": "string",
					"example": "String"
				},
				"bookingDate": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"transactionId": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ViewAccount": {
			"required": [
				"viewAccount"
			],
			"properties": {
				"viewAccount": {
					"type": "string",
					"example": "/v1/accounts/3dc3d5b3-7023-4848-9853- f5400a64e80f"
				}
			}
		},
		"TransactionsJsonV1": {
			"required": [
				"transactions_booked",
				"transactions_pending",
				"_links"
			],
			"properties": {
				"_links": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewAccount"
					}
				},
				"transactions_pending": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJsonV1"
					}
				},
				"transactions_booked": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJsonV1"
					}
				}
			}
		},
		"AccountIdJson": {
			"required": [
				"id"
			],
			"properties": {
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"AccountsIdsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountIdJson"
					}
				}
			}
		},
		"AdapterInfoJsonV300": {
			"required": [
				"name",
				"version",
				"git_commit",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"example": "2013-01-21T23:08:00Z"
				},
				"git_commit": {
					"type": "string",
					"example": "String"
				},
				"version": {
					"type": "string",
					"example": "String"
				},
				"name": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"RateLimitingInfoV310": {
			"required": [
				"enabled",
				"technology",
				"service_available",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"service_available": {
					"type": "boolean",
					"example": "true"
				},
				"technology": {
					"type": "string",
					"example": "REDIS"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"ThisAccountJsonV300": {
			"required": [
				"id",
				"bank_routing",
				"account_routings",
				"holders"
			],
			"properties": {
				"holders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountHolderJSON"
					}
				},
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				},
				"id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"OtherAccountJsonV300": {
			"required": [
				"id",
				"holder",
				"bank_routing",
				"account_routings",
				"metadata"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"holder": {
					"$ref": "#/definitions/AccountHolderJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"metadata": {
					"$ref": "#/definitions/OtherAccountMetadataJSON"
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				}
			}
		},
		"OtherAccountsJsonV300": {
			"required": [
				"other_accounts"
			],
			"properties": {
				"other_accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OtherAccountJsonV300"
					}
				}
			}
		},
		"TransactionJsonV300": {
			"required": [
				"id",
				"this_account",
				"other_account",
				"details",
				"metadata"
			],
			"properties": {
				"this_account": {
					"$ref": "#/definitions/ThisAccountJsonV300"
				},
				"id": {
					"type": "string",
					"example": "String"
				},
				"details": {
					"$ref": "#/definitions/TransactionDetailsJSON"
				},
				"metadata": {
					"$ref": "#/definitions/TransactionMetadataJSON"
				},
				"other_account": {
					"$ref": "#/definitions/OtherAccountJsonV300"
				}
			}
		},
		"TransactionsJsonV300": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJsonV300"
					}
				}
			}
		},
		"CoreCounterpartyJsonV300": {
			"required": [
				"id",
				"holder",
				"bank_routing",
				"account_routings"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				},
				"holder": {
					"$ref": "#/definitions/AccountHolderJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"CoreTransactionJsonV300": {
			"required": [
				"id",
				"this_account",
				"other_account",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/CoreTransactionDetailsJSON"
				},
				"other_account": {
					"$ref": "#/definitions/CoreCounterpartyJsonV300"
				},
				"this_account": {
					"$ref": "#/definitions/ThisAccountJsonV300"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"CoreCounterpartiesJsonV300": {
			"required": [
				"counterparties"
			],
			"properties": {
				"counterparties": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreCounterpartyJsonV300"
					}
				}
			}
		},
		"CoreTransactionsJsonV300": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreTransactionJsonV300"
					}
				}
			}
		},
		"AccountHeldJson": {
			"required": [
				"id",
				"bank_id",
				"number",
				"account_routings"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"number": {
					"type": "string",
					"example": "123"
				},
				"bank_id": {
					"type": "string",
					"example": "123"
				},
				"id": {
					"type": "string",
					"example": "12314"
				}
			}
		},
		"CoreAccountsHeldJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountHeldJson"
					}
				}
			}
		},
		"ModeratedAccountJsonV300": {
			"required": [
				"id",
				"bank_id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"views_available",
				"account_routings"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "String"
				},
				"views_available": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJsonV300"
					}
				},
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"id": {
					"type": "string",
					"example": "String"
				},
				"type": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ModeratedCoreAccountJsonV300": {
			"required": [
				"id",
				"bank_id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"account_routings",
				"account_rules"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "String"
				},
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"account_rules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRuleJsonV300"
					}
				}
			}
		},
		"ModeratedCoreAccountsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ModeratedCoreAccountJsonV300"
					}
				}
			}
		},
		"AggregateMetricJSON": {
			"required": [
				"count",
				"average_response_time",
				"minimum_response_time",
				"maximum_response_time"
			],
			"properties": {
				"maximum_response_time": {
					"type": "number",
					"format": "double",
					"example": "9039.0"
				},
				"minimum_response_time": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"average_response_time": {
					"type": "number",
					"format": "double",
					"example": "65.21"
				},
				"count": {
					"type": "integer",
					"format": "int32",
					"example": "7076"
				}
			}
		},
		"BankTransactionCodeJson": {
			"required": [
				"Code",
				"SubCode"
			],
			"properties": {
				"SubCode": {
					"type": "string",
					"example": "DomesticCreditTransfer"
				},
				"Code": {
					"type": "string",
					"example": "ReceivedCreditTransfer"
				}
			}
		},
		"BalanceUKOpenBankingJson": {
			"required": [
				"Amount",
				"CreditDebitIndicator",
				"Type"
			],
			"properties": {
				"Type": {
					"type": "string",
					"example": "InterimBooked"
				},
				"CreditDebitIndicator": {
					"type": "string",
					"example": "Credit"
				},
				"Amount": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				}
			}
		},
		"TransactionCodeJson": {
			"required": [
				"Code",
				"Issuer"
			],
			"properties": {
				"Issuer": {
					"type": "string",
					"example": "AlphaBank"
				},
				"Code": {
					"type": "string",
					"example": "Transfer"
				}
			}
		},
		"TransactionInnerJson": {
			"required": [
				"AccountId",
				"TransactionId",
				"TransactionReference",
				"Amount",
				"CreditDebitIndicator",
				"Status",
				"BookingDateTime",
				"ValueDateTime",
				"TransactionInformation",
				"BankTransactionCode",
				"ProprietaryBankTransactionCode",
				"Balance"
			],
			"properties": {
				"TransactionInformation": {
					"type": "string",
					"example": "Cash from Aubrey"
				},
				"Balance": {
					"$ref": "#/definitions/BalanceUKOpenBankingJson"
				},
				"BookingDateTime": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"CreditDebitIndicator": {
					"type": "string",
					"example": "Credit"
				},
				"TransactionReference": {
					"type": "string",
					"example": "Ref 1"
				},
				"Amount": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"ProprietaryBankTransactionCode": {
					"$ref": "#/definitions/TransactionCodeJson"
				},
				"TransactionId": {
					"type": "string",
					"example": "123"
				},
				"AccountId": {
					"type": "string",
					"example": "123"
				},
				"ValueDateTime": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"BankTransactionCode": {
					"$ref": "#/definitions/BankTransactionCodeJson"
				},
				"Status": {
					"type": "string",
					"example": "Booked"
				}
			}
		},
		"TransactionsInnerJson": {
			"required": [
				"Transaction"
			],
			"properties": {
				"Transaction": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionInnerJson"
					}
				}
			}
		},
		"MetaInnerJson": {
			"required": [
				"TotalPages",
				"FirstAvailableDateTime",
				"LastAvailableDateTime"
			],
			"properties": {
				"LastAvailableDateTime": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"FirstAvailableDateTime": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"TotalPages": {
					"type": "integer",
					"format": "int32",
					"example": "1"
				}
			}
		},
		"TransactionsJsonUKV200": {
			"required": [
				"Data",
				"Links",
				"Meta"
			],
			"properties": {
				"Meta": {
					"$ref": "#/definitions/MetaInnerJson"
				},
				"Links": {
					"$ref": "#/definitions/Links"
				},
				"Data": {
					"$ref": "#/definitions/TransactionsInnerJson"
				}
			}
		},
		"CreditLineJson": {
			"required": [
				"Included",
				"Amount",
				"Type"
			],
			"properties": {
				"Type": {
					"type": "string",
					"example": "Pre-Agreed"
				},
				"Amount": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"Included": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"BalanceJsonUKV200": {
			"required": [
				"AccountId",
				"Amount",
				"CreditDebitIndicator",
				"Type",
				"DateTime",
				"CreditLine"
			],
			"properties": {
				"CreditDebitIndicator": {
					"type": "string",
					"example": "Credit"
				},
				"Amount": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"DateTime": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"AccountId": {
					"type": "string",
					"example": "22289"
				},
				"CreditLine": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CreditLineJson"
					}
				},
				"Type": {
					"type": "string",
					"example": "InterimAvailable"
				}
			}
		},
		"DataJsonUKV200": {
			"required": [
				"Balance"
			],
			"properties": {
				"Balance": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BalanceJsonUKV200"
					}
				}
			}
		},
		"MetaBisJson": {
			"required": [
				"TotalPages"
			],
			"properties": {
				"TotalPages": {
					"type": "integer",
					"format": "int32",
					"example": "1"
				}
			}
		},
		"AccountBalancesUKV200": {
			"required": [
				"Data",
				"Links",
				"Meta"
			],
			"properties": {
				"Meta": {
					"$ref": "#/definitions/MetaBisJson"
				},
				"Links": {
					"$ref": "#/definitions/Links"
				},
				"Data": {
					"$ref": "#/definitions/DataJsonUKV200"
				}
			}
		},
		"CreateScopeJson": {
			"required": [
				"bank_id",
				"role_name"
			],
			"properties": {
				"role_name": {
					"type": "string",
					"example": "CanGetEntitlementsForAnyUserAtOneBank"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				}
			}
		},
		"ScopeJson": {
			"required": [
				"scope_id",
				"role_name",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"role_name": {
					"type": "string",
					"example": "CanGetEntitlementsForAnyUserAtOneBank"
				},
				"scope_id": {
					"type": "string",
					"example": "88625da4-a671-435e-9d24-e5b6e5cc404f"
				}
			}
		},
		"ScopeJsons": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ScopeJson"
					}
				}
			}
		},
		"OrderObjectJson": {
			"required": [
				"order_id",
				"order_date",
				"number_of_checkbooks",
				"distribution_channel",
				"status",
				"first_check_number",
				"shipping_code"
			],
			"properties": {
				"order_id": {
					"type": "string",
					"example": "xjksajfkj"
				},
				"number_of_checkbooks": {
					"type": "string",
					"example": "4"
				},
				"first_check_number": {
					"type": "string",
					"example": "5165276"
				},
				"order_date": {
					"type": "string",
					"example": "07082013"
				},
				"status": {
					"type": "string",
					"example": "2"
				},
				"shipping_code": {
					"type": "string",
					"example": "1"
				},
				"distribution_channel": {
					"type": "string",
					"example": "1201"
				}
			}
		},
		"OrderJson": {
			"required": [
				"order"
			],
			"properties": {
				"order": {
					"$ref": "#/definitions/OrderObjectJson"
				}
			}
		},
		"AccountV310Json": {
			"required": [
				"bank_id",
				"account_id",
				"account_type",
				"account_routings",
				"branch_routings"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"account_type": {
					"type": "string",
					"example": "330"
				},
				"bank_id": {
					"type": "string",
					"example": "10"
				},
				"account_id": {
					"type": "string",
					"example": "xjfsafjj"
				},
				"branch_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BranchRoutingJsonV141"
					}
				}
			}
		},
		"CheckbookOrdersJson": {
			"required": [
				"account",
				"orders"
			],
			"properties": {
				"orders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OrderJson"
					}
				},
				"account": {
					"$ref": "#/definitions/AccountV310Json"
				}
			}
		},
		"CheckFundsAvailableJson": {
			"required": [
				"answer",
				"date",
				"available_funds_request_id"
			],
			"properties": {
				"available_funds_request_id": {
					"type": "string",
					"example": "c4ykz59svsr9b7fmdxk8ezs7"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Mon Mar 11 13:02:52 UTC 2019"
				},
				"answer": {
					"type": "string",
					"example": "yes"
				}
			}
		},
		"CardObjectJson": {
			"required": [
				"card_type",
				"card_description",
				"use_type"
			],
			"properties": {
				"use_type": {
					"type": "string",
					"example": "3"
				},
				"card_description": {
					"type": "string",
					"example": "good"
				},
				"card_type": {
					"type": "string",
					"example": "5"
				}
			}
		},
		"CreditCardOrderStatusResponseJson": {
			"required": [
				"cards"
			],
			"properties": {
				"cards": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CardObjectJson"
					}
				}
			}
		},
		"CreditLimitRequestJson": {
			"required": [
				"requested_current_rate_amount1",
				"requested_current_rate_amount2",
				"requested_current_valid_end_date",
				"current_credit_documentation",
				"temporary_requested_current_amount",
				"requested_temporary_valid_end_date",
				"temporary_credit_documentation"
			],
			"properties": {
				"requested_current_rate_amount1": {
					"type": "string",
					"example": "String"
				},
				"temporary_credit_documentation": {
					"type": "string",
					"example": "String"
				},
				"requested_current_valid_end_date": {
					"type": "string",
					"example": "String"
				},
				"temporary_requested_current_amount": {
					"type": "string",
					"example": "String"
				},
				"requested_current_rate_amount2": {
					"type": "string",
					"example": "String"
				},
				"requested_temporary_valid_end_date": {
					"type": "string",
					"example": "String"
				},
				"current_credit_documentation": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CreditLimitOrderResponseJson": {
			"required": [
				"execution_time",
				"execution_date",
				"token",
				"short_reference"
			],
			"properties": {
				"short_reference": {
					"type": "string",
					"example": "String"
				},
				"token": {
					"type": "string",
					"example": "String"
				},
				"execution_date": {
					"type": "string",
					"example": "String"
				},
				"execution_time": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"CreditLimitOrderJson": {
			"required": [
				"rank_amount_1",
				"nominal_interest_1",
				"rank_amount_2",
				"nominal_interest_2"
			],
			"properties": {
				"nominal_interest_2": {
					"type": "string",
					"example": "String"
				},
				"rank_amount_2": {
					"type": "string",
					"example": "String"
				},
				"nominal_interest_1": {
					"type": "string",
					"example": "String"
				},
				"rank_amount_1": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TopApiJson": {
			"required": [
				"count",
				"Implemented_by_partial_function",
				"implemented_in_version"
			],
			"properties": {
				"implemented_in_version": {
					"type": "string",
					"example": "v1.2.1"
				},
				"Implemented_by_partial_function": {
					"type": "string",
					"example": "getBanks"
				},
				"count": {
					"type": "integer",
					"format": "int32",
					"example": "7076"
				}
			}
		},
		"TopApisJson": {
			"required": [
				"top_apis"
			],
			"properties": {
				"top_apis": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TopApiJson"
					}
				}
			}
		},
		"TopConsumerJson": {
			"required": [
				"count",
				"consumer_id",
				"app_name",
				"developer_email"
			],
			"properties": {
				"developer_email": {
					"type": "string",
					"example": "tesobe@tesobe.com"
				},
				"app_name": {
					"type": "string",
					"example": "Api Explorer"
				},
				"consumer_id": {
					"type": "string",
					"example": "12312312"
				},
				"count": {
					"type": "integer",
					"format": "int32",
					"example": "7076"
				}
			}
		},
		"TopConsumersJson": {
			"required": [
				"top_consumers"
			],
			"properties": {
				"top_consumers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TopConsumerJson"
					}
				}
			}
		},
		"GlossaryItem": {
			"required": [
				"title",
				"description",
				"htmlDescription",
				"textDescription"
			],
			"properties": {
				"textDescription": {
					"type": "string",
					"example": "<p>Description.</p>\n<p>Goes here..</p>\n"
				},
				"htmlDescription": {
					"type": "string",
					"example": "<p>Description.</p>\n<p>Goes here..</p>\n"
				},
				"description": {
					"type": "string",
					"example": "Description.\n        |\n        |Goes here..\n      "
				},
				"title": {
					"type": "string",
					"example": "Title "
				}
			}
		},
		"GlossaryDescriptionJsonV300": {
			"required": [
				"markdown",
				"html"
			],
			"properties": {
				"html": {
					"type": "string",
					"example": "String"
				},
				"markdown": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"GlossaryItemJsonV300": {
			"required": [
				"title",
				"description"
			],
			"properties": {
				"description": {
					"$ref": "#/definitions/GlossaryDescriptionJsonV300"
				},
				"title": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"GlossaryItemsJsonV300": {
			"required": [
				"glossary_items"
			],
			"properties": {
				"glossary_items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GlossaryItemJsonV300"
					}
				}
			}
		},
		"BadLoginStatusJson": {
			"required": [
				"username",
				"bad_attempts_since_last_success_or_reset",
				"last_failure_date"
			],
			"properties": {
				"last_failure_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bad_attempts_since_last_success_or_reset": {
					"type": "integer",
					"format": "int32",
					"example": "0"
				},
				"username": {
					"type": "string",
					"example": "tesobe"
				}
			}
		},
		"CallLimitPostJson": {
			"required": [
				"per_second_call_limit",
				"per_minute_call_limit",
				"per_hour_call_limit",
				"per_day_call_limit",
				"per_week_call_limit",
				"per_month_call_limit"
			],
			"properties": {
				"per_month_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_week_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_hour_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_second_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_minute_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_day_call_limit": {
					"type": "string",
					"example": "-1"
				}
			}
		},
		"CallLimitJson": {
			"required": [
				"per_second_call_limit",
				"per_minute_call_limit",
				"per_hour_call_limit",
				"per_day_call_limit",
				"per_week_call_limit",
				"per_month_call_limit"
			],
			"properties": {
				"current_state": {
					"$ref": "#/definitions/None$"
				},
				"per_month_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_week_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_hour_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_second_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_minute_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_day_call_limit": {
					"type": "string",
					"example": "-1"
				}
			}
		},
		"AccountWebhookPostJson": {
			"required": [
				"account_id",
				"trigger_name",
				"url",
				"http_method",
				"http_protocol",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "string",
					"example": "true"
				},
				"url": {
					"type": "string",
					"example": "https://localhost.openbankproject.com"
				},
				"trigger_name": {
					"type": "string",
					"example": "OnBalanceChange"
				},
				"http_protocol": {
					"type": "string",
					"example": "HTTP/1.1"
				},
				"http_method": {
					"type": "string",
					"example": "POST"
				},
				"account_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"AccountWebhookPutJson": {
			"required": [
				"account_webhook_id",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "string",
					"example": "true"
				},
				"account_webhook_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"AccountWebhookJson": {
			"required": [
				"account_webhook_id",
				"bank_id",
				"account_id",
				"trigger_name",
				"url",
				"http_method",
				"http_protocol",
				"created_by_user_id",
				"is_active"
			],
			"properties": {
				"created_by_user_id": {
					"type": "string",
					"example": "b1fd9b29-659d-4838-a300-ea65b65b5fb6"
				},
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"url": {
					"type": "string",
					"example": "https://localhost.openbankproject.com"
				},
				"trigger_name": {
					"type": "string",
					"example": "OnBalanceChange"
				},
				"http_protocol": {
					"type": "string",
					"example": "HTTP/1.1"
				},
				"account_webhook_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"http_method": {
					"type": "string",
					"example": "POST"
				},
				"bank_id": {
					"type": "string",
					"example": "obp-x"
				},
				"account_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"AccountWebhooksJson": {
			"required": [
				"web_hooks"
			],
			"properties": {
				"web_hooks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountWebhookJson"
					}
				}
			}
		},
		"PostUserAuthContextJson": {
			"required": [
				"key",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "78987432"
				},
				"key": {
					"type": "string",
					"example": "CUSTOMER_NUMBER"
				}
			}
		},
		"UserAuthContextJson": {
			"required": [
				"user_auth_context_id",
				"user_id",
				"key",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "78987432"
				},
				"key": {
					"type": "string",
					"example": "CUSTOMER_NUMBER"
				},
				"user_id": {
					"type": "string",
					"example": "qieuriopwoir987203984729384ipeiu"
				},
				"user_auth_context_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				}
			}
		},
		"UserAuthContextsJson": {
			"required": [
				"user_auth_contexts"
			],
			"properties": {
				"user_auth_contexts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserAuthContextJson"
					}
				}
			}
		},
		"ObpApiLoopbackJson": {
			"required": [
				"connector_version",
				"git_commit",
				"duration_time"
			],
			"properties": {
				"duration_time": {
					"type": "string",
					"example": "10 ms"
				},
				"git_commit": {
					"type": "string",
					"example": "f0acd4be14cdcb94be3433ec95c1ad65228812a0"
				},
				"connector_version": {
					"type": "string",
					"example": "kafka_vSept2018"
				}
			}
		},
		"RefreshUserJson": {
			"required": [
				"duration_time"
			],
			"properties": {
				"duration_time": {
					"type": "string",
					"example": "10 ms"
				}
			}
		},
		"ProductAttributeJson": {
			"required": [
				"name",
				"type",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "2012-04-23"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				}
			}
		},
		"ProductAttributeResponseWithoutBankIdJson": {
			"required": [
				"product_code",
				"product_attribute_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"product_attribute_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"product_code": {
					"type": "string",
					"example": "saving1"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"AccountAttributeJson": {
			"required": [
				"bank_id",
				"account_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"bank_id": {
					"type": "string",
					"example": "123"
				},
				"account_id": {
					"type": "string",
					"example": "456"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"AccountAttributeResponseJson": {
			"required": [
				"bank_id",
				"account_id",
				"product_code",
				"account_attribute_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"account_attribute_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"product_code": {
					"type": "string",
					"example": "saving1"
				},
				"bank_id": {
					"type": "string",
					"example": "123"
				},
				"account_id": {
					"type": "string",
					"example": "456"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"AccountApplicationJson": {
			"required": [
				"product_code"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"user_id": {
					"type": "string",
					"example": "123"
				},
				"product_code": {
					"type": "string",
					"example": "saveing1"
				}
			}
		},
		"AccountApplicationResponseJson": {
			"required": [
				"account_application_id",
				"product_code",
				"user",
				"customer",
				"date_of_application",
				"status"
			],
			"properties": {
				"date_of_application": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"account_application_id": {
					"type": "string",
					"example": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
				},
				"product_code": {
					"type": "string",
					"example": "saveing1"
				},
				"status": {
					"type": "string",
					"example": "REQUESTED"
				},
				"customer": {
					"$ref": "#/definitions/CustomerJsonV310"
				},
				"user": {
					"$ref": "#/definitions/ResourceUserJSON"
				}
			}
		},
		"AccountApplicationUpdateStatusJson": {
			"required": [
				"status"
			],
			"properties": {
				"status": {
					"type": "string",
					"example": "ACCEPTED"
				}
			}
		},
		"AccountApplicationsJsonV310": {
			"required": [
				"account_applications"
			],
			"properties": {
				"account_applications": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountApplicationResponseJson"
					}
				}
			}
		},
		"ProductJsonV310": {
			"required": [
				"bank_id",
				"code",
				"parent_product_code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "product_code"
				},
				"product_attributes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				},
				"parent_product_code": {
					"type": "string",
					"example": "parent"
				}
			}
		},
		"ProductsJsonV310": {
			"required": [
				"products"
			],
			"properties": {
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductJsonV310"
					}
				}
			}
		},
		"ProductCollectionItemJsonV310": {
			"required": [
				"member_product_code"
			],
			"properties": {
				"member_product_code": {
					"type": "string",
					"example": "A"
				}
			}
		},
		"ProductCollectionJsonV310": {
			"required": [
				"collection_code",
				"product_code",
				"items"
			],
			"properties": {
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductCollectionItemJsonV310"
					}
				},
				"product_code": {
					"type": "string",
					"example": "D"
				},
				"collection_code": {
					"type": "string",
					"example": "C"
				}
			}
		},
		"ProductCollectionsJsonV310": {
			"required": [
				"product_collection"
			],
			"properties": {
				"product_collection": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductCollectionJsonV310"
					}
				}
			}
		},
		"ProductCollectionJsonTreeV310": {
			"required": [
				"collection_code",
				"products"
			],
			"properties": {
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductJsonV310"
					}
				},
				"collection_code": {
					"type": "string",
					"example": "A"
				}
			}
		},
		"ContactDetailsJson": {
			"required": [
				"name",
				"mobile_phone",
				"email_addresse"
			],
			"properties": {
				"email_addresse": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone": {
					"type": "string",
					"example": "+44 07972 444 876"
				},
				"name": {
					"type": "string",
					"example": "Simon "
				}
			}
		},
		"InviteeJson": {
			"required": [
				"contact_details",
				"status"
			],
			"properties": {
				"status": {
					"type": "string",
					"example": "String, eg: Good"
				},
				"contact_details": {
					"$ref": "#/definitions/ContactDetailsJson"
				}
			}
		},
		"CreateMeetingJsonV310": {
			"required": [
				"provider_id",
				"purpose_id",
				"date",
				"creator",
				"invitees"
			],
			"properties": {
				"provider_id": {
					"type": "string",
					"example": "String, eg: tokbox"
				},
				"creator": {
					"$ref": "#/definitions/ContactDetailsJson"
				},
				"invitees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InviteeJson"
					}
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"purpose_id": {
					"type": "string",
					"example": "String, eg: onboarding"
				}
			}
		},
		"MeetingJsonV310": {
			"required": [
				"meeting_id",
				"provider_id",
				"purpose_id",
				"bank_id",
				"present",
				"keys",
				"when",
				"creator",
				"invitees"
			],
			"properties": {
				"present": {
					"$ref": "#/definitions/MeetingPresentJson"
				},
				"provider_id": {
					"type": "string",
					"example": "String, eg: tokbox"
				},
				"creator": {
					"$ref": "#/definitions/ContactDetailsJson"
				},
				"invitees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InviteeJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"purpose_id": {
					"type": "string",
					"example": "String, eg: onboarding"
				},
				"when": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"meeting_id": {
					"type": "string",
					"example": "UUID-String"
				},
				"keys": {
					"$ref": "#/definitions/MeetingKeysJson"
				}
			}
		},
		"MeetingsJsonV310": {
			"required": [
				"meetings"
			],
			"properties": {
				"meetings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MeetingJsonV310"
					}
				}
			}
		},
		"NoSupportYet": {
			"properties": {

			}
		},
		"SandboxBankImport": {
			"required": [
				"id",
				"short_name",
				"full_name",
				"logo",
				"website"
			],
			"properties": {
				"website": {
					"type": "string",
					"example": "http://example.com"
				},
				"full_name": {
					"type": "string",
					"example": "Bank 1 Inc."
				},
				"logo": {
					"type": "string",
					"example": "http://example.com/logo"
				},
				"id": {
					"type": "string",
					"example": "bank1"
				},
				"short_name": {
					"type": "string",
					"example": "bank 1"
				}
			}
		},
		"SandboxBankImport": {
			"required": [
				"id",
				"short_name",
				"full_name",
				"logo",
				"website"
			],
			"properties": {
				"website": {
					"type": "string",
					"example": "http://example.com/2"
				},
				"full_name": {
					"type": "string",
					"example": "Bank 2 Inc."
				},
				"logo": {
					"type": "string",
					"example": "http://example.com/logo2"
				},
				"id": {
					"type": "string",
					"example": "bank2"
				},
				"short_name": {
					"type": "string",
					"example": "bank 2"
				}
			}
		},
		"SandboxAddressImport": {
			"required": [
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"post_code",
				"country_code"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Ashbourne"
				},
				"line_2": {
					"type": "string",
					"example": "Rosy Place"
				},
				"state": {
					"type": "string",
					"example": ""
				},
				"post_code": {
					"type": "string",
					"example": "WHY RU4"
				},
				"county": {
					"type": "string",
					"example": "Derbyshire"
				},
				"country_code": {
					"type": "string",
					"example": "UK"
				},
				"line_3": {
					"type": "string",
					"example": "Sunny Village"
				},
				"line_1": {
					"type": "string",
					"example": "5 Some Street"
				}
			}
		},
		"SandboxLocationImport": {
			"required": [
				"latitude",
				"longitude"
			],
			"properties": {
				"longitude": {
					"type": "number",
					"format": "double",
					"example": "13.384099"
				},
				"latitude": {
					"type": "number",
					"format": "double",
					"example": "52.556198"
				}
			}
		},
		"SandboxLicenseImport": {
			"required": [
				"id",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Open Data Commons Public Domain Dedication and License (PDDL)"
				},
				"id": {
					"type": "string",
					"example": "pddl"
				}
			}
		},
		"SandboxMetaImport": {
			"required": [
				"license"
			],
			"properties": {
				"license": {
					"$ref": "#/definitions/SandboxLicenseImport"
				}
			}
		},
		"SandboxLobbyImport": {
			"required": [
				"hours"
			],
			"properties": {
				"hours": {
					"type": "string",
					"example": "M-TH 8:30-3:30, F 9-5"
				}
			}
		},
		"SandboxDriveUpImport": {
			"required": [
				"hours"
			],
			"properties": {
				"hours": {
					"type": "string",
					"example": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
				}
			}
		},
		"SandboxBranchImport": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Genel Müdürlük"
				},
				"location": {
					"$ref": "#/definitions/SandboxLocationImport"
				},
				"driveUp": {
					"$ref": "#/definitions/SandboxDriveUpImport"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "branch1"
				},
				"meta": {
					"$ref": "#/definitions/SandboxMetaImport"
				},
				"lobby": {
					"$ref": "#/definitions/SandboxLobbyImport"
				},
				"address": {
					"$ref": "#/definitions/SandboxAddressImport"
				}
			}
		},
		"SandboxBranchImport": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Manchester"
				},
				"location": {
					"$ref": "#/definitions/SandboxLocationImport"
				},
				"driveUp": {
					"$ref": "#/definitions/SandboxDriveUpImport"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "branch2"
				},
				"meta": {
					"$ref": "#/definitions/SandboxMetaImport"
				},
				"lobby": {
					"$ref": "#/definitions/SandboxLobbyImport"
				},
				"address": {
					"$ref": "#/definitions/SandboxAddressImport"
				}
			}
		},
		"SandboxAtmImport": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Ashbourne Atm 1"
				},
				"location": {
					"$ref": "#/definitions/SandboxLocationImport"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "atm1"
				},
				"meta": {
					"$ref": "#/definitions/SandboxMetaImport"
				},
				"address": {
					"$ref": "#/definitions/SandboxAddressImport"
				}
			}
		},
		"SandboxAtmImport": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Manchester Atm 1"
				},
				"location": {
					"$ref": "#/definitions/SandboxLocationImport"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "atm2"
				},
				"meta": {
					"$ref": "#/definitions/SandboxMetaImport"
				},
				"address": {
					"$ref": "#/definitions/SandboxAddressImport"
				}
			}
		},
		"SandboxProductImport": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product 1"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/index1"
				},
				"super_family": {
					"type": "string",
					"example": "sup fam 1"
				},
				"code": {
					"type": "string",
					"example": "prd1"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"meta": {
					"$ref": "#/definitions/SandboxMetaImport"
				},
				"category": {
					"type": "string",
					"example": "cat1"
				},
				"family": {
					"type": "string",
					"example": "fam1"
				}
			}
		},
		"SandboxProductImport": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Product 2"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/index2"
				},
				"super_family": {
					"type": "string",
					"example": "sup fam 2"
				},
				"code": {
					"type": "string",
					"example": "prd2"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"meta": {
					"$ref": "#/definitions/SandboxMetaImport"
				},
				"category": {
					"type": "string",
					"example": "cat2"
				},
				"family": {
					"type": "string",
					"example": "fam2"
				}
			}
		},
		"SandboxUserImport": {
			"required": [
				"email",
				"password",
				"user_name"
			],
			"properties": {
				"user_name": {
					"type": "string",
					"example": "User 1"
				},
				"password": {
					"type": "string",
					"example": "TESOBE520berlin123!"
				},
				"email": {
					"type": "string",
					"example": "user1@example.com"
				}
			}
		},
		"SandboxUserImport": {
			"required": [
				"email",
				"password",
				"user_name"
			],
			"properties": {
				"user_name": {
					"type": "string",
					"example": "User 2"
				},
				"password": {
					"type": "string",
					"example": "TESOBE520berlin123!"
				},
				"email": {
					"type": "string",
					"example": "user2@example.com"
				}
			}
		},
		"SandboxBalanceImport": {
			"required": [
				"currency",
				"amount"
			],
			"properties": {
				"amount": {
					"type": "string",
					"example": "1000.00"
				},
				"currency": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"SandboxAccountImport": {
			"required": [
				"id",
				"bank",
				"label",
				"number",
				"type",
				"balance",
				"IBAN",
				"owners",
				"generate_public_view",
				"generate_accountants_view",
				"generate_auditors_view"
			],
			"properties": {
				"generate_auditors_view": {
					"type": "boolean",
					"example": "true"
				},
				"number": {
					"type": "string",
					"example": "1"
				},
				"IBAN": {
					"type": "string",
					"example": "1234567890"
				},
				"label": {
					"type": "string",
					"example": "Account 1 at Bank 1"
				},
				"owners": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"balance": {
					"$ref": "#/definitions/SandboxBalanceImport"
				},
				"bank": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "account1"
				},
				"type": {
					"type": "string",
					"example": "savings"
				},
				"generate_accountants_view": {
					"type": "boolean",
					"example": "true"
				},
				"generate_public_view": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"SandboxAccountImport": {
			"required": [
				"id",
				"bank",
				"label",
				"number",
				"type",
				"balance",
				"IBAN",
				"owners",
				"generate_public_view",
				"generate_accountants_view",
				"generate_auditors_view"
			],
			"properties": {
				"generate_auditors_view": {
					"type": "boolean",
					"example": "true"
				},
				"number": {
					"type": "string",
					"example": "2"
				},
				"IBAN": {
					"type": "string",
					"example": "91234567890"
				},
				"label": {
					"type": "string",
					"example": "Account 2 at Bank 1"
				},
				"owners": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"balance": {
					"$ref": "#/definitions/SandboxBalanceImport"
				},
				"bank": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "account2"
				},
				"type": {
					"type": "string",
					"example": "current"
				},
				"generate_accountants_view": {
					"type": "boolean",
					"example": "true"
				},
				"generate_public_view": {
					"type": "boolean",
					"example": "false"
				}
			}
		},
		"SandboxAccountImport": {
			"required": [
				"id",
				"bank",
				"label",
				"number",
				"type",
				"balance",
				"IBAN",
				"owners",
				"generate_public_view",
				"generate_accountants_view",
				"generate_auditors_view"
			],
			"properties": {
				"generate_auditors_view": {
					"type": "boolean",
					"example": "true"
				},
				"number": {
					"type": "string",
					"example": "22"
				},
				"IBAN": {
					"type": "string",
					"example": "21234567890"
				},
				"label": {
					"type": "string",
					"example": "Account 1 at Bank 2"
				},
				"owners": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"balance": {
					"$ref": "#/definitions/SandboxBalanceImport"
				},
				"bank": {
					"type": "string",
					"example": "bank2"
				},
				"id": {
					"type": "string",
					"example": "account1"
				},
				"type": {
					"type": "string",
					"example": "savings"
				},
				"generate_accountants_view": {
					"type": "boolean",
					"example": "true"
				},
				"generate_public_view": {
					"type": "boolean",
					"example": "false"
				}
			}
		},
		"SandboxTransactionCounterparty": {
			"properties": {
				"account_number": {
					"type": "string",
					"example": "12345-B"
				},
				"name": {
					"type": "string",
					"example": "Acme Inc."
				}
			}
		},
		"SandboxAccountDetailsImport": {
			"required": [
				"type",
				"description",
				"posted",
				"completed",
				"new_balance",
				"value"
			],
			"properties": {
				"new_balance": {
					"type": "string",
					"example": "1244.00"
				},
				"description": {
					"type": "string",
					"example": "some description"
				},
				"completed": {
					"type": "string",
					"example": "2012-04-07T00:00:00.001Z"
				},
				"type": {
					"type": "string",
					"example": "SEPA"
				},
				"value": {
					"type": "string",
					"example": "-135.33"
				},
				"posted": {
					"type": "string",
					"example": "2012-03-07T00:00:00.001Z"
				}
			}
		},
		"SandboxAccountIdImport": {
			"required": [
				"id",
				"bank"
			],
			"properties": {
				"bank": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "account1"
				}
			}
		},
		"SandboxTransactionImport": {
			"required": [
				"id",
				"this_account",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/SandboxAccountDetailsImport"
				},
				"counterparty": {
					"$ref": "#/definitions/SandboxTransactionCounterparty"
				},
				"this_account": {
					"$ref": "#/definitions/SandboxAccountIdImport"
				},
				"id": {
					"type": "string",
					"example": "transaction-with-counterparty"
				}
			}
		},
		"SandboxTransactionImport": {
			"required": [
				"id",
				"this_account",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/SandboxAccountDetailsImport"
				},
				"counterparty": {
					"$ref": "#/definitions/None$"
				},
				"this_account": {
					"$ref": "#/definitions/SandboxAccountIdImport"
				},
				"id": {
					"type": "string",
					"example": "transaction-without-counterparty"
				}
			}
		},
		"SandboxCustomerImport": {
			"required": [
				"name",
				"number"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "698761728934"
				},
				"name": {
					"type": "string",
					"example": "James Brown"
				}
			}
		},
		"SandboxCrmEventImport": {
			"required": [
				"id",
				"bank_id",
				"customer",
				"category",
				"detail",
				"channel",
				"actual_date"
			],
			"properties": {
				"channel": {
					"type": "string",
					"example": "Phone"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "ASDFHJ47YKJH"
				},
				"customer": {
					"$ref": "#/definitions/SandboxCustomerImport"
				},
				"category": {
					"type": "string",
					"example": "Call"
				},
				"detail": {
					"type": "string",
					"example": "Check mortgage"
				},
				"actual_date": {
					"type": "string",
					"example": "2017-09-19T02:31:05.000Z"
				}
			}
		},
		"SandboxCrmEventImport": {
			"required": [
				"id",
				"bank_id",
				"customer",
				"category",
				"detail",
				"channel",
				"actual_date"
			],
			"properties": {
				"channel": {
					"type": "string",
					"example": "Phone"
				},
				"bank_id": {
					"type": "string",
					"example": "bank1"
				},
				"id": {
					"type": "string",
					"example": "KIFJA76876AS"
				},
				"customer": {
					"$ref": "#/definitions/SandboxCustomerImport"
				},
				"category": {
					"type": "string",
					"example": "Call"
				},
				"detail": {
					"type": "string",
					"example": "Check mortgage"
				},
				"actual_date": {
					"type": "string",
					"example": "2017-09-19T02:31:05.000Z"
				}
			}
		},
		"SandboxTransactionImport": {
			"required": [
				"id",
				"this_account",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/SandboxAccountDetailsImport"
				},
				"counterparty": {
					"$ref": "#/definitions/None$"
				},
				"this_account": {
					"$ref": "#/definitions/SandboxAccountIdImport"
				},
				"id": {
					"type": "string",
					"example": "transaction-without-counterparty"
				}
			}
		},
		"SandboxTransactionImport": {
			"required": [
				"id",
				"this_account",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/SandboxAccountDetailsImport"
				},
				"counterparty": {
					"$ref": "#/definitions/SandboxTransactionCounterparty"
				},
				"this_account": {
					"$ref": "#/definitions/SandboxAccountIdImport"
				},
				"id": {
					"type": "string",
					"example": "blankCounterpartNameTransaction"
				}
			}
		},
		"SandboxTransactionImport": {
			"required": [
				"id",
				"this_account",
				"details"
			],
			"properties": {
				"details": {
					"$ref": "#/definitions/SandboxAccountDetailsImport"
				},
				"counterparty": {
					"$ref": "#/definitions/SandboxTransactionCounterparty"
				},
				"this_account": {
					"$ref": "#/definitions/SandboxAccountIdImport"
				},
				"id": {
					"type": "string",
					"example": "blankCounterpartAccountNumberTransaction"
				}
			}
		},
		"SandboxDataImport": {
			"required": [
				"banks",
				"users",
				"accounts",
				"transactions",
				"branches",
				"atms",
				"products",
				"crm_events"
			],
			"properties": {
				"crm_events": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxCrmEventImport"
					}
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxUserImport"
					}
				},
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxProductImport"
					}
				},
				"banks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxBankImport"
					}
				},
				"branches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxBranchImport"
					}
				},
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxTransactionImport"
					}
				},
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxAccountImport"
					}
				},
				"atms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SandboxAtmImport"
					}
				}
			}
		},
		"KycStatusesJSON": {
			"required": [
				"statuses"
			],
			"properties": {
				"statuses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycStatusJSON"
					}
				}
			}
		},
		"TransactionTagJSON": {
			"required": [
				"id",
				"value",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"value": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"TopConsumersJson": {
			"required": [
				"top_consumers"
			],
			"properties": {
				"top_consumers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TopConsumerJson"
					}
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"UserAuthContextsJson": {
			"required": [
				"user_auth_contexts"
			],
			"properties": {
				"user_auth_contexts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserAuthContextJson"
					}
				}
			}
		},
		"CallLimitPostJson": {
			"required": [
				"per_second_call_limit",
				"per_minute_call_limit",
				"per_hour_call_limit",
				"per_day_call_limit",
				"per_week_call_limit",
				"per_month_call_limit"
			],
			"properties": {
				"per_month_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_week_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_hour_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_second_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_minute_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_day_call_limit": {
					"type": "string",
					"example": "-1"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ViewJsonV300": {
			"required": [
				"id",
				"short_name",
				"description",
				"metadata_view",
				"is_public",
				"alias",
				"hide_metadata_if_alias_used",
				"can_add_comment",
				"can_add_corporate_location",
				"can_add_image",
				"can_add_image_url",
				"can_add_more_info",
				"can_add_open_corporates_url",
				"can_add_physical_location",
				"can_add_private_alias",
				"can_add_public_alias",
				"can_add_tag",
				"can_add_url",
				"can_add_where_tag",
				"can_delete_comment",
				"can_add_counterparty",
				"can_delete_corporate_location",
				"can_delete_image",
				"can_delete_physical_location",
				"can_delete_tag",
				"can_delete_where_tag",
				"can_edit_owner_comment",
				"can_see_bank_account_balance",
				"can_query_available_funds",
				"can_see_bank_account_bank_name",
				"can_see_bank_account_currency",
				"can_see_bank_account_iban",
				"can_see_bank_account_label",
				"can_see_bank_account_national_identifier",
				"can_see_bank_account_number",
				"can_see_bank_account_owners",
				"can_see_bank_account_swift_bic",
				"can_see_bank_account_type",
				"can_see_comments",
				"can_see_corporate_location",
				"can_see_image_url",
				"can_see_images",
				"can_see_more_info",
				"can_see_open_corporates_url",
				"can_see_other_account_bank_name",
				"can_see_other_account_iban",
				"can_see_other_account_kind",
				"can_see_other_account_metadata",
				"can_see_other_account_national_identifier",
				"can_see_other_account_number",
				"can_see_other_account_swift_bic",
				"can_see_owner_comment",
				"can_see_physical_location",
				"can_see_private_alias",
				"can_see_public_alias",
				"can_see_tags",
				"can_see_transaction_amount",
				"can_see_transaction_balance",
				"can_see_transaction_currency",
				"can_see_transaction_description",
				"can_see_transaction_finish_date",
				"can_see_transaction_metadata",
				"can_see_transaction_other_bank_account",
				"can_see_transaction_start_date",
				"can_see_transaction_this_bank_account",
				"can_see_transaction_type",
				"can_see_url",
				"can_see_where_tag",
				"can_see_bank_routing_scheme",
				"can_see_bank_routing_address",
				"can_see_bank_account_routing_scheme",
				"can_see_bank_account_routing_address",
				"can_see_other_bank_routing_scheme",
				"can_see_other_bank_routing_address",
				"can_see_other_account_routing_scheme",
				"can_see_other_account_routing_address",
				"can_add_transaction_request_to_own_account",
				"can_add_transaction_request_to_any_account",
				"can_see_bank_account_credit_limit"
			],
			"properties": {
				"can_see_transaction_start_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_this_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_owners": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_edit_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"can_see_bank_account_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_other_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_comments": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_kind": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_transaction_request_to_own_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_label": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_currency": {
					"type": "boolean",
					"example": "true"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_finish_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_images": {
					"type": "boolean",
					"example": "true"
				},
				"can_query_available_funds": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_credit_limit": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_currency": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"alias": {
					"type": "string",
					"example": "No"
				},
				"can_add_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"id": {
					"type": "string",
					"example": "1234"
				},
				"can_see_bank_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_counterparty": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_transaction_request_to_any_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_tags": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"can_delete_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_bank_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_balance": {
					"type": "boolean",
					"example": "true"
				},
				"metadata_view": {
					"type": "string",
					"example": "owner"
				},
				"can_see_transaction_amount": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_bank_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_description": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"ProductJsonV310": {
			"required": [
				"bank_id",
				"code",
				"parent_product_code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "product_code"
				},
				"product_attributes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				},
				"parent_product_code": {
					"type": "string",
					"example": "parent"
				}
			}
		},
		"CheckbookOrdersJson": {
			"required": [
				"account",
				"orders"
			],
			"properties": {
				"orders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OrderJson"
					}
				},
				"account": {
					"$ref": "#/definitions/AccountV310Json"
				}
			}
		},
		"UsersJsonV200": {
			"required": [
				"users"
			],
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJsonV200"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionRequestWithChargeJSON210": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "4050046c-63b3-4868-8a22-14b4181d33a6"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBodyAllTypes"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"CoreAccountsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreAccountJson"
					}
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"EntitlementRequestsJSON": {
			"required": [
				"entitlement_requests"
			],
			"properties": {
				"entitlement_requests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementRequestJSON"
					}
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionsJsonV300": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJsonV300"
					}
				}
			}
		},
		"KycDocumentsJSON": {
			"required": [
				"documents"
			],
			"properties": {
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycDocumentJSON"
					}
				}
			}
		},
		"KycChecksJSON": {
			"required": [
				"checks"
			],
			"properties": {
				"checks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycCheckJSON"
					}
				}
			}
		},
		"TransactionImagesJSON": {
			"required": [
				"images"
			],
			"properties": {
				"images": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionImageJSON"
					}
				}
			}
		},
		"AccountWebhookJson": {
			"required": [
				"account_webhook_id",
				"bank_id",
				"account_id",
				"trigger_name",
				"url",
				"http_method",
				"http_protocol",
				"created_by_user_id",
				"is_active"
			],
			"properties": {
				"created_by_user_id": {
					"type": "string",
					"example": "b1fd9b29-659d-4838-a300-ea65b65b5fb6"
				},
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"url": {
					"type": "string",
					"example": "https://localhost.openbankproject.com"
				},
				"trigger_name": {
					"type": "string",
					"example": "OnBalanceChange"
				},
				"http_protocol": {
					"type": "string",
					"example": "HTTP/1.1"
				},
				"account_webhook_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"http_method": {
					"type": "string",
					"example": "POST"
				},
				"bank_id": {
					"type": "string",
					"example": "obp-x"
				},
				"account_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"KycDocumentJSON": {
			"required": [
				"bank_id",
				"customer_id",
				"id",
				"customer_number",
				"type",
				"number",
				"issue_date",
				"issue_place",
				"expiry_date"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"issue_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"type": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"issue_place": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"expiry_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"KycMediasJSON": {
			"required": [
				"medias"
			],
			"properties": {
				"medias": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KycMediaJSON"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"RefreshUserJson": {
			"required": [
				"duration_time"
			],
			"properties": {
				"duration_time": {
					"type": "string",
					"example": "10 ms"
				}
			}
		},
		"EntitlementJSON": {
			"required": [
				"entitlement_id",
				"role_name",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"role_name": {
					"type": "string",
					"example": "CanQueryOtherUser"
				},
				"entitlement_id": {
					"type": "string",
					"example": "6fb17583-1e49-4435-bb74-a14fe0996723"
				}
			}
		},
		"UserJsonV200": {
			"required": [
				"user_id",
				"email",
				"provider_id",
				"provider",
				"username",
				"entitlements"
			],
			"properties": {
				"provider": {
					"type": "string",
					"example": "OBP"
				},
				"email": {
					"type": "string",
					"example": "robert.x.0.gh@example.com"
				},
				"username": {
					"type": "string",
					"example": "robert.x.0.gh"
				},
				"provider_id": {
					"type": "string",
					"example": "OBP"
				},
				"user_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"entitlements": {
					"$ref": "#/definitions/EntitlementJSONs"
				}
			}
		},
		"AccountApplicationsJsonV310": {
			"required": [
				"account_applications"
			],
			"properties": {
				"account_applications": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountApplicationResponseJson"
					}
				}
			}
		},
		"CustomerJsonV310": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CrmEventsJson": {
			"required": [
				"crm_events"
			],
			"properties": {
				"crm_events": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CrmEventJson"
					}
				}
			}
		},
		"CustomerJsonV310": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"TransactionRequestWithChargeJSON210": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "4050046c-63b3-4868-8a22-14b4181d33a6"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBodyAllTypes"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"BasicAccountsJSON": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BasicAccountJSON"
					}
				}
			}
		},
		"PhysicalCardsJSON": {
			"required": [
				"cards"
			],
			"properties": {
				"cards": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PhysicalCardJSON"
					}
				}
			}
		},
		"BankJSONV220": {
			"required": [
				"id",
				"full_name",
				"short_name",
				"logo_url",
				"website_url",
				"swift_bic",
				"national_identifier",
				"bank_routing"
			],
			"properties": {
				"national_identifier": {
					"type": "string",
					"example": "UK97ZZZ1234567890"
				},
				"full_name": {
					"type": "string",
					"example": "uk"
				},
				"swift_bic": {
					"type": "string",
					"example": "IIIGGB22"
				},
				"logo_url": {
					"type": "string",
					"example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
				},
				"id": {
					"type": "string",
					"example": "gh.29.uk.x"
				},
				"short_name": {
					"type": "string",
					"example": "uk"
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				},
				"website_url": {
					"type": "string",
					"example": "https://www.example.com"
				}
			}
		},
		"AccountWebhookJson": {
			"required": [
				"account_webhook_id",
				"bank_id",
				"account_id",
				"trigger_name",
				"url",
				"http_method",
				"http_protocol",
				"created_by_user_id",
				"is_active"
			],
			"properties": {
				"created_by_user_id": {
					"type": "string",
					"example": "b1fd9b29-659d-4838-a300-ea65b65b5fb6"
				},
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"url": {
					"type": "string",
					"example": "https://localhost.openbankproject.com"
				},
				"trigger_name": {
					"type": "string",
					"example": "OnBalanceChange"
				},
				"http_protocol": {
					"type": "string",
					"example": "HTTP/1.1"
				},
				"account_webhook_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"http_method": {
					"type": "string",
					"example": "POST"
				},
				"bank_id": {
					"type": "string",
					"example": "obp-x"
				},
				"account_id": {
					"type": "string",
					"example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"BankJSON": {
			"required": [
				"id",
				"short_name",
				"full_name",
				"logo",
				"website",
				"bank_routing"
			],
			"properties": {
				"website": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"full_name": {
					"type": "string",
					"example": "full_name"
				},
				"logo": {
					"type": "string",
					"example": "logo"
				},
				"id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"short_name": {
					"type": "string",
					"example": "short_name "
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"EntitlementRequestsJSON": {
			"required": [
				"entitlement_requests"
			],
			"properties": {
				"entitlement_requests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementRequestJSON"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"CounterpartiesJsonV220": {
			"required": [
				"counterparties"
			],
			"properties": {
				"counterparties": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CounterpartyJsonV220"
					}
				}
			}
		},
		"ViewsJsonV300": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJsonV300"
					}
				}
			}
		},
		"APIInfoJSON": {
			"required": [
				"version",
				"version_status",
				"git_commit",
				"connector",
				"hosted_by"
			],
			"properties": {
				"version_status": {
					"type": "string",
					"example": "String"
				},
				"version": {
					"type": "string",
					"example": "String"
				},
				"connector": {
					"type": "string",
					"example": "String"
				},
				"hosted_by": {
					"$ref": "#/definitions/HostedBy"
				},
				"git_commit": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"TransactionsJsonV300": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJsonV300"
					}
				}
			}
		},
		"CustomerJsonV300": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"example": "19900101"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PhysicalCardsJSON": {
			"required": [
				"cards"
			],
			"properties": {
				"cards": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PhysicalCardJSON"
					}
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"EntitlementJSONs": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementJSON"
					}
				}
			}
		},
		"EntitlementRequestsJSON": {
			"required": [
				"entitlement_requests"
			],
			"properties": {
				"entitlement_requests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementRequestJSON"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AccountApplicationResponseJson": {
			"required": [
				"account_application_id",
				"product_code",
				"user",
				"customer",
				"date_of_application",
				"status"
			],
			"properties": {
				"date_of_application": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"account_application_id": {
					"type": "string",
					"example": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
				},
				"product_code": {
					"type": "string",
					"example": "saveing1"
				},
				"status": {
					"type": "string",
					"example": "REQUESTED"
				},
				"customer": {
					"$ref": "#/definitions/CustomerJsonV310"
				},
				"user": {
					"$ref": "#/definitions/ResourceUserJSON"
				}
			}
		},
		"ProductAttributeResponseWithoutBankIdJson": {
			"required": [
				"product_code",
				"product_attribute_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"product_attribute_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"product_code": {
					"type": "string",
					"example": "saving1"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"BranchJson": {
			"required": [
				"id",
				"name",
				"address",
				"location",
				"lobby",
				"drive_up",
				"meta",
				"branch_routing"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "String"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpStringJson"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyStringJson"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV140"
				}
			}
		},
		"AccountWebhooksJson": {
			"required": [
				"web_hooks"
			],
			"properties": {
				"web_hooks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountWebhookJson"
					}
				}
			}
		},
		"TransactionRequestTypesJsonV140": {
			"required": [
				"transaction_request_types"
			],
			"properties": {
				"transaction_request_types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestTypeJsonV140"
					}
				}
			}
		},
		"MetricsJson": {
			"required": [
				"metrics"
			],
			"properties": {
				"metrics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetricJson"
					}
				}
			}
		},
		"ProductAttributeResponseWithoutBankIdJson": {
			"required": [
				"product_code",
				"product_attribute_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"product_attribute_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"product_code": {
					"type": "string",
					"example": "saving1"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"CustomerJsonV210": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"RateLimitingInfoV310": {
			"required": [
				"enabled",
				"technology",
				"service_available",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"service_available": {
					"type": "boolean",
					"example": "true"
				},
				"technology": {
					"type": "string",
					"example": "REDIS"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"FXRateJsonV220": {
			"required": [
				"bank_id",
				"from_currency_code",
				"to_currency_code",
				"conversion_value",
				"inverse_conversion_value",
				"effective_date"
			],
			"properties": {
				"inverse_conversion_value": {
					"type": "number",
					"format": "double",
					"example": "0.998"
				},
				"to_currency_code": {
					"type": "string",
					"example": "GBP"
				},
				"effective_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.001"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid434"
				},
				"from_currency_code": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"ViewsJsonV300": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJsonV300"
					}
				}
			}
		},
		"BadLoginStatusJson": {
			"required": [
				"username",
				"bad_attempts_since_last_success_or_reset",
				"last_failure_date"
			],
			"properties": {
				"last_failure_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bad_attempts_since_last_success_or_reset": {
					"type": "integer",
					"format": "int32",
					"example": "0"
				},
				"username": {
					"type": "string",
					"example": "tesobe"
				}
			}
		},
		"CoreTransactionsJsonV300": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreTransactionJsonV300"
					}
				}
			}
		},
		"AdapterInfoJsonV300": {
			"required": [
				"name",
				"version",
				"git_commit",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"example": "2013-01-21T23:08:00Z"
				},
				"git_commit": {
					"type": "string",
					"example": "String"
				},
				"version": {
					"type": "string",
					"example": "String"
				},
				"name": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ConsumersJson": {
			"required": [
				"consumers"
			],
			"properties": {
				"consumers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsumerJson"
					}
				}
			}
		},
		"TransactionRequestWithChargeJSONs210": {
			"required": [
				"transaction_requests_with_charges"
			],
			"properties": {
				"transaction_requests_with_charges": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestWithChargeJSON210"
					}
				}
			}
		},
		"BanksJSON": {
			"required": [
				"banks"
			],
			"properties": {
				"banks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BankJSON"
					}
				}
			}
		},
		"TransactionTypesJsonV200": {
			"required": [
				"transaction_types"
			],
			"properties": {
				"transaction_types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionTypeJsonV200"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AccountApplicationResponseJson": {
			"required": [
				"account_application_id",
				"product_code",
				"user",
				"customer",
				"date_of_application",
				"status"
			],
			"properties": {
				"date_of_application": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"account_application_id": {
					"type": "string",
					"example": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
				},
				"product_code": {
					"type": "string",
					"example": "saveing1"
				},
				"status": {
					"type": "string",
					"example": "REQUESTED"
				},
				"customer": {
					"$ref": "#/definitions/CustomerJsonV310"
				},
				"user": {
					"$ref": "#/definitions/ResourceUserJSON"
				}
			}
		},
		"TransactionNarrativeJSON": {
			"required": [
				"narrative"
			],
			"properties": {
				"narrative": {
					"type": "string",
					"example": "narative"
				}
			}
		},
		"CreditLimitOrderJson": {
			"required": [
				"rank_amount_1",
				"nominal_interest_1",
				"rank_amount_2",
				"nominal_interest_2"
			],
			"properties": {
				"nominal_interest_2": {
					"type": "string",
					"example": "String"
				},
				"rank_amount_2": {
					"type": "string",
					"example": "String"
				},
				"nominal_interest_1": {
					"type": "string",
					"example": "String"
				},
				"rank_amount_1": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ViewJSONV121": {
			"required": [
				"id",
				"short_name",
				"description",
				"is_public",
				"alias",
				"hide_metadata_if_alias_used",
				"can_add_comment",
				"can_add_corporate_location",
				"can_add_image",
				"can_add_image_url",
				"can_add_more_info",
				"can_add_open_corporates_url",
				"can_add_physical_location",
				"can_add_private_alias",
				"can_add_public_alias",
				"can_add_tag",
				"can_add_url",
				"can_add_where_tag",
				"can_delete_comment",
				"can_delete_corporate_location",
				"can_delete_image",
				"can_delete_physical_location",
				"can_delete_tag",
				"can_delete_where_tag",
				"can_edit_owner_comment",
				"can_see_bank_account_balance",
				"can_see_bank_account_bank_name",
				"can_see_bank_account_currency",
				"can_see_bank_account_iban",
				"can_see_bank_account_label",
				"can_see_bank_account_national_identifier",
				"can_see_bank_account_number",
				"can_see_bank_account_owners",
				"can_see_bank_account_swift_bic",
				"can_see_bank_account_type",
				"can_see_comments",
				"can_see_corporate_location",
				"can_see_image_url",
				"can_see_images",
				"can_see_more_info",
				"can_see_open_corporates_url",
				"can_see_other_account_bank_name",
				"can_see_other_account_iban",
				"can_see_other_account_kind",
				"can_see_other_account_metadata",
				"can_see_other_account_national_identifier",
				"can_see_other_account_number",
				"can_see_other_account_swift_bic",
				"can_see_owner_comment",
				"can_see_physical_location",
				"can_see_private_alias",
				"can_see_public_alias",
				"can_see_tags",
				"can_see_transaction_amount",
				"can_see_transaction_balance",
				"can_see_transaction_currency",
				"can_see_transaction_description",
				"can_see_transaction_finish_date",
				"can_see_transaction_metadata",
				"can_see_transaction_other_bank_account",
				"can_see_transaction_start_date",
				"can_see_transaction_this_bank_account",
				"can_see_transaction_type",
				"can_see_url",
				"can_see_where_tag"
			],
			"properties": {
				"can_see_transaction_start_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_this_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_owners": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_edit_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"can_see_transaction_other_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_comments": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_kind": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_label": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_currency": {
					"type": "boolean",
					"example": "true"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_finish_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_images": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_currency": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"alias": {
					"type": "string",
					"example": "None"
				},
				"can_add_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"id": {
					"type": "string",
					"example": "123"
				},
				"can_see_bank_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_tags": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"can_delete_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_amount": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_description": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"ProductAttributeResponseWithoutBankIdJson": {
			"required": [
				"product_code",
				"product_attribute_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"product_attribute_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"product_code": {
					"type": "string",
					"example": "saving1"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"AccountsIdsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountIdJson"
					}
				}
			}
		},
		"TransactionRequestTypesJSON": {
			"required": [
				"transaction_request_types"
			],
			"properties": {
				"transaction_request_types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionRequestTypeJSONV210"
					}
				}
			}
		},
		"BranchJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up",
				"branch_routing",
				"is_accessible",
				"accessibleFeatures",
				"branch_type",
				"more_info",
				"phone_number"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Branch by the Lake"
				},
				"phone_number": {
					"type": "string",
					"example": "+381631954907"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_type": {
					"type": "string",
					"example": "Full service store"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpJsonV330"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "branch-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyJsonV330"
				},
				"accessibleFeatures": {
					"type": "string",
					"example": "wheelchair, atm usuable by the visually impaired"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				}
			}
		},
		"CustomerAddressesJsonV310": {
			"required": [
				"addresses"
			],
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerAddressJsonV310"
					}
				}
			}
		},
		"ModeratedCoreAccountJsonV300": {
			"required": [
				"id",
				"bank_id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"account_routings",
				"account_rules"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "String"
				},
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"account_rules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRuleJsonV300"
					}
				}
			}
		},
		"TransactionJSON": {
			"required": [
				"id",
				"this_account",
				"other_account",
				"details",
				"metadata"
			],
			"properties": {
				"this_account": {
					"$ref": "#/definitions/ThisAccountJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"details": {
					"$ref": "#/definitions/TransactionDetailsJSON"
				},
				"metadata": {
					"$ref": "#/definitions/TransactionMetadataJSON"
				},
				"other_account": {
					"$ref": "#/definitions/OtherAccountJSON"
				}
			}
		},
		"TransactionRequestWithChargeJson": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "82f92531-9c63-4246-abfc-96c20ec46188"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBody"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "string",
					"example": "666666-9c63-4246-abfc-96c20ec46188"
				}
			}
		},
		"EntitlementRequestJSON": {
			"required": [
				"entitlement_request_id",
				"user",
				"role_name",
				"bank_id",
				"created"
			],
			"properties": {
				"entitlement_request_id": {
					"type": "string",
					"example": "6fb17583-1e49-4435-bb74-a14fe0996723"
				},
				"role_name": {
					"type": "string",
					"example": "CanQueryOtherUser"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"user": {
					"$ref": "#/definitions/UserJsonV200"
				},
				"created": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"CoreAccountsHeldJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountHeldJson"
					}
				}
			}
		},
		"CustomerAddressJsonV310": {
			"required": [
				"customer_address_id",
				"customer_id",
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code",
				"tags",
				"status",
				"insert_date"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"customer_id": {
					"type": "string",
					"example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"insert_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"customer_address_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"status": {
					"type": "string",
					"example": "OK"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"OtherAccountMetadataJSON": {
			"required": [
				"public_alias",
				"private_alias",
				"more_info",
				"URL",
				"image_URL",
				"open_corporates_URL",
				"corporate_location",
				"physical_location"
			],
			"properties": {
				"public_alias": {
					"type": "string",
					"example": "NONE"
				},
				"image_URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"physical_location": {
					"$ref": "#/definitions/LocationJSONV121"
				},
				"private_alias": {
					"type": "string",
					"example": "NONE"
				},
				"URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"more_info": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"corporate_location": {
					"$ref": "#/definitions/LocationJSONV121"
				},
				"open_corporates_URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TransactionRequestWithChargeJSON210": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "4050046c-63b3-4868-8a22-14b4181d33a6"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBodyAllTypes"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"CounterpartyWithMetadataJson": {
			"required": [
				"name",
				"description",
				"created_by_user_id",
				"this_bank_id",
				"this_account_id",
				"this_view_id",
				"counterparty_id",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"other_branch_routing_scheme",
				"other_branch_routing_address",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_account_secondary_routing_scheme",
				"other_account_secondary_routing_address",
				"is_beneficiary",
				"bespoke",
				"metadata"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "7987987-2348987-234234"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "accountNumber"
				},
				"created_by_user_id": {
					"type": "string",
					"example": "49e1e147-64c1-4823-ad9f-89efcd02a9fa"
				},
				"name": {
					"type": "string",
					"example": "CounterpartyName"
				},
				"other_account_secondary_routing_address": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "My landlord"
				},
				"other_branch_routing_address": {
					"type": "string",
					"example": "10010"
				},
				"bespoke": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostCounterpartyBespokeJson"
					}
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "bankCode"
				},
				"other_branch_routing_scheme": {
					"type": "string",
					"example": "branchNumber"
				},
				"this_account_id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"this_view_id": {
					"type": "string",
					"example": "owner"
				},
				"metadata": {
					"$ref": "#/definitions/CounterpartyMetadataJson"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "10"
				},
				"this_bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"counterparty_id": {
					"type": "string",
					"example": "1d65db7c-a7b2-4839-af41-958276ab7790"
				},
				"other_account_secondary_routing_scheme": {
					"type": "string",
					"example": "accountId"
				}
			}
		},
		"EntitlementJSONs": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementJSON"
					}
				}
			}
		},
		"FXRateJsonV220": {
			"required": [
				"bank_id",
				"from_currency_code",
				"to_currency_code",
				"conversion_value",
				"inverse_conversion_value",
				"effective_date"
			],
			"properties": {
				"inverse_conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"to_currency_code": {
					"type": "string",
					"example": "USD"
				},
				"effective_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"conversion_value": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"bank_id": {
					"type": "string",
					"example": "bankid123"
				},
				"from_currency_code": {
					"type": "string",
					"example": "EUR"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ScopeJson": {
			"required": [
				"scope_id",
				"role_name",
				"bank_id"
			],
			"properties": {
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"role_name": {
					"type": "string",
					"example": "CanGetEntitlementsForAnyUserAtOneBank"
				},
				"scope_id": {
					"type": "string",
					"example": "88625da4-a671-435e-9d24-e5b6e5cc404f"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"EntitlementJSONs": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementJSON"
					}
				}
			}
		},
		"UsersJsonV200": {
			"required": [
				"users"
			],
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJsonV200"
					}
				}
			}
		},
		"ProductJsonV310": {
			"required": [
				"bank_id",
				"code",
				"parent_product_code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "product_code"
				},
				"product_attributes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				},
				"parent_product_code": {
					"type": "string",
					"example": "parent"
				}
			}
		},
		"CreditLimitOrderResponseJson": {
			"required": [
				"execution_time",
				"execution_date",
				"token",
				"short_reference"
			],
			"properties": {
				"short_reference": {
					"type": "string",
					"example": "String"
				},
				"token": {
					"type": "string",
					"example": "String"
				},
				"execution_date": {
					"type": "string",
					"example": "String"
				},
				"execution_time": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"GlossaryItemsJsonV300": {
			"required": [
				"glossary_items"
			],
			"properties": {
				"glossary_items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GlossaryItemJsonV300"
					}
				}
			}
		},
		"TopApisJson": {
			"required": [
				"top_apis"
			],
			"properties": {
				"top_apis": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TopApiJson"
					}
				}
			}
		},
		"AvailableRolesJSON": {
			"required": [
				"roles"
			],
			"properties": {
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvailableRoleJSON"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ConsumerJSON": {
			"required": [
				"consumer_id",
				"app_name",
				"app_type",
				"description",
				"developer_email",
				"redirect_url",
				"created_by_user_id",
				"created_by_user",
				"enabled",
				"created"
			],
			"properties": {
				"created_by_user_id": {
					"type": "string",
					"example": "123213"
				},
				"app_type": {
					"type": "string",
					"example": "Web"
				},
				"description": {
					"type": "string",
					"example": "Account Management"
				},
				"created_by_user": {
					"$ref": "#/definitions/ResourceUserJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"redirect_url": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"developer_email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"consumer_id": {
					"type": "integer",
					"format": "int64",
					"example": "1213"
				},
				"app_name": {
					"type": "string",
					"example": "SOFI"
				},
				"created": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"BranchesJsonV300": {
			"required": [
				"branches"
			],
			"properties": {
				"branches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BranchJsonV300"
					}
				}
			}
		},
		"PhysicalCardJSON": {
			"required": [
				"bank_id",
				"bank_card_number",
				"name_on_card",
				"issue_number",
				"serial_number",
				"valid_from_date",
				"expires_date",
				"enabled",
				"cancelled",
				"on_hot_list",
				"technology",
				"networks",
				"allows",
				"account",
				"replacement",
				"pin_reset",
				"collected",
				"posted"
			],
			"properties": {
				"allows": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"expires_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"networks": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"issue_number": {
					"type": "string",
					"example": "String"
				},
				"replacement": {
					"$ref": "#/definitions/ReplacementJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"collected": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"technology": {
					"type": "string",
					"example": "String"
				},
				"cancelled": {
					"type": "boolean",
					"example": "true"
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"pin_reset": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PinResetJSON"
					}
				},
				"serial_number": {
					"type": "string",
					"example": "String"
				},
				"account": {
					"$ref": "#/definitions/AccountJSON"
				},
				"valid_from_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bank_card_number": {
					"type": "string",
					"example": "String"
				},
				"name_on_card": {
					"type": "string",
					"example": "String"
				},
				"posted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"on_hot_list": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"UserAuthContextJson": {
			"required": [
				"user_auth_context_id",
				"user_id",
				"key",
				"value"
			],
			"properties": {
				"value": {
					"type": "string",
					"example": "78987432"
				},
				"key": {
					"type": "string",
					"example": "CUSTOMER_NUMBER"
				},
				"user_id": {
					"type": "string",
					"example": "qieuriopwoir987203984729384ipeiu"
				},
				"user_auth_context_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				}
			}
		},
		"ProductCollectionsJsonV310": {
			"required": [
				"product_collection"
			],
			"properties": {
				"product_collection": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductCollectionJsonV310"
					}
				}
			}
		},
		"MeetingJsonV310": {
			"required": [
				"meeting_id",
				"provider_id",
				"purpose_id",
				"bank_id",
				"present",
				"keys",
				"when",
				"creator",
				"invitees"
			],
			"properties": {
				"present": {
					"$ref": "#/definitions/MeetingPresentJson"
				},
				"provider_id": {
					"type": "string",
					"example": "String, eg: tokbox"
				},
				"creator": {
					"$ref": "#/definitions/ContactDetailsJson"
				},
				"invitees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InviteeJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"purpose_id": {
					"type": "string",
					"example": "String, eg: onboarding"
				},
				"when": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"meeting_id": {
					"type": "string",
					"example": "UUID-String"
				},
				"keys": {
					"$ref": "#/definitions/MeetingKeysJson"
				}
			}
		},
		"AccountApplicationResponseJson": {
			"required": [
				"account_application_id",
				"product_code",
				"user",
				"customer",
				"date_of_application",
				"status"
			],
			"properties": {
				"date_of_application": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"account_application_id": {
					"type": "string",
					"example": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
				},
				"product_code": {
					"type": "string",
					"example": "saveing1"
				},
				"status": {
					"type": "string",
					"example": "REQUESTED"
				},
				"customer": {
					"$ref": "#/definitions/CustomerJsonV310"
				},
				"user": {
					"$ref": "#/definitions/ResourceUserJSON"
				}
			}
		},
		"OtherAccountJSON": {
			"required": [
				"id",
				"holder",
				"number",
				"kind",
				"IBAN",
				"swift_bic",
				"bank",
				"metadata"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "123"
				},
				"IBAN": {
					"type": "string",
					"example": "UK234DB"
				},
				"swift_bic": {
					"type": "string",
					"example": "UK12321DB"
				},
				"holder": {
					"$ref": "#/definitions/AccountHolderJSON"
				},
				"bank": {
					"$ref": "#/definitions/MinimalBankJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"metadata": {
					"$ref": "#/definitions/OtherAccountMetadataJSON"
				},
				"kind": {
					"type": "string",
					"example": "3456"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"BasicAccountsJSON": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BasicAccountJSON"
					}
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"ProductCollectionJsonTreeV310": {
			"required": [
				"collection_code",
				"products"
			],
			"properties": {
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductJsonV310"
					}
				},
				"collection_code": {
					"type": "string",
					"example": "A"
				}
			}
		},
		"CreditCardOrderStatusResponseJson": {
			"required": [
				"cards"
			],
			"properties": {
				"cards": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CardObjectJson"
					}
				}
			}
		},
		"UsersJsonV200": {
			"required": [
				"users"
			],
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJsonV200"
					}
				}
			}
		},
		"KycMediaJSON": {
			"required": [
				"bank_id",
				"customer_id",
				"id",
				"customer_number",
				"type",
				"url",
				"date",
				"relates_to_kyc_document_id",
				"relates_to_kyc_check_id"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"url": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"relates_to_kyc_document_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"relates_to_kyc_check_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"type": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"BranchJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"lobby",
				"drive_up",
				"branch_routing",
				"is_accessible",
				"accessibleFeatures",
				"branch_type",
				"more_info",
				"phone_number"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "Branch by the Lake"
				},
				"phone_number": {
					"type": "string",
					"example": "+381631954907"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"branch_type": {
					"type": "string",
					"example": "Full service store"
				},
				"branch_routing": {
					"$ref": "#/definitions/BranchRoutingJsonV141"
				},
				"drive_up": {
					"$ref": "#/definitions/DriveUpJsonV330"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "branch-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"lobby": {
					"$ref": "#/definitions/LobbyJsonV330"
				},
				"accessibleFeatures": {
					"type": "string",
					"example": "wheelchair, atm usuable by the visually impaired"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				}
			}
		},
		"AccountAttributeResponseJson": {
			"required": [
				"bank_id",
				"account_id",
				"product_code",
				"account_attribute_id",
				"name",
				"type",
				"value"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "OVERDRAFT_START_DATE"
				},
				"account_attribute_id": {
					"type": "string",
					"example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
				},
				"product_code": {
					"type": "string",
					"example": "saving1"
				},
				"bank_id": {
					"type": "string",
					"example": "123"
				},
				"account_id": {
					"type": "string",
					"example": "456"
				},
				"type": {
					"type": "string",
					"example": "DATE_WITH_DAY"
				},
				"value": {
					"type": "string",
					"example": "2012-04-23"
				}
			}
		},
		"UserCustomerLinkJson": {
			"required": [
				"user_customer_link_id",
				"customer_id",
				"user_id",
				"date_inserted",
				"is_active"
			],
			"properties": {
				"is_active": {
					"type": "boolean",
					"example": "true"
				},
				"customer_id": {
					"type": "string",
					"example": "String"
				},
				"user_id": {
					"type": "string",
					"example": "String"
				},
				"date_inserted": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"user_customer_link_id": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"ProductsJsonV310": {
			"required": [
				"products"
			],
			"properties": {
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductJsonV310"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"UsersJsonV200": {
			"required": [
				"users"
			],
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJsonV200"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ModeratedCoreAccountJsonV300": {
			"required": [
				"id",
				"bank_id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"account_routings",
				"account_rules"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "String"
				},
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"account_rules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRuleJsonV300"
					}
				}
			}
		},
		"TransactionRequestWithChargeJSON210": {
			"required": [
				"id",
				"type",
				"from",
				"details",
				"transaction_ids",
				"status",
				"start_date",
				"end_date",
				"challenge",
				"charge"
			],
			"properties": {
				"challenge": {
					"$ref": "#/definitions/ChallengeJsonV140"
				},
				"start_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"id": {
					"type": "string",
					"example": "4050046c-63b3-4868-8a22-14b4181d33a6"
				},
				"end_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"status": {
					"type": "string",
					"example": "COMPLETED"
				},
				"from": {
					"$ref": "#/definitions/TransactionRequestAccountJsonV140"
				},
				"details": {
					"$ref": "#/definitions/TransactionRequestBodyAllTypes"
				},
				"charge": {
					"$ref": "#/definitions/TransactionRequestChargeJsonV200"
				},
				"type": {
					"type": "string",
					"example": "SANDBOX_TAN"
				},
				"transaction_ids": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"ConnectorMetricsJson": {
			"required": [
				"metrics"
			],
			"properties": {
				"metrics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConnectorMetricJson"
					}
				}
			}
		},
		"KycStatusJSON": {
			"required": [
				"customer_id",
				"customer_number",
				"ok",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"ok": {
					"type": "boolean",
					"example": "true"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"TransactionImageJSON": {
			"required": [
				"id",
				"label",
				"URL",
				"date",
				"user"
			],
			"properties": {
				"URL": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"label": {
					"type": "string",
					"example": "NONE"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				}
			}
		},
		"TransactionWhereJSON": {
			"required": [
				"where"
			],
			"properties": {
				"where": {
					"$ref": "#/definitions/LocationJSONV121"
				}
			}
		},
		"TransactionsJsonV300": {
			"required": [
				"transactions"
			],
			"properties": {
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionJsonV300"
					}
				}
			}
		},
		"CreateAccountJSONV220": {
			"required": [
				"user_id",
				"label",
				"type",
				"balance",
				"branch_id",
				"account_routing"
			],
			"properties": {
				"account_routing": {
					"$ref": "#/definitions/AccountRoutingJsonV121"
				},
				"branch_id": {
					"type": "string",
					"example": "1234"
				},
				"label": {
					"type": "string",
					"example": "Label"
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"user_id": {
					"type": "string",
					"example": "66214b8e-259e-44ad-8868-3eb47be70646"
				},
				"type": {
					"type": "string",
					"example": "CURRENT"
				}
			}
		},
		"KycCheckJSON": {
			"required": [
				"bank_id",
				"customer_id",
				"id",
				"customer_number",
				"date",
				"how",
				"staff_user_id",
				"staff_name",
				"satisfied",
				"comments"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"customer_number": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"bank_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"how": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"satisfied": {
					"type": "boolean",
					"example": "true"
				},
				"staff_user_id": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"staff_name": {
					"type": "string",
					"example": "PlaceholderString"
				},
				"comments": {
					"type": "string",
					"example": "PlaceholderString"
				}
			}
		},
		"TaxResidenceJsonV310": {
			"required": [
				"tax_residence"
			],
			"properties": {
				"tax_residence": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxResidenceV310"
					}
				}
			}
		},
		"ConsumerJSON": {
			"required": [
				"consumer_id",
				"app_name",
				"app_type",
				"description",
				"developer_email",
				"redirect_url",
				"created_by_user_id",
				"created_by_user",
				"enabled",
				"created"
			],
			"properties": {
				"created_by_user_id": {
					"type": "string",
					"example": "123213"
				},
				"app_type": {
					"type": "string",
					"example": "Web"
				},
				"description": {
					"type": "string",
					"example": "Account Management"
				},
				"created_by_user": {
					"$ref": "#/definitions/ResourceUserJSON"
				},
				"enabled": {
					"type": "boolean",
					"example": "true"
				},
				"redirect_url": {
					"type": "string",
					"example": "www.openbankproject.com"
				},
				"developer_email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"consumer_id": {
					"type": "integer",
					"format": "int64",
					"example": "1213"
				},
				"app_name": {
					"type": "string",
					"example": "SOFI"
				},
				"created": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"AtmJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday",
				"is_accessible",
				"located_at",
				"more_info",
				"has_deposit_capability"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"name": {
					"type": "string",
					"example": "Atm by the Lake"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"has_deposit_capability": {
					"type": "string",
					"example": "true"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "atm-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"located_at": {
					"type": "string",
					"example": "Full service store"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"AdapterInfoJsonV300": {
			"required": [
				"name",
				"version",
				"git_commit",
				"date"
			],
			"properties": {
				"date": {
					"type": "string",
					"example": "2013-01-21T23:08:00Z"
				},
				"git_commit": {
					"type": "string",
					"example": "String"
				},
				"version": {
					"type": "string",
					"example": "String"
				},
				"name": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"ViewsJSONV121": {
			"required": [
				"views"
			],
			"properties": {
				"views": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViewJSONV121"
					}
				}
			}
		},
		"TransactionTagJSON": {
			"required": [
				"id",
				"value",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"value": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"CustomerJsonV310": {
			"required": [
				"bank_id",
				"customer_id",
				"customer_number",
				"legal_name",
				"mobile_phone_number",
				"email",
				"face_image",
				"date_of_birth",
				"relationship_status",
				"dependants",
				"dob_of_dependants",
				"highest_education_attained",
				"employment_status",
				"kyc_status",
				"last_ok_date",
				"title",
				"branchId",
				"nameSuffix"
			],
			"properties": {
				"customer_id": {
					"type": "string",
					"example": "123"
				},
				"email": {
					"type": "string",
					"example": "contact@tesobe.com"
				},
				"mobile_phone_number": {
					"type": "string",
					"example": "123"
				},
				"customer_number": {
					"type": "string",
					"example": "123"
				},
				"highest_education_attained": {
					"type": "string",
					"example": "123"
				},
				"branchId": {
					"type": "string",
					"example": "12314"
				},
				"dob_of_dependants": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "bankid1234"
				},
				"date_of_birth": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"nameSuffix": {
					"type": "string",
					"example": "Sr"
				},
				"credit_rating": {
					"$ref": "#/definitions/CustomerCreditRatingJSON"
				},
				"last_ok_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"employment_status": {
					"type": "string",
					"example": "123"
				},
				"legal_name": {
					"type": "string",
					"example": "legal_name"
				},
				"credit_limit": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"title": {
					"type": "string",
					"example": "Dr."
				},
				"face_image": {
					"$ref": "#/definitions/CustomerFaceImageJson"
				},
				"dependants": {
					"type": "integer",
					"format": "int32",
					"example": "123"
				},
				"relationship_status": {
					"type": "string",
					"example": "123"
				},
				"kyc_status": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"MeetingsJsonV310": {
			"required": [
				"meetings"
			],
			"properties": {
				"meetings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MeetingJsonV310"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"AtmJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday",
				"is_accessible",
				"located_at",
				"more_info",
				"has_deposit_capability"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"name": {
					"type": "string",
					"example": "Atm by the Lake"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"has_deposit_capability": {
					"type": "string",
					"example": "true"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "atm-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"located_at": {
					"type": "string",
					"example": "Full service store"
				}
			}
		},
		"OtherAccountsJsonV300": {
			"required": [
				"other_accounts"
			],
			"properties": {
				"other_accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OtherAccountJsonV300"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"BasicAccountsJSON": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BasicAccountJSON"
					}
				}
			}
		},
		"ObpApiLoopbackJson": {
			"required": [
				"connector_version",
				"git_commit",
				"duration_time"
			],
			"properties": {
				"duration_time": {
					"type": "string",
					"example": "10 ms"
				},
				"git_commit": {
					"type": "string",
					"example": "f0acd4be14cdcb94be3433ec95c1ad65228812a0"
				},
				"connector_version": {
					"type": "string",
					"example": "kafka_vSept2018"
				}
			}
		},
		"MessageDocsJson": {
			"required": [
				"message_docs"
			],
			"properties": {
				"message_docs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MessageDocJson"
					}
				}
			}
		},
		"CheckFundsAvailableJson": {
			"required": [
				"answer",
				"date",
				"available_funds_request_id"
			],
			"properties": {
				"available_funds_request_id": {
					"type": "string",
					"example": "c4ykz59svsr9b7fmdxk8ezs7"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Mon Mar 11 13:02:52 UTC 2019"
				},
				"answer": {
					"type": "string",
					"example": "yes"
				}
			}
		},
		"MeetingJsonV310": {
			"required": [
				"meeting_id",
				"provider_id",
				"purpose_id",
				"bank_id",
				"present",
				"keys",
				"when",
				"creator",
				"invitees"
			],
			"properties": {
				"present": {
					"$ref": "#/definitions/MeetingPresentJson"
				},
				"provider_id": {
					"type": "string",
					"example": "String, eg: tokbox"
				},
				"creator": {
					"$ref": "#/definitions/ContactDetailsJson"
				},
				"invitees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InviteeJson"
					}
				},
				"bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"purpose_id": {
					"type": "string",
					"example": "String, eg: onboarding"
				},
				"when": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"meeting_id": {
					"type": "string",
					"example": "UUID-String"
				},
				"keys": {
					"$ref": "#/definitions/MeetingKeysJson"
				}
			}
		},
		"ConfigurationJSON": {
			"required": [
				"akka",
				"elastic_search",
				"cache"
			],
			"properties": {
				"cache": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CachedFunctionJSON"
					}
				},
				"elastic_search": {
					"$ref": "#/definitions/ElasticSearchJSON"
				},
				"akka": {
					"$ref": "#/definitions/AkkaJSON"
				}
			}
		},
		"TransactionType": {
			"required": [
				"id",
				"bankId",
				"shortCode",
				"summary",
				"description",
				"charge"
			],
			"properties": {
				"shortCode": {
					"type": "string",
					"example": "80080"
				},
				"description": {
					"type": "string",
					"example": "This is the sandbox mode, charging litter money."
				},
				"id": {
					"$ref": "#/definitions/TransactionTypeId"
				},
				"charge": {
					"$ref": "#/definitions/AmountOfMoney"
				},
				"bankId": {
					"$ref": "#/definitions/BankId"
				},
				"summary": {
					"type": "string",
					"example": "SANSANDBOX_TAN"
				}
			}
		},
		"ConsumersJson": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsumerJSON"
					}
				}
			}
		},
		"AggregateMetricJSON": {
			"required": [
				"count",
				"average_response_time",
				"minimum_response_time",
				"maximum_response_time"
			],
			"properties": {
				"maximum_response_time": {
					"type": "number",
					"format": "double",
					"example": "9039.0"
				},
				"minimum_response_time": {
					"type": "number",
					"format": "double",
					"example": "1.0"
				},
				"average_response_time": {
					"type": "number",
					"format": "double",
					"example": "65.21"
				},
				"count": {
					"type": "integer",
					"format": "int32",
					"example": "7076"
				}
			}
		},
		"UserJsonV200": {
			"required": [
				"user_id",
				"email",
				"provider_id",
				"provider",
				"username",
				"entitlements"
			],
			"properties": {
				"provider": {
					"type": "string",
					"example": "OBP"
				},
				"email": {
					"type": "string",
					"example": "robert.x.0.gh@example.com"
				},
				"username": {
					"type": "string",
					"example": "robert.x.0.gh"
				},
				"provider_id": {
					"type": "string",
					"example": "OBP"
				},
				"user_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"entitlements": {
					"$ref": "#/definitions/EntitlementJSONs"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"TaxResidenceJsonV310": {
			"required": [
				"tax_residence"
			],
			"properties": {
				"tax_residence": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxResidenceV310"
					}
				}
			}
		},
		"CounterpartyWithMetadataJson": {
			"required": [
				"name",
				"description",
				"created_by_user_id",
				"this_bank_id",
				"this_account_id",
				"this_view_id",
				"counterparty_id",
				"other_bank_routing_scheme",
				"other_bank_routing_address",
				"other_branch_routing_scheme",
				"other_branch_routing_address",
				"other_account_routing_scheme",
				"other_account_routing_address",
				"other_account_secondary_routing_scheme",
				"other_account_secondary_routing_address",
				"is_beneficiary",
				"bespoke",
				"metadata"
			],
			"properties": {
				"other_account_routing_address": {
					"type": "string",
					"example": "7987987-2348987-234234"
				},
				"other_account_routing_scheme": {
					"type": "string",
					"example": "accountNumber"
				},
				"created_by_user_id": {
					"type": "string",
					"example": "49e1e147-64c1-4823-ad9f-89efcd02a9fa"
				},
				"name": {
					"type": "string",
					"example": "CounterpartyName"
				},
				"other_account_secondary_routing_address": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"is_beneficiary": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "My landlord"
				},
				"other_branch_routing_address": {
					"type": "string",
					"example": "10010"
				},
				"bespoke": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostCounterpartyBespokeJson"
					}
				},
				"other_bank_routing_scheme": {
					"type": "string",
					"example": "bankCode"
				},
				"other_branch_routing_scheme": {
					"type": "string",
					"example": "branchNumber"
				},
				"this_account_id": {
					"type": "string",
					"example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
				},
				"this_view_id": {
					"type": "string",
					"example": "owner"
				},
				"metadata": {
					"$ref": "#/definitions/CounterpartyMetadataJson"
				},
				"other_bank_routing_address": {
					"type": "string",
					"example": "10"
				},
				"this_bank_id": {
					"type": "string",
					"example": "gh.29.uk"
				},
				"counterparty_id": {
					"type": "string",
					"example": "1d65db7c-a7b2-4839-af41-958276ab7790"
				},
				"other_account_secondary_routing_scheme": {
					"type": "string",
					"example": "accountId"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ScopeJsons": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ScopeJson"
					}
				}
			}
		},
		"OtherAccountJsonV300": {
			"required": [
				"id",
				"holder",
				"bank_routing",
				"account_routings",
				"metadata"
			],
			"properties": {
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"holder": {
					"$ref": "#/definitions/AccountHolderJSON"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"metadata": {
					"$ref": "#/definitions/OtherAccountMetadataJSON"
				},
				"bank_routing": {
					"$ref": "#/definitions/BankRoutingJsonV121"
				}
			}
		},
		"TransactionCommentsJSON": {
			"required": [
				"comments"
			],
			"properties": {
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionCommentJSON"
					}
				}
			}
		},
		"CoreAccountsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoreAccountJson"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ModeratedCoreAccountJsonV300": {
			"required": [
				"id",
				"bank_id",
				"label",
				"number",
				"owners",
				"type",
				"balance",
				"account_routings",
				"account_rules"
			],
			"properties": {
				"number": {
					"type": "string",
					"example": "String"
				},
				"account_routings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRoutingJsonV121"
					}
				},
				"label": {
					"type": "string",
					"example": "String"
				},
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserJSONV121"
					}
				},
				"balance": {
					"$ref": "#/definitions/AmountOfMoneyJsonV121"
				},
				"bank_id": {
					"type": "string",
					"example": "String"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"type": {
					"type": "string",
					"example": "String"
				},
				"account_rules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountRuleJsonV300"
					}
				}
			}
		},
		"AliasJSON": {
			"required": [
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"CallLimitJson": {
			"required": [
				"per_second_call_limit",
				"per_minute_call_limit",
				"per_hour_call_limit",
				"per_day_call_limit",
				"per_week_call_limit",
				"per_month_call_limit"
			],
			"properties": {
				"current_state": {
					"$ref": "#/definitions/None$"
				},
				"per_month_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_week_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_hour_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_second_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_minute_call_limit": {
					"type": "string",
					"example": "-1"
				},
				"per_day_call_limit": {
					"type": "string",
					"example": "-1"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"CustomerAddressJsonV310": {
			"required": [
				"customer_address_id",
				"customer_id",
				"line_1",
				"line_2",
				"line_3",
				"city",
				"county",
				"state",
				"postcode",
				"country_code",
				"tags",
				"status",
				"insert_date"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Berlin"
				},
				"line_2": {
					"type": "string",
					"example": "The Place"
				},
				"customer_id": {
					"type": "string",
					"example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
				},
				"state": {
					"type": "string",
					"example": "Brandenburg"
				},
				"insert_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"customer_address_id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				},
				"postcode": {
					"type": "string",
					"example": "13359"
				},
				"county": {
					"type": "string",
					"example": ""
				},
				"country_code": {
					"type": "string",
					"example": "DE"
				},
				"status": {
					"type": "string",
					"example": "OK"
				},
				"line_3": {
					"type": "string",
					"example": "The Hill"
				},
				"line_1": {
					"type": "string",
					"example": "No 1 the Road"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ProductTreeJsonV310": {
			"required": [
				"bank_id",
				"code",
				"name",
				"category",
				"family",
				"super_family",
				"more_info_url",
				"details",
				"description",
				"meta"
			],
			"properties": {
				"name": {
					"type": "string",
					"example": "product name"
				},
				"description": {
					"type": "string",
					"example": "Description"
				},
				"parent_product": {
					"$ref": "#/definitions/ProductTreeJsonV310"
				},
				"more_info_url": {
					"type": "string",
					"example": "www.example.com/prod1/more-info.html"
				},
				"super_family": {
					"type": "string",
					"example": "super family"
				},
				"code": {
					"type": "string",
					"example": "PRODUCT_CODE"
				},
				"bank_id": {
					"type": "string",
					"example": "testBank2"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"details": {
					"type": "string",
					"example": "Details"
				},
				"category": {
					"type": "string",
					"example": "category"
				},
				"family": {
					"type": "string",
					"example": "family"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"AtmJsonV300": {
			"required": [
				"id",
				"bank_id",
				"name",
				"address",
				"location",
				"meta",
				"monday",
				"tuesday",
				"wednesday",
				"thursday",
				"friday",
				"saturday",
				"sunday",
				"is_accessible",
				"located_at",
				"more_info",
				"has_deposit_capability"
			],
			"properties": {
				"sunday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"name": {
					"type": "string",
					"example": "Atm by the Lake"
				},
				"location": {
					"$ref": "#/definitions/LocationJsonV140"
				},
				"tuesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"wednesday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"monday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"has_deposit_capability": {
					"type": "string",
					"example": "true"
				},
				"more_info": {
					"type": "string",
					"example": "short walk to the lake from here"
				},
				"bank_id": {
					"type": "string",
					"example": "bank-id-123"
				},
				"id": {
					"type": "string",
					"example": "atm-id-123"
				},
				"meta": {
					"$ref": "#/definitions/MetaJsonV140"
				},
				"address": {
					"$ref": "#/definitions/AddressJsonV300"
				},
				"friday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"is_accessible": {
					"type": "string",
					"example": "true"
				},
				"thursday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"saturday": {
					"$ref": "#/definitions/OpeningTimesV300"
				},
				"located_at": {
					"type": "string",
					"example": "Full service store"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"SocialMediasJSON": {
			"required": [
				"checks"
			],
			"properties": {
				"checks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SocialMediaJSON"
					}
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"ModeratedCoreAccountsJsonV300": {
			"required": [
				"accounts"
			],
			"properties": {
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ModeratedCoreAccountJsonV300"
					}
				}
			}
		},
		"TransactionCommentJSON": {
			"required": [
				"id",
				"value",
				"date",
				"user"
			],
			"properties": {
				"user": {
					"$ref": "#/definitions/UserJSONV121"
				},
				"date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"value": {
					"type": "string",
					"example": "OBP"
				},
				"id": {
					"type": "string",
					"example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"EntitlementJSONs": {
			"required": [
				"list"
			],
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntitlementJSON"
					}
				}
			}
		},
		"ViewJsonV300": {
			"required": [
				"id",
				"short_name",
				"description",
				"metadata_view",
				"is_public",
				"alias",
				"hide_metadata_if_alias_used",
				"can_add_comment",
				"can_add_corporate_location",
				"can_add_image",
				"can_add_image_url",
				"can_add_more_info",
				"can_add_open_corporates_url",
				"can_add_physical_location",
				"can_add_private_alias",
				"can_add_public_alias",
				"can_add_tag",
				"can_add_url",
				"can_add_where_tag",
				"can_delete_comment",
				"can_add_counterparty",
				"can_delete_corporate_location",
				"can_delete_image",
				"can_delete_physical_location",
				"can_delete_tag",
				"can_delete_where_tag",
				"can_edit_owner_comment",
				"can_see_bank_account_balance",
				"can_query_available_funds",
				"can_see_bank_account_bank_name",
				"can_see_bank_account_currency",
				"can_see_bank_account_iban",
				"can_see_bank_account_label",
				"can_see_bank_account_national_identifier",
				"can_see_bank_account_number",
				"can_see_bank_account_owners",
				"can_see_bank_account_swift_bic",
				"can_see_bank_account_type",
				"can_see_comments",
				"can_see_corporate_location",
				"can_see_image_url",
				"can_see_images",
				"can_see_more_info",
				"can_see_open_corporates_url",
				"can_see_other_account_bank_name",
				"can_see_other_account_iban",
				"can_see_other_account_kind",
				"can_see_other_account_metadata",
				"can_see_other_account_national_identifier",
				"can_see_other_account_number",
				"can_see_other_account_swift_bic",
				"can_see_owner_comment",
				"can_see_physical_location",
				"can_see_private_alias",
				"can_see_public_alias",
				"can_see_tags",
				"can_see_transaction_amount",
				"can_see_transaction_balance",
				"can_see_transaction_currency",
				"can_see_transaction_description",
				"can_see_transaction_finish_date",
				"can_see_transaction_metadata",
				"can_see_transaction_other_bank_account",
				"can_see_transaction_start_date",
				"can_see_transaction_this_bank_account",
				"can_see_transaction_type",
				"can_see_url",
				"can_see_where_tag",
				"can_see_bank_routing_scheme",
				"can_see_bank_routing_address",
				"can_see_bank_account_routing_scheme",
				"can_see_bank_account_routing_address",
				"can_see_other_bank_routing_scheme",
				"can_see_other_bank_routing_address",
				"can_see_other_account_routing_scheme",
				"can_see_other_account_routing_address",
				"can_add_transaction_request_to_own_account",
				"can_add_transaction_request_to_any_account",
				"can_see_bank_account_credit_limit"
			],
			"properties": {
				"can_see_transaction_start_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_this_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_owners": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_edit_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_owner_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"description": {
					"type": "string",
					"example": "description"
				},
				"can_see_bank_account_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_other_bank_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_comments": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_bank_name": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_number": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_kind": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_transaction_request_to_own_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_label": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_currency": {
					"type": "boolean",
					"example": "true"
				},
				"is_public": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_finish_date": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_images": {
					"type": "boolean",
					"example": "true"
				},
				"can_query_available_funds": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_credit_limit": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_currency": {
					"type": "boolean",
					"example": "true"
				},
				"hide_metadata_if_alias_used": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"alias": {
					"type": "string",
					"example": "No"
				},
				"can_add_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_image_url": {
					"type": "boolean",
					"example": "true"
				},
				"id": {
					"type": "string",
					"example": "1234"
				},
				"can_see_bank_account_national_identifier": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_counterparty": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_transaction_request_to_any_account": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_tags": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_open_corporates_url": {
					"type": "boolean",
					"example": "true"
				},
				"short_name": {
					"type": "string",
					"example": "short_name"
				},
				"can_delete_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_more_info": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_comment": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_where_tag": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_private_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_public_alias": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_swift_bic": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_iban": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_physical_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_add_corporate_location": {
					"type": "boolean",
					"example": "true"
				},
				"can_delete_image": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_url": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_balance": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_bank_routing_address": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_balance": {
					"type": "boolean",
					"example": "true"
				},
				"metadata_view": {
					"type": "string",
					"example": "owner"
				},
				"can_see_transaction_amount": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_account_metadata": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_bank_account_type": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_other_bank_routing_scheme": {
					"type": "boolean",
					"example": "true"
				},
				"can_see_transaction_description": {
					"type": "boolean",
					"example": "true"
				}
			}
		},
		"EmptyClassJson": {
			"required": [
				"jsonString"
			],
			"properties": {
				"jsonString": {
					"type": "string",
					"example": "{}"
				}
			}
		},
		"PermissionsJSON": {
			"required": [
				"permissions"
			],
			"properties": {
				"permissions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PermissionJSON"
					}
				}
			}
		},
		"BadLoginStatusJson": {
			"required": [
				"username",
				"bad_attempts_since_last_success_or_reset",
				"last_failure_date"
			],
			"properties": {
				"last_failure_date": {
					"type": "string",
					"format": "date",
					"example": "Tue Sep 19 00:00:00 UTC 2017"
				},
				"bad_attempts_since_last_success_or_reset": {
					"type": "integer",
					"format": "int32",
					"example": "0"
				},
				"username": {
					"type": "string",
					"example": "tesobe"
				}
			}
		},
		"CreditLimitOrderJson": {
			"required": [
				"rank_amount_1",
				"nominal_interest_1",
				"rank_amount_2",
				"nominal_interest_2"
			],
			"properties": {
				"nominal_interest_2": {
					"type": "string",
					"example": "String"
				},
				"rank_amount_2": {
					"type": "string",
					"example": "String"
				},
				"nominal_interest_1": {
					"type": "string",
					"example": "String"
				},
				"rank_amount_1": {
					"type": "string",
					"example": "String"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"CustomerMessagesJson": {
			"required": [
				"messages"
			],
			"properties": {
				"messages": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerMessageJson"
					}
				}
			}
		},
		"PutEnabledJSON": {
			"required": [
				"enabled"
			],
			"properties": {
				"enabled": {
					"type": "boolean",
					"example": "false"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		},
		"SuccessMessage": {
			"required": [
				"success"
			],
			"properties": {
				"success": {
					"type": "string",
					"example": "Success"
				}
			}
		}
	}
}
